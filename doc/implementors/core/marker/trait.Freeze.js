(function() {var implementors = {};
implementors["aho_corasick"] = [{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasick.html\" title=\"struct aho_corasick::AhoCorasick\">AhoCorasick</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["aho_corasick::ahocorasick::AhoCorasick"]},{text:"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasickBuilder.html\" title=\"struct aho_corasick::AhoCorasickBuilder\">AhoCorasickBuilder</a>",synthetic:true,types:["aho_corasick::ahocorasick::AhoCorasickBuilder"]},{text:"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindIter.html\" title=\"struct aho_corasick::FindIter\">FindIter</a>&lt;'a, 'b, S&gt;",synthetic:true,types:["aho_corasick::ahocorasick::FindIter"]},{text:"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindOverlappingIter.html\" title=\"struct aho_corasick::FindOverlappingIter\">FindOverlappingIter</a>&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["aho_corasick::ahocorasick::FindOverlappingIter"]},{text:"impl&lt;'a, R, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.StreamFindIter.html\" title=\"struct aho_corasick::StreamFindIter\">StreamFindIter</a>&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["aho_corasick::ahocorasick::StreamFindIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>",synthetic:true,types:["aho_corasick::error::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Match.html\" title=\"struct aho_corasick::Match\">Match</a>",synthetic:true,types:["aho_corasick::Match"]},{text:"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.MatchKind.html\" title=\"enum aho_corasick::MatchKind\">MatchKind</a>",synthetic:true,types:["aho_corasick::ahocorasick::MatchKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.ErrorKind.html\" title=\"enum aho_corasick::ErrorKind\">ErrorKind</a>",synthetic:true,types:["aho_corasick::error::ErrorKind"]},{text:"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Builder.html\" title=\"struct aho_corasick::packed::Builder\">Builder</a>",synthetic:true,types:["aho_corasick::packed::api::Builder"]},{text:"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Config.html\" title=\"struct aho_corasick::packed::Config\">Config</a>",synthetic:true,types:["aho_corasick::packed::api::Config"]},{text:"impl&lt;'s, 'h&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.FindIter.html\" title=\"struct aho_corasick::packed::FindIter\">FindIter</a>&lt;'s, 'h&gt;",synthetic:true,types:["aho_corasick::packed::api::FindIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Searcher.html\" title=\"struct aho_corasick::packed::Searcher\">Searcher</a>",synthetic:true,types:["aho_corasick::packed::api::Searcher"]},{text:"impl Freeze for <a class=\"enum\" href=\"aho_corasick/packed/enum.MatchKind.html\" title=\"enum aho_corasick::packed::MatchKind\">MatchKind</a>",synthetic:true,types:["aho_corasick::packed::api::MatchKind"]},];
implementors["ammonia"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ammonia/struct.Builder.html\" title=\"struct ammonia::Builder\">Builder</a>&lt;'a&gt;",synthetic:true,types:["ammonia::Builder"]},{text:"impl Freeze for <a class=\"struct\" href=\"ammonia/struct.Document.html\" title=\"struct ammonia::Document\">Document</a>",synthetic:true,types:["ammonia::Document"]},{text:"impl Freeze for <a class=\"enum\" href=\"ammonia/enum.UrlRelative.html\" title=\"enum ammonia::UrlRelative\">UrlRelative</a>",synthetic:true,types:["ammonia::UrlRelative"]},];
implementors["ansi_term"] = [{text:"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Prefix.html\" title=\"struct ansi_term::Prefix\">Prefix</a>",synthetic:true,types:["ansi_term::ansi::Prefix"]},{text:"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Infix.html\" title=\"struct ansi_term::Infix\">Infix</a>",synthetic:true,types:["ansi_term::ansi::Infix"]},{text:"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Suffix.html\" title=\"struct ansi_term::Suffix\">Suffix</a>",synthetic:true,types:["ansi_term::ansi::Suffix"]},{text:"impl Freeze for <a class=\"struct\" href=\"ansi_term/struct.Style.html\" title=\"struct ansi_term::Style\">Style</a>",synthetic:true,types:["ansi_term::style::Style"]},{text:"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"ansi_term/struct.ANSIGenericString.html\" title=\"struct ansi_term::ANSIGenericString\">ANSIGenericString</a>&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a>: Freeze,&nbsp;</span>",synthetic:true,types:["ansi_term::display::ANSIGenericString"]},{text:"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"ansi_term/struct.ANSIGenericStrings.html\" title=\"struct ansi_term::ANSIGenericStrings\">ANSIGenericStrings</a>&lt;'a, S&gt;",synthetic:true,types:["ansi_term::display::ANSIGenericStrings"]},{text:"impl Freeze for <a class=\"enum\" href=\"ansi_term/enum.Colour.html\" title=\"enum ansi_term::Colour\">Colour</a>",synthetic:true,types:["ansi_term::style::Colour"]},];
implementors["atty"] = [{text:"impl Freeze for <a class=\"enum\" href=\"atty/enum.Stream.html\" title=\"enum atty::Stream\">Stream</a>",synthetic:true,types:["atty::Stream"]},];
implementors["backtrace"] = [{text:"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Frame.html\" title=\"struct backtrace::Frame\">Frame</a>",synthetic:true,types:["backtrace::backtrace::Frame"]},{text:"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Symbol.html\" title=\"struct backtrace::Symbol\">Symbol</a>",synthetic:true,types:["backtrace::symbolize::Symbol"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.SymbolName.html\" title=\"struct backtrace::SymbolName\">SymbolName</a>&lt;'a&gt;",synthetic:true,types:["backtrace::symbolize::SymbolName"]},{text:"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFmt.html\" title=\"struct backtrace::BacktraceFmt\">BacktraceFmt</a>&lt;'a, 'b&gt;",synthetic:true,types:["backtrace::print::BacktraceFmt"]},{text:"impl&lt;'fmt, 'a, 'b&gt; Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFrameFmt.html\" title=\"struct backtrace::BacktraceFrameFmt\">BacktraceFrameFmt</a>&lt;'fmt, 'a, 'b&gt;",synthetic:true,types:["backtrace::print::BacktraceFrameFmt"]},{text:"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.Backtrace.html\" title=\"struct backtrace::Backtrace\">Backtrace</a>",synthetic:true,types:["backtrace::capture::Backtrace"]},{text:"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceFrame.html\" title=\"struct backtrace::BacktraceFrame\">BacktraceFrame</a>",synthetic:true,types:["backtrace::capture::BacktraceFrame"]},{text:"impl Freeze for <a class=\"struct\" href=\"backtrace/struct.BacktraceSymbol.html\" title=\"struct backtrace::BacktraceSymbol\">BacktraceSymbol</a>",synthetic:true,types:["backtrace::capture::BacktraceSymbol"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"backtrace/enum.BytesOrWideString.html\" title=\"enum backtrace::BytesOrWideString\">BytesOrWideString</a>&lt;'a&gt;",synthetic:true,types:["backtrace::types::BytesOrWideString"]},{text:"impl Freeze for <a class=\"enum\" href=\"backtrace/enum.PrintFmt.html\" title=\"enum backtrace::PrintFmt\">PrintFmt</a>",synthetic:true,types:["backtrace::print::PrintFmt"]},];
implementors["backtrace_sys"] = [{text:"impl Freeze for <a class=\"enum\" href=\"backtrace_sys/enum.backtrace_state.html\" title=\"enum backtrace_sys::backtrace_state\">backtrace_state</a>",synthetic:true,types:["backtrace_sys::bindings::backtrace_state"]},];
implementors["base64"] = [{text:"impl Freeze for <a class=\"struct\" href=\"base64/struct.Config.html\" title=\"struct base64::Config\">Config</a>",synthetic:true,types:["base64::Config"]},{text:"impl Freeze for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>",synthetic:true,types:["base64::decode::DecodeError"]},{text:"impl Freeze for <a class=\"enum\" href=\"base64/enum.CharacterSet.html\" title=\"enum base64::CharacterSet\">CharacterSet</a>",synthetic:true,types:["base64::CharacterSet"]},{text:"impl Freeze for <a class=\"enum\" href=\"base64/enum.LineEnding.html\" title=\"enum base64::LineEnding\">LineEnding</a>",synthetic:true,types:["base64::LineEnding"]},{text:"impl Freeze for <a class=\"enum\" href=\"base64/enum.LineWrap.html\" title=\"enum base64::LineWrap\">LineWrap</a>",synthetic:true,types:["base64::LineWrap"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"base64/display/struct.Base64Display.html\" title=\"struct base64::display::Base64Display\">Base64Display</a>&lt;'a&gt;",synthetic:true,types:["base64::display::Base64Display"]},{text:"impl Freeze for <a class=\"enum\" href=\"base64/display/enum.DisplayError.html\" title=\"enum base64::display::DisplayError\">DisplayError</a>",synthetic:true,types:["base64::display::DisplayError"]},];
implementors["block_buffer"] = [{text:"impl&lt;BlockSize&gt; Freeze for <a class=\"struct\" href=\"block_buffer/struct.BlockBuffer.html\" title=\"struct block_buffer::BlockBuffer\">BlockBuffer</a>&lt;BlockSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>",synthetic:true,types:["block_buffer::BlockBuffer"]},];
implementors["block_padding"] = [{text:"impl Freeze for <a class=\"struct\" href=\"block_padding/struct.PadError.html\" title=\"struct block_padding::PadError\">PadError</a>",synthetic:true,types:["block_padding::PadError"]},{text:"impl Freeze for <a class=\"struct\" href=\"block_padding/struct.UnpadError.html\" title=\"struct block_padding::UnpadError\">UnpadError</a>",synthetic:true,types:["block_padding::UnpadError"]},{text:"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.ZeroPadding.html\" title=\"enum block_padding::ZeroPadding\">ZeroPadding</a>",synthetic:true,types:["block_padding::ZeroPadding"]},{text:"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.Pkcs7.html\" title=\"enum block_padding::Pkcs7\">Pkcs7</a>",synthetic:true,types:["block_padding::Pkcs7"]},{text:"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.AnsiX923.html\" title=\"enum block_padding::AnsiX923\">AnsiX923</a>",synthetic:true,types:["block_padding::AnsiX923"]},{text:"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.Iso7816.html\" title=\"enum block_padding::Iso7816\">Iso7816</a>",synthetic:true,types:["block_padding::Iso7816"]},{text:"impl Freeze for <a class=\"enum\" href=\"block_padding/enum.NoPadding.html\" title=\"enum block_padding::NoPadding\">NoPadding</a>",synthetic:true,types:["block_padding::NoPadding"]},];
implementors["byteorder"] = [{text:"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>",synthetic:true,types:["byteorder::BigEndian"]},{text:"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>",synthetic:true,types:["byteorder::LittleEndian"]},];
implementors["bytes"] = [{text:"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>",synthetic:true,types:["bytes::bytes::Bytes"]},{text:"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>",synthetic:true,types:["bytes::bytes::BytesMut"]},{text:"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Chain.html\" title=\"struct bytes::buf::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>",synthetic:true,types:["bytes::buf::chain::Chain"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Iter.html\" title=\"struct bytes::buf::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["bytes::buf::iter::Iter"]},{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Reader.html\" title=\"struct bytes::buf::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["bytes::buf::reader::Reader"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Take.html\" title=\"struct bytes::buf::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["bytes::buf::take::Take"]},{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Writer.html\" title=\"struct bytes::buf::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["bytes::buf::writer::Writer"]},];
implementors["c2_chacha"] = [{text:"impl Freeze for <a class=\"struct\" href=\"c2_chacha/guts/struct.ChaCha.html\" title=\"struct c2_chacha::guts::ChaCha\">ChaCha</a>",synthetic:true,types:["c2_chacha::guts::ChaCha"]},{text:"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"c2_chacha/guts/struct.State.html\" title=\"struct c2_chacha::guts::State\">State</a>&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>",synthetic:true,types:["c2_chacha::guts::State"]},];
implementors["chrono"] = [{text:"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.Date.html\" title=\"struct chrono::Date\">Date</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"type\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>",synthetic:true,types:["chrono::date::Date"]},{text:"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"type\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>",synthetic:true,types:["chrono::datetime::DateTime"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseWeekdayError.html\" title=\"struct chrono::ParseWeekdayError\">ParseWeekdayError</a>",synthetic:true,types:["chrono::ParseWeekdayError"]},{text:"impl Freeze for <a class=\"enum\" href=\"chrono/enum.SecondsFormat.html\" title=\"enum chrono::SecondsFormat\">SecondsFormat</a>",synthetic:true,types:["chrono::datetime::SecondsFormat"]},{text:"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>",synthetic:true,types:["chrono::Weekday"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>",synthetic:true,types:["chrono::offset::fixed::FixedOffset"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Local.html\" title=\"struct chrono::offset::Local\">Local</a>",synthetic:true,types:["chrono::offset::local::Local"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>",synthetic:true,types:["chrono::offset::utc::Utc"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["chrono::offset::LocalResult"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>",synthetic:true,types:["chrono::naive::date::NaiveDate"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.IsoWeek.html\" title=\"struct chrono::naive::IsoWeek\">IsoWeek</a>",synthetic:true,types:["chrono::naive::isoweek::IsoWeek"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>",synthetic:true,types:["chrono::naive::time::NaiveTime"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>",synthetic:true,types:["chrono::naive::datetime::NaiveDateTime"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.Parsed.html\" title=\"struct chrono::format::Parsed\">Parsed</a>",synthetic:true,types:["chrono::format::parsed::Parsed"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalNumeric.html\" title=\"struct chrono::format::InternalNumeric\">InternalNumeric</a>",synthetic:true,types:["chrono::format::InternalNumeric"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalFixed.html\" title=\"struct chrono::format::InternalFixed\">InternalFixed</a>",synthetic:true,types:["chrono::format::InternalFixed"]},{text:"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>",synthetic:true,types:["chrono::format::ParseError"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"chrono/format/struct.DelayedFormat.html\" title=\"struct chrono::format::DelayedFormat\">DelayedFormat</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["chrono::format::DelayedFormat"]},{text:"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Pad.html\" title=\"enum chrono::format::Pad\">Pad</a>",synthetic:true,types:["chrono::format::Pad"]},{text:"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Numeric.html\" title=\"enum chrono::format::Numeric\">Numeric</a>",synthetic:true,types:["chrono::format::Numeric"]},{text:"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Fixed.html\" title=\"enum chrono::format::Fixed\">Fixed</a>",synthetic:true,types:["chrono::format::Fixed"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;",synthetic:true,types:["chrono::format::Item"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"chrono/format/strftime/struct.StrftimeItems.html\" title=\"struct chrono::format::strftime::StrftimeItems\">StrftimeItems</a>&lt;'a&gt;",synthetic:true,types:["chrono::format::strftime::StrftimeItems"]},];
implementors["clap"] = [{text:"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"clap/struct.Arg.html\" title=\"struct clap::Arg\">Arg</a>&lt;'a, 'b&gt;",synthetic:true,types:["clap::args::arg::Arg"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.ArgGroup.html\" title=\"struct clap::ArgGroup\">ArgGroup</a>&lt;'a&gt;",synthetic:true,types:["clap::args::group::ArgGroup"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.ArgMatches.html\" title=\"struct clap::ArgMatches\">ArgMatches</a>&lt;'a&gt;",synthetic:true,types:["clap::args::arg_matches::ArgMatches"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.OsValues.html\" title=\"struct clap::OsValues\">OsValues</a>&lt;'a&gt;",synthetic:true,types:["clap::args::arg_matches::OsValues"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.SubCommand.html\" title=\"struct clap::SubCommand\">SubCommand</a>&lt;'a&gt;",synthetic:true,types:["clap::args::subcommand::SubCommand"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"clap/struct.Values.html\" title=\"struct clap::Values\">Values</a>&lt;'a&gt;",synthetic:true,types:["clap::args::arg_matches::Values"]},{text:"impl&lt;'a, 'b&gt; !Freeze for <a class=\"struct\" href=\"clap/struct.App.html\" title=\"struct clap::App\">App</a>&lt;'a, 'b&gt;",synthetic:true,types:["clap::app::App"]},{text:"impl Freeze for <a class=\"struct\" href=\"clap/struct.Error.html\" title=\"struct clap::Error\">Error</a>",synthetic:true,types:["clap::errors::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"clap/enum.ArgSettings.html\" title=\"enum clap::ArgSettings\">ArgSettings</a>",synthetic:true,types:["clap::args::settings::ArgSettings"]},{text:"impl Freeze for <a class=\"enum\" href=\"clap/enum.AppSettings.html\" title=\"enum clap::AppSettings\">AppSettings</a>",synthetic:true,types:["clap::app::settings::AppSettings"]},{text:"impl Freeze for <a class=\"enum\" href=\"clap/enum.ErrorKind.html\" title=\"enum clap::ErrorKind\">ErrorKind</a>",synthetic:true,types:["clap::errors::ErrorKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"clap/enum.Shell.html\" title=\"enum clap::Shell\">Shell</a>",synthetic:true,types:["clap::completions::shell::Shell"]},];
implementors["crossbeam_deque"] = [{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Worker.html\" title=\"struct crossbeam_deque::Worker\">Worker</a>&lt;T&gt;",synthetic:true,types:["crossbeam_deque::Worker"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Stealer.html\" title=\"struct crossbeam_deque::Stealer\">Stealer</a>&lt;T&gt;",synthetic:true,types:["crossbeam_deque::Stealer"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;",synthetic:true,types:["crossbeam_deque::Injector"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_deque/enum.Steal.html\" title=\"enum crossbeam_deque::Steal\">Steal</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["crossbeam_deque::Steal"]},];
implementors["crossbeam_epoch"] = [{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;",synthetic:true,types:["crossbeam_epoch::atomic::Atomic"]},{text:"impl&lt;'g, T, P&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.CompareAndSetError.html\" title=\"struct crossbeam_epoch::CompareAndSetError\">CompareAndSetError</a>&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["crossbeam_epoch::atomic::CompareAndSetError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;",synthetic:true,types:["crossbeam_epoch::atomic::Owned"]},{text:"impl&lt;'g, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'g, T&gt;",synthetic:true,types:["crossbeam_epoch::atomic::Shared"]},{text:"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Collector.html\" title=\"struct crossbeam_epoch::Collector\">Collector</a>",synthetic:true,types:["crossbeam_epoch::collector::Collector"]},{text:"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.LocalHandle.html\" title=\"struct crossbeam_epoch::LocalHandle\">LocalHandle</a>",synthetic:true,types:["crossbeam_epoch::collector::LocalHandle"]},{text:"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Guard.html\" title=\"struct crossbeam_epoch::Guard\">Guard</a>",synthetic:true,types:["crossbeam_epoch::guard::Guard"]},];
implementors["crossbeam_queue"] = [{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.ArrayQueue.html\" title=\"struct crossbeam_queue::ArrayQueue\">ArrayQueue</a>&lt;T&gt;",synthetic:true,types:["crossbeam_queue::array_queue::ArrayQueue"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.SegQueue.html\" title=\"struct crossbeam_queue::SegQueue\">SegQueue</a>&lt;T&gt;",synthetic:true,types:["crossbeam_queue::seg_queue::SegQueue"]},{text:"impl Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PopError.html\" title=\"struct crossbeam_queue::PopError\">PopError</a>",synthetic:true,types:["crossbeam_queue::err::PopError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PushError.html\" title=\"struct crossbeam_queue::PushError\">PushError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["crossbeam_queue::err::PushError"]},];
implementors["crossbeam_utils"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["crossbeam_utils::cache_padded::CachePadded"]},{text:"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>",synthetic:true,types:["crossbeam_utils::backoff::Backoff"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;",synthetic:true,types:["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;",synthetic:true,types:["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;",synthetic:true,types:["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;",synthetic:true,types:["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{text:"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>",synthetic:true,types:["crossbeam_utils::sync::parker::Parker"]},{text:"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>",synthetic:true,types:["crossbeam_utils::sync::parker::Unparker"]},{text:"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>",synthetic:true,types:["crossbeam_utils::sync::wait_group::WaitGroup"]},{text:"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;",synthetic:true,types:["crossbeam_utils::thread::Scope"]},{text:"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;",synthetic:true,types:["crossbeam_utils::thread::ScopedThreadBuilder"]},{text:"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;",synthetic:true,types:["crossbeam_utils::thread::ScopedJoinHandle"]},];
implementors["darling_core"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"darling_core/ast/struct.Fields.html\" title=\"struct darling_core::ast::Fields\">Fields</a>&lt;T&gt;",synthetic:true,types:["darling_core::ast::data::Fields"]},{text:"impl&lt;P, W&gt; Freeze for <a class=\"struct\" href=\"darling_core/ast/struct.Generics.html\" title=\"struct darling_core::ast::Generics\">Generics</a>&lt;P, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["darling_core::ast::generics::Generics"]},{text:"impl&lt;V, F&gt; Freeze for <a class=\"enum\" href=\"darling_core/ast/enum.Data.html\" title=\"enum darling_core::ast::Data\">Data</a>&lt;V, F&gt;",synthetic:true,types:["darling_core::ast::data::Data"]},{text:"impl Freeze for <a class=\"enum\" href=\"darling_core/ast/enum.Style.html\" title=\"enum darling_core::ast::Style\">Style</a>",synthetic:true,types:["darling_core::ast::data::Style"]},{text:"impl&lt;T, L, C&gt; Freeze for <a class=\"enum\" href=\"darling_core/ast/enum.GenericParam.html\" title=\"enum darling_core::ast::GenericParam\">GenericParam</a>&lt;T, L, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["darling_core::ast::generics::GenericParam"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.Field.html\" title=\"struct darling_core::codegen::Field\">Field</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::field::Field"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.FromMetaImpl.html\" title=\"struct darling_core::codegen::FromMetaImpl\">FromMetaImpl</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::from_meta_impl::FromMetaImpl"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.FromDeriveInputImpl.html\" title=\"struct darling_core::codegen::FromDeriveInputImpl\">FromDeriveInputImpl</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::from_derive_impl::FromDeriveInputImpl"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.FromFieldImpl.html\" title=\"struct darling_core::codegen::FromFieldImpl\">FromFieldImpl</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::from_field::FromFieldImpl"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.FromTypeParamImpl.html\" title=\"struct darling_core::codegen::FromTypeParamImpl\">FromTypeParamImpl</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::from_type_param::FromTypeParamImpl"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.FromVariantImpl.html\" title=\"struct darling_core::codegen::FromVariantImpl\">FromVariantImpl</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::from_variant_impl::FromVariantImpl"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.TraitImpl.html\" title=\"struct darling_core::codegen::TraitImpl\">TraitImpl</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::trait_impl::TraitImpl"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.Variant.html\" title=\"struct darling_core::codegen::Variant\">Variant</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::variant::Variant"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"darling_core/codegen/struct.FieldsGen.html\" title=\"struct darling_core::codegen::FieldsGen\">FieldsGen</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::variant_data::FieldsGen"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"darling_core/codegen/enum.DefaultExpression.html\" title=\"enum darling_core::codegen::DefaultExpression\">DefaultExpression</a>&lt;'a&gt;",synthetic:true,types:["darling_core::codegen::default_expr::DefaultExpression"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/error/struct.Error.html\" title=\"struct darling_core::error::Error\">Error</a>",synthetic:true,types:["darling_core::error::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/error/struct.IntoIter.html\" title=\"struct darling_core::error::IntoIter\">IntoIter</a>",synthetic:true,types:["darling_core::error::IntoIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.Core.html\" title=\"struct darling_core::options::Core\">Core</a>",synthetic:true,types:["darling_core::options::core::Core"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.FdiOptions.html\" title=\"struct darling_core::options::FdiOptions\">FdiOptions</a>",synthetic:true,types:["darling_core::options::from_derive::FdiOptions"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.FromFieldOptions.html\" title=\"struct darling_core::options::FromFieldOptions\">FromFieldOptions</a>",synthetic:true,types:["darling_core::options::from_field::FromFieldOptions"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.FromMetaOptions.html\" title=\"struct darling_core::options::FromMetaOptions\">FromMetaOptions</a>",synthetic:true,types:["darling_core::options::from_meta::FromMetaOptions"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.FromTypeParamOptions.html\" title=\"struct darling_core::options::FromTypeParamOptions\">FromTypeParamOptions</a>",synthetic:true,types:["darling_core::options::from_type_param::FromTypeParamOptions"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.FromVariantOptions.html\" title=\"struct darling_core::options::FromVariantOptions\">FromVariantOptions</a>",synthetic:true,types:["darling_core::options::from_variant::FromVariantOptions"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.InputField.html\" title=\"struct darling_core::options::InputField\">InputField</a>",synthetic:true,types:["darling_core::options::input_field::InputField"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.InputVariant.html\" title=\"struct darling_core::options::InputVariant\">InputVariant</a>",synthetic:true,types:["darling_core::options::input_variant::InputVariant"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.OuterFrom.html\" title=\"struct darling_core::options::OuterFrom\">OuterFrom</a>",synthetic:true,types:["darling_core::options::outer_from::OuterFrom"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.DataShape.html\" title=\"struct darling_core::options::DataShape\">DataShape</a>",synthetic:true,types:["darling_core::options::shape::DataShape"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/options/struct.Shape.html\" title=\"struct darling_core::options::Shape\">Shape</a>",synthetic:true,types:["darling_core::options::shape::Shape"]},{text:"impl Freeze for <a class=\"enum\" href=\"darling_core/options/enum.ForwardAttrs.html\" title=\"enum darling_core::options::ForwardAttrs\">ForwardAttrs</a>",synthetic:true,types:["darling_core::options::forward_attrs::ForwardAttrs"]},{text:"impl Freeze for <a class=\"enum\" href=\"darling_core/options/enum.DefaultExpression.html\" title=\"enum darling_core::options::DefaultExpression\">DefaultExpression</a>",synthetic:true,types:["darling_core::options::DefaultExpression"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/usage/struct.Options.html\" title=\"struct darling_core::usage::Options\">Options</a>",synthetic:true,types:["darling_core::usage::options::Options"]},{text:"impl Freeze for <a class=\"enum\" href=\"darling_core/usage/enum.Purpose.html\" title=\"enum darling_core::usage::Purpose\">Purpose</a>",synthetic:true,types:["darling_core::usage::options::Purpose"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.IdentList.html\" title=\"struct darling_core::util::IdentList\">IdentList</a>",synthetic:true,types:["darling_core::util::ident_list::IdentList"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.IdentString.html\" title=\"struct darling_core::util::IdentString\">IdentString</a>",synthetic:true,types:["darling_core::util::ident_string::IdentString"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.Ignored.html\" title=\"struct darling_core::util::Ignored\">Ignored</a>",synthetic:true,types:["darling_core::util::ignored::Ignored"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"darling_core/util/struct.SpannedValue.html\" title=\"struct darling_core::util::SpannedValue\">SpannedValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["darling_core::util::spanned_value::SpannedValue"]},{text:"impl&lt;T, O&gt; Freeze for <a class=\"struct\" href=\"darling_core/util/struct.WithOriginal.html\" title=\"struct darling_core::util::WithOriginal\">WithOriginal</a>&lt;T, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["darling_core::util::with_original::WithOriginal"]},{text:"impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.Flag.html\" title=\"struct darling_core::util::Flag\">Flag</a>",synthetic:true,types:["darling_core::util::Flag"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"darling_core/util/enum.Override.html\" title=\"enum darling_core::util::Override\">Override</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["darling_core::util::over_ride::Override"]},];
implementors["digest"] = [{text:"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidOutputSize.html\" title=\"struct digest::InvalidOutputSize\">InvalidOutputSize</a>",synthetic:true,types:["digest::errors::InvalidOutputSize"]},];
implementors["either"] = [{text:"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["either::Either"]},];
implementors["elasticlunr"] = [{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/struct.IndexBuilder.html\" title=\"struct elasticlunr::IndexBuilder\">IndexBuilder</a>",synthetic:true,types:["elasticlunr::IndexBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/struct.Index.html\" title=\"struct elasticlunr::Index\">Index</a>",synthetic:true,types:["elasticlunr::Index"]},{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/config/struct.SearchOptionsField.html\" title=\"struct elasticlunr::config::SearchOptionsField\">SearchOptionsField</a>",synthetic:true,types:["elasticlunr::config::SearchOptionsField"]},{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/config/struct.SearchOptions.html\" title=\"struct elasticlunr::config::SearchOptions\">SearchOptions</a>",synthetic:true,types:["elasticlunr::config::SearchOptions"]},{text:"impl Freeze for <a class=\"enum\" href=\"elasticlunr/config/enum.SearchBool.html\" title=\"enum elasticlunr::config::SearchBool\">SearchBool</a>",synthetic:true,types:["elasticlunr::config::SearchBool"]},{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/document_store/struct.DocumentStore.html\" title=\"struct elasticlunr::document_store::DocumentStore\">DocumentStore</a>",synthetic:true,types:["elasticlunr::document_store::DocumentStore"]},{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/inverted_index/struct.InvertedIndex.html\" title=\"struct elasticlunr::inverted_index::InvertedIndex\">InvertedIndex</a>",synthetic:true,types:["elasticlunr::inverted_index::InvertedIndex"]},{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/lang/struct.LanguageIter.html\" title=\"struct elasticlunr::lang::LanguageIter\">LanguageIter</a>",synthetic:true,types:["elasticlunr::lang::LanguageIter"]},{text:"impl Freeze for <a class=\"enum\" href=\"elasticlunr/lang/enum.Language.html\" title=\"enum elasticlunr::lang::Language\">Language</a>",synthetic:true,types:["elasticlunr::lang::Language"]},{text:"impl Freeze for <a class=\"struct\" href=\"elasticlunr/pipeline/struct.Pipeline.html\" title=\"struct elasticlunr::pipeline::Pipeline\">Pipeline</a>",synthetic:true,types:["elasticlunr::pipeline::Pipeline"]},];
implementors["env_logger"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"env_logger/struct.Env.html\" title=\"struct env_logger::Env\">Env</a>&lt;'a&gt;",synthetic:true,types:["env_logger::Env"]},{text:"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Logger.html\" title=\"struct env_logger::Logger\">Logger</a>",synthetic:true,types:["env_logger::Logger"]},{text:"impl !Freeze for <a class=\"struct\" href=\"env_logger/struct.Builder.html\" title=\"struct env_logger::Builder\">Builder</a>",synthetic:true,types:["env_logger::Builder"]},{text:"impl Freeze for <a class=\"enum\" href=\"env_logger/enum.Target.html\" title=\"enum env_logger::Target\">Target</a>",synthetic:true,types:["env_logger::fmt::writer::Target"]},{text:"impl Freeze for <a class=\"enum\" href=\"env_logger/enum.WriteStyle.html\" title=\"enum env_logger::WriteStyle\">WriteStyle</a>",synthetic:true,types:["env_logger::fmt::writer::WriteStyle"]},{text:"impl !Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Filter.html\" title=\"struct env_logger::filter::Filter\">Filter</a>",synthetic:true,types:["env_logger::filter::Filter"]},{text:"impl !Freeze for <a class=\"struct\" href=\"env_logger/filter/struct.Builder.html\" title=\"struct env_logger::filter::Builder\">Builder</a>",synthetic:true,types:["env_logger::filter::Builder"]},{text:"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Timestamp.html\" title=\"struct env_logger::fmt::Timestamp\">Timestamp</a>",synthetic:true,types:["env_logger::fmt::humantime::imp::Timestamp"]},{text:"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Style.html\" title=\"struct env_logger::fmt::Style\">Style</a>",synthetic:true,types:["env_logger::fmt::writer::termcolor::imp::Style"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.StyledValue.html\" title=\"struct env_logger::fmt::StyledValue\">StyledValue</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["env_logger::fmt::writer::termcolor::imp::StyledValue"]},{text:"impl Freeze for <a class=\"struct\" href=\"env_logger/fmt/struct.Formatter.html\" title=\"struct env_logger::fmt::Formatter\">Formatter</a>",synthetic:true,types:["env_logger::fmt::Formatter"]},{text:"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.Color.html\" title=\"enum env_logger::fmt::Color\">Color</a>",synthetic:true,types:["env_logger::fmt::writer::termcolor::imp::Color"]},{text:"impl Freeze for <a class=\"enum\" href=\"env_logger/fmt/enum.TimestampPrecision.html\" title=\"enum env_logger::fmt::TimestampPrecision\">TimestampPrecision</a>",synthetic:true,types:["env_logger::fmt::TimestampPrecision"]},];
implementors["error_chain"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"error_chain/struct.Iter.html\" title=\"struct error_chain::Iter\">Iter</a>&lt;'a&gt;",synthetic:true,types:["error_chain::Iter"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"error_chain/struct.DisplayChain.html\" title=\"struct error_chain::DisplayChain\">DisplayChain</a>&lt;'a, T&gt;",synthetic:true,types:["error_chain::DisplayChain"]},{text:"impl Freeze for <a class=\"struct\" href=\"error_chain/example_generated/struct.Error.html\" title=\"struct error_chain::example_generated::Error\">Error</a>",synthetic:true,types:["error_chain::example_generated::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"error_chain/example_generated/enum.ErrorKind.html\" title=\"enum error_chain::example_generated::ErrorKind\">ErrorKind</a>",synthetic:true,types:["error_chain::example_generated::ErrorKind"]},{text:"impl Freeze for <a class=\"struct\" href=\"error_chain/example_generated/inner/struct.Error.html\" title=\"struct error_chain::example_generated::inner::Error\">Error</a>",synthetic:true,types:["error_chain::example_generated::inner::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"error_chain/example_generated/inner/enum.ErrorKind.html\" title=\"enum error_chain::example_generated::inner::ErrorKind\">ErrorKind</a>",synthetic:true,types:["error_chain::example_generated::inner::ErrorKind"]},];
implementors["failure"] = [{text:"impl !Freeze for <a class=\"struct\" href=\"failure/struct.Backtrace.html\" title=\"struct failure::Backtrace\">Backtrace</a>",synthetic:true,types:["failure::backtrace::Backtrace"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"failure/struct.Compat.html\" title=\"struct failure::Compat\">Compat</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>",synthetic:true,types:["failure::compat::Compat"]},{text:"impl&lt;D&gt; !Freeze for <a class=\"struct\" href=\"failure/struct.Context.html\" title=\"struct failure::Context\">Context</a>&lt;D&gt;",synthetic:true,types:["failure::context::Context"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"failure/struct.SyncFailure.html\" title=\"struct failure::SyncFailure\">SyncFailure</a>&lt;T&gt;",synthetic:true,types:["failure::sync_failure::SyncFailure"]},{text:"impl Freeze for <a class=\"struct\" href=\"failure/struct.Error.html\" title=\"struct failure::Error\">Error</a>",synthetic:true,types:["failure::error::Error"]},{text:"impl&lt;'f&gt; Freeze for <a class=\"struct\" href=\"failure/struct.Causes.html\" title=\"struct failure::Causes\">Causes</a>&lt;'f&gt;",synthetic:true,types:["failure::Causes"]},];
implementors["fake_simd"] = [{text:"impl Freeze for <a class=\"struct\" href=\"fake_simd/struct.u32x4.html\" title=\"struct fake_simd::u32x4\">u32x4</a>",synthetic:true,types:["fake_simd::u32x4"]},{text:"impl Freeze for <a class=\"struct\" href=\"fake_simd/struct.u64x2.html\" title=\"struct fake_simd::u64x2\">u64x2</a>",synthetic:true,types:["fake_simd::u64x2"]},];
implementors["filetime"] = [{text:"impl Freeze for <a class=\"struct\" href=\"filetime/struct.FileTime.html\" title=\"struct filetime::FileTime\">FileTime</a>",synthetic:true,types:["filetime::FileTime"]},];
implementors["fnv"] = [{text:"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>",synthetic:true,types:["fnv::FnvHasher"]},];
implementors["futf"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"futf/struct.Codepoint.html\" title=\"struct futf::Codepoint\">Codepoint</a>&lt;'a&gt;",synthetic:true,types:["futf::Codepoint"]},{text:"impl Freeze for <a class=\"enum\" href=\"futf/enum.Meaning.html\" title=\"enum futf::Meaning\">Meaning</a>",synthetic:true,types:["futf::Meaning"]},];
implementors["generic_array"] = [{text:"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>",synthetic:true,types:["generic_array::GenericArray"]},{text:"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"generic_array/iter/struct.GenericArrayIter.html\" title=\"struct generic_array::iter::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"type\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>",synthetic:true,types:["generic_array::iter::GenericArrayIter"]},];
implementors["getopts"] = [{text:"impl Freeze for <a class=\"struct\" href=\"getopts/struct.Options.html\" title=\"struct getopts::Options\">Options</a>",synthetic:true,types:["getopts::Options"]},{text:"impl Freeze for <a class=\"struct\" href=\"getopts/struct.Matches.html\" title=\"struct getopts::Matches\">Matches</a>",synthetic:true,types:["getopts::Matches"]},{text:"impl Freeze for <a class=\"enum\" href=\"getopts/enum.ParsingStyle.html\" title=\"enum getopts::ParsingStyle\">ParsingStyle</a>",synthetic:true,types:["getopts::ParsingStyle"]},{text:"impl Freeze for <a class=\"enum\" href=\"getopts/enum.HasArg.html\" title=\"enum getopts::HasArg\">HasArg</a>",synthetic:true,types:["getopts::HasArg"]},{text:"impl Freeze for <a class=\"enum\" href=\"getopts/enum.Occur.html\" title=\"enum getopts::Occur\">Occur</a>",synthetic:true,types:["getopts::Occur"]},{text:"impl Freeze for <a class=\"enum\" href=\"getopts/enum.Fail.html\" title=\"enum getopts::Fail\">Fail</a>",synthetic:true,types:["getopts::Fail"]},];
implementors["getrandom"] = [{text:"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>",synthetic:true,types:["getrandom::error::Error"]},];
implementors["gitignore"] = [{text:"impl Freeze for <a class=\"struct\" href=\"gitignore/struct.Error.html\" title=\"struct gitignore::Error\">Error</a>",synthetic:true,types:["gitignore::error::Error"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"gitignore/struct.File.html\" title=\"struct gitignore::File\">File</a>&lt;'a&gt;",synthetic:true,types:["gitignore::file::File"]},{text:"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"gitignore/struct.Pattern.html\" title=\"struct gitignore::Pattern\">Pattern</a>&lt;'c&gt;",synthetic:true,types:["gitignore::pattern::Pattern"]},];
implementors["glob"] = [{text:"impl Freeze for <a class=\"struct\" href=\"glob/struct.Paths.html\" title=\"struct glob::Paths\">Paths</a>",synthetic:true,types:["glob::Paths"]},{text:"impl Freeze for <a class=\"struct\" href=\"glob/struct.GlobError.html\" title=\"struct glob::GlobError\">GlobError</a>",synthetic:true,types:["glob::GlobError"]},{text:"impl Freeze for <a class=\"struct\" href=\"glob/struct.PatternError.html\" title=\"struct glob::PatternError\">PatternError</a>",synthetic:true,types:["glob::PatternError"]},{text:"impl Freeze for <a class=\"struct\" href=\"glob/struct.Pattern.html\" title=\"struct glob::Pattern\">Pattern</a>",synthetic:true,types:["glob::Pattern"]},{text:"impl Freeze for <a class=\"struct\" href=\"glob/struct.MatchOptions.html\" title=\"struct glob::MatchOptions\">MatchOptions</a>",synthetic:true,types:["glob::MatchOptions"]},];
implementors["handlebars"] = [{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/struct.BlockParams.html\" title=\"struct handlebars::BlockParams\">BlockParams</a>",synthetic:true,types:["handlebars::context::BlockParams"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/struct.Context.html\" title=\"struct handlebars::Context\">Context</a>",synthetic:true,types:["handlebars::context::Context"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/struct.RenderError.html\" title=\"struct handlebars::RenderError\">RenderError</a>",synthetic:true,types:["handlebars::error::RenderError"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/struct.TemplateError.html\" title=\"struct handlebars::TemplateError\">TemplateError</a>",synthetic:true,types:["handlebars::error::TemplateError"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/struct.Handlebars.html\" title=\"struct handlebars::Handlebars\">Registry</a>",synthetic:true,types:["handlebars::registry::Registry"]},{text:"impl&lt;'reg, 'rc&gt; Freeze for <a class=\"struct\" href=\"handlebars/struct.Decorator.html\" title=\"struct handlebars::Decorator\">Directive</a>&lt;'reg, 'rc&gt;",synthetic:true,types:["handlebars::render::Directive"]},{text:"impl&lt;'reg, 'rc&gt; Freeze for <a class=\"struct\" href=\"handlebars/struct.Helper.html\" title=\"struct handlebars::Helper\">Helper</a>&lt;'reg, 'rc&gt;",synthetic:true,types:["handlebars::render::Helper"]},{text:"impl&lt;'reg&gt; Freeze for <a class=\"struct\" href=\"handlebars/struct.RenderContext.html\" title=\"struct handlebars::RenderContext\">RenderContext</a>&lt;'reg&gt;",synthetic:true,types:["handlebars::render::RenderContext"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/struct.StringWriter.html\" title=\"struct handlebars::StringWriter\">StringWriter</a>",synthetic:true,types:["handlebars::support::str::StringWriter"]},{text:"impl&lt;'reg, 'rc&gt; Freeze for <a class=\"struct\" href=\"handlebars/struct.PathAndJson.html\" title=\"struct handlebars::PathAndJson\">PathAndJson</a>&lt;'reg, 'rc&gt;",synthetic:true,types:["handlebars::value::PathAndJson"]},{text:"impl Freeze for <a class=\"enum\" href=\"handlebars/enum.TemplateFileError.html\" title=\"enum handlebars::TemplateFileError\">TemplateFileError</a>",synthetic:true,types:["handlebars::error::TemplateFileError"]},{text:"impl Freeze for <a class=\"enum\" href=\"handlebars/enum.TemplateRenderError.html\" title=\"enum handlebars::TemplateRenderError\">TemplateRenderError</a>",synthetic:true,types:["handlebars::error::TemplateRenderError"]},{text:"impl&lt;'reg, 'rc&gt; Freeze for <a class=\"enum\" href=\"handlebars/enum.ScopedJson.html\" title=\"enum handlebars::ScopedJson\">ScopedJson</a>&lt;'reg, 'rc&gt;",synthetic:true,types:["handlebars::value::ScopedJson"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/template/struct.TemplateMapping.html\" title=\"struct handlebars::template::TemplateMapping\">TemplateMapping</a>",synthetic:true,types:["handlebars::template::TemplateMapping"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/template/struct.Template.html\" title=\"struct handlebars::template::Template\">Template</a>",synthetic:true,types:["handlebars::template::Template"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/template/struct.Subexpression.html\" title=\"struct handlebars::template::Subexpression\">Subexpression</a>",synthetic:true,types:["handlebars::template::Subexpression"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/template/struct.ExpressionSpec.html\" title=\"struct handlebars::template::ExpressionSpec\">ExpressionSpec</a>",synthetic:true,types:["handlebars::template::ExpressionSpec"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/template/struct.HelperTemplate.html\" title=\"struct handlebars::template::HelperTemplate\">HelperTemplate</a>",synthetic:true,types:["handlebars::template::HelperTemplate"]},{text:"impl Freeze for <a class=\"struct\" href=\"handlebars/template/struct.DirectiveTemplate.html\" title=\"struct handlebars::template::DirectiveTemplate\">DirectiveTemplate</a>",synthetic:true,types:["handlebars::template::DirectiveTemplate"]},{text:"impl Freeze for <a class=\"enum\" href=\"handlebars/template/enum.BlockParam.html\" title=\"enum handlebars::template::BlockParam\">BlockParam</a>",synthetic:true,types:["handlebars::template::BlockParam"]},{text:"impl Freeze for <a class=\"enum\" href=\"handlebars/template/enum.Parameter.html\" title=\"enum handlebars::template::Parameter\">Parameter</a>",synthetic:true,types:["handlebars::template::Parameter"]},{text:"impl Freeze for <a class=\"enum\" href=\"handlebars/template/enum.TemplateElement.html\" title=\"enum handlebars::template::TemplateElement\">TemplateElement</a>",synthetic:true,types:["handlebars::template::TemplateElement"]},];
implementors["hashbrown"] = [{text:"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/struct.HashMap.html\" title=\"struct hashbrown::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hashbrown::map::HashMap"]},{text:"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/struct.HashSet.html\" title=\"struct hashbrown::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hashbrown::set::HashSet"]},{text:"impl Freeze for <a class=\"enum\" href=\"hashbrown/enum.CollectionAllocErr.html\" title=\"enum hashbrown::CollectionAllocErr\">CollectionAllocErr</a>",synthetic:true,types:["hashbrown::CollectionAllocErr"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;",synthetic:true,types:["hashbrown::map::Iter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["hashbrown::map::IterMut"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;",synthetic:true,types:["hashbrown::map::IntoIter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;",synthetic:true,types:["hashbrown::map::Keys"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'a, K, V&gt;",synthetic:true,types:["hashbrown::map::Values"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;",synthetic:true,types:["hashbrown::map::Drain"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["hashbrown::map::ValuesMut"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["hashbrown::map::RawEntryBuilderMut"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["hashbrown::map::RawOccupiedEntryMut"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["hashbrown::map::RawVacantEntryMut"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["hashbrown::map::RawEntryBuilder"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["hashbrown::map::OccupiedEntry"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["hashbrown::map::VacantEntry"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["hashbrown::map::RawEntryMut"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["hashbrown::map::Entry"]},{text:"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'a, K&gt;",synthetic:true,types:["hashbrown::set::Iter"]},{text:"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;",synthetic:true,types:["hashbrown::set::IntoIter"]},{text:"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'a, K&gt;",synthetic:true,types:["hashbrown::set::Drain"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;",synthetic:true,types:["hashbrown::set::Intersection"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;",synthetic:true,types:["hashbrown::set::Difference"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;",synthetic:true,types:["hashbrown::set::SymmetricDifference"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'a, T, S&gt;",synthetic:true,types:["hashbrown::set::Union"]},];
implementors["html5ever"] = [{text:"impl Freeze for <a class=\"struct\" href=\"html5ever/driver/struct.ParseOpts.html\" title=\"struct html5ever::driver::ParseOpts\">ParseOpts</a>",synthetic:true,types:["html5ever::driver::ParseOpts"]},{text:"impl&lt;Sink&gt; !Freeze for <a class=\"struct\" href=\"html5ever/driver/struct.Parser.html\" title=\"struct html5ever::driver::Parser\">Parser</a>&lt;Sink&gt;",synthetic:true,types:["html5ever::driver::Parser"]},{text:"impl Freeze for <a class=\"struct\" href=\"html5ever/serialize/struct.SerializeOpts.html\" title=\"struct html5ever::serialize::SerializeOpts\">SerializeOpts</a>",synthetic:true,types:["html5ever::serialize::SerializeOpts"]},{text:"impl&lt;Wr&gt; Freeze for <a class=\"struct\" href=\"html5ever/serialize/struct.HtmlSerializer.html\" title=\"struct html5ever::serialize::HtmlSerializer\">HtmlSerializer</a>&lt;Wr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Wr: Freeze,&nbsp;</span>",synthetic:true,types:["html5ever::serialize::HtmlSerializer"]},{text:"impl !Freeze for <a class=\"struct\" href=\"html5ever/tokenizer/struct.Doctype.html\" title=\"struct html5ever::tokenizer::Doctype\">Doctype</a>",synthetic:true,types:["html5ever::tokenizer::interface::Doctype"]},{text:"impl Freeze for <a class=\"struct\" href=\"html5ever/tokenizer/struct.Tag.html\" title=\"struct html5ever::tokenizer::Tag\">Tag</a>",synthetic:true,types:["html5ever::tokenizer::interface::Tag"]},{text:"impl Freeze for <a class=\"struct\" href=\"html5ever/tokenizer/struct.TokenizerOpts.html\" title=\"struct html5ever::tokenizer::TokenizerOpts\">TokenizerOpts</a>",synthetic:true,types:["html5ever::tokenizer::TokenizerOpts"]},{text:"impl&lt;Sink&gt; !Freeze for <a class=\"struct\" href=\"html5ever/tokenizer/struct.Tokenizer.html\" title=\"struct html5ever::tokenizer::Tokenizer\">Tokenizer</a>&lt;Sink&gt;",synthetic:true,types:["html5ever::tokenizer::Tokenizer"]},{text:"impl !Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/enum.Token.html\" title=\"enum html5ever::tokenizer::Token\">Token</a>",synthetic:true,types:["html5ever::tokenizer::interface::Token"]},{text:"impl Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/enum.TagKind.html\" title=\"enum html5ever::tokenizer::TagKind\">TagKind</a>",synthetic:true,types:["html5ever::tokenizer::interface::TagKind"]},{text:"impl&lt;Handle&gt; Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/enum.TokenSinkResult.html\" title=\"enum html5ever::tokenizer::TokenSinkResult\">TokenSinkResult</a>&lt;Handle&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Handle: Freeze,&nbsp;</span>",synthetic:true,types:["html5ever::tokenizer::interface::TokenSinkResult"]},{text:"impl&lt;Handle&gt; Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/enum.ProcessResult.html\" title=\"enum html5ever::tokenizer::ProcessResult\">ProcessResult</a>&lt;Handle&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Handle: Freeze,&nbsp;</span>",synthetic:true,types:["html5ever::tokenizer::ProcessResult"]},{text:"impl&lt;Handle&gt; Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/enum.TokenizerResult.html\" title=\"enum html5ever::tokenizer::TokenizerResult\">TokenizerResult</a>&lt;Handle&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Handle: Freeze,&nbsp;</span>",synthetic:true,types:["html5ever::tokenizer::TokenizerResult"]},{text:"impl Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/states/enum.ScriptEscapeKind.html\" title=\"enum html5ever::tokenizer::states::ScriptEscapeKind\">ScriptEscapeKind</a>",synthetic:true,types:["html5ever::tokenizer::states::ScriptEscapeKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/states/enum.DoctypeIdKind.html\" title=\"enum html5ever::tokenizer::states::DoctypeIdKind\">DoctypeIdKind</a>",synthetic:true,types:["html5ever::tokenizer::states::DoctypeIdKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/states/enum.RawKind.html\" title=\"enum html5ever::tokenizer::states::RawKind\">RawKind</a>",synthetic:true,types:["html5ever::tokenizer::states::RawKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/states/enum.AttrValueKind.html\" title=\"enum html5ever::tokenizer::states::AttrValueKind\">AttrValueKind</a>",synthetic:true,types:["html5ever::tokenizer::states::AttrValueKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"html5ever/tokenizer/states/enum.State.html\" title=\"enum html5ever::tokenizer::states::State\">State</a>",synthetic:true,types:["html5ever::tokenizer::states::State"]},{text:"impl Freeze for <a class=\"struct\" href=\"html5ever/tree_builder/struct.TreeBuilderOpts.html\" title=\"struct html5ever::tree_builder::TreeBuilderOpts\">TreeBuilderOpts</a>",synthetic:true,types:["html5ever::tree_builder::TreeBuilderOpts"]},{text:"impl&lt;Handle, Sink&gt; Freeze for <a class=\"struct\" href=\"html5ever/tree_builder/struct.TreeBuilder.html\" title=\"struct html5ever::tree_builder::TreeBuilder\">TreeBuilder</a>&lt;Handle, Sink&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Handle: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Sink: Freeze,&nbsp;</span>",synthetic:true,types:["html5ever::tree_builder::TreeBuilder"]},{text:"impl&lt;'a, Handle&gt; Freeze for <a class=\"struct\" href=\"html5ever/tree_builder/struct.ActiveFormattingIter.html\" title=\"struct html5ever::tree_builder::ActiveFormattingIter\">ActiveFormattingIter</a>&lt;'a, Handle&gt;",synthetic:true,types:["html5ever::tree_builder::ActiveFormattingIter"]},{text:"impl Freeze for <a class=\"enum\" href=\"html5ever/tree_builder/enum.PushFlag.html\" title=\"enum html5ever::tree_builder::PushFlag\">PushFlag</a>",synthetic:true,types:["html5ever::tree_builder::PushFlag"]},];
implementors["httparse"] = [{text:"impl Freeze for <a class=\"struct\" href=\"httparse/struct.InvalidChunkSize.html\" title=\"struct httparse::InvalidChunkSize\">InvalidChunkSize</a>",synthetic:true,types:["httparse::InvalidChunkSize"]},{text:"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Request.html\" title=\"struct httparse::Request\">Request</a>&lt;'headers, 'buf&gt;",synthetic:true,types:["httparse::Request"]},{text:"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Response.html\" title=\"struct httparse::Response\">Response</a>&lt;'headers, 'buf&gt;",synthetic:true,types:["httparse::Response"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Header.html\" title=\"struct httparse::Header\">Header</a>&lt;'a&gt;",synthetic:true,types:["httparse::Header"]},{text:"impl Freeze for <a class=\"enum\" href=\"httparse/enum.Error.html\" title=\"enum httparse::Error\">Error</a>",synthetic:true,types:["httparse::Error"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"httparse/enum.Status.html\" title=\"enum httparse::Status\">Status</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["httparse::Status"]},];
implementors["humantime"] = [{text:"impl Freeze for <a class=\"struct\" href=\"humantime/struct.FormattedDuration.html\" title=\"struct humantime::FormattedDuration\">FormattedDuration</a>",synthetic:true,types:["humantime::duration::FormattedDuration"]},{text:"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Duration.html\" title=\"struct humantime::Duration\">Duration</a>",synthetic:true,types:["humantime::wrapper::Duration"]},{text:"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Timestamp.html\" title=\"struct humantime::Timestamp\">Timestamp</a>",synthetic:true,types:["humantime::wrapper::Timestamp"]},{text:"impl Freeze for <a class=\"struct\" href=\"humantime/struct.Rfc3339Timestamp.html\" title=\"struct humantime::Rfc3339Timestamp\">Rfc3339Timestamp</a>",synthetic:true,types:["humantime::date::Rfc3339Timestamp"]},{text:"impl Freeze for <a class=\"enum\" href=\"humantime/enum.DurationError.html\" title=\"enum humantime::DurationError\">Error</a>",synthetic:true,types:["humantime::duration::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"humantime/enum.TimestampError.html\" title=\"enum humantime::TimestampError\">Error</a>",synthetic:true,types:["humantime::date::Error"]},];
implementors["hyper"] = [{text:"impl Freeze for <a class=\"struct\" href=\"hyper/client/struct.Client.html\" title=\"struct hyper::client::Client\">Client</a>",synthetic:true,types:["hyper::client::Client"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"hyper/client/struct.RequestBuilder.html\" title=\"struct hyper::client::RequestBuilder\">RequestBuilder</a>&lt;'a&gt;",synthetic:true,types:["hyper::client::RequestBuilder"]},{text:"impl&lt;C, S&gt; Freeze for <a class=\"struct\" href=\"hyper/client/struct.ProxyConfig.html\" title=\"struct hyper::client::ProxyConfig\">ProxyConfig</a>&lt;C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::client::ProxyConfig"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"hyper/client/enum.Body.html\" title=\"enum hyper::client::Body\">Body</a>&lt;'a&gt;",synthetic:true,types:["hyper::client::Body"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/client/enum.RedirectPolicy.html\" title=\"enum hyper::client::RedirectPolicy\">RedirectPolicy</a>",synthetic:true,types:["hyper::client::RedirectPolicy"]},{text:"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"hyper/client/pool/struct.Pool.html\" title=\"struct hyper::client::pool::Pool\">Pool</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::client::pool::Pool"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/client/pool/struct.Config.html\" title=\"struct hyper::client::pool::Config\">Config</a>",synthetic:true,types:["hyper::client::pool::Config"]},{text:"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"hyper/client/pool/struct.PooledStream.html\" title=\"struct hyper::client::pool::PooledStream\">PooledStream</a>&lt;S&gt;",synthetic:true,types:["hyper::client::pool::PooledStream"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"hyper/client/request/struct.Request.html\" title=\"struct hyper::client::request::Request\">Request</a>&lt;W&gt;",synthetic:true,types:["hyper::client::request::Request"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/client/response/struct.Response.html\" title=\"struct hyper::client::response::Response\">Response</a>",synthetic:true,types:["hyper::client::response::Response"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/error/enum.Error.html\" title=\"enum hyper::error::Error\">Error</a>",synthetic:true,types:["hyper::error::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/method/enum.Method.html\" title=\"enum hyper::method::Method\">Method</a>",synthetic:true,types:["hyper::method::Method"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.EntityTag.html\" title=\"struct hyper::header::EntityTag\">EntityTag</a>",synthetic:true,types:["hyper::header::shared::entity::EntityTag"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.HttpDate.html\" title=\"struct hyper::header::HttpDate\">HttpDate</a>",synthetic:true,types:["hyper::header::shared::httpdate::HttpDate"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Quality.html\" title=\"struct hyper::header::Quality\">Quality</a>",synthetic:true,types:["hyper::header::shared::quality_item::Quality"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hyper/header/struct.QualityItem.html\" title=\"struct hyper::header::QualityItem\">QualityItem</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::header::shared::quality_item::QualityItem"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Accept.html\" title=\"struct hyper::header::Accept\">Accept</a>",synthetic:true,types:["hyper::header::common::accept::Accept"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AccessControlAllowCredentials.html\" title=\"struct hyper::header::AccessControlAllowCredentials\">AccessControlAllowCredentials</a>",synthetic:true,types:["hyper::header::common::access_control_allow_credentials::AccessControlAllowCredentials"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AccessControlAllowHeaders.html\" title=\"struct hyper::header::AccessControlAllowHeaders\">AccessControlAllowHeaders</a>",synthetic:true,types:["hyper::header::common::access_control_allow_headers::AccessControlAllowHeaders"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AccessControlAllowMethods.html\" title=\"struct hyper::header::AccessControlAllowMethods\">AccessControlAllowMethods</a>",synthetic:true,types:["hyper::header::common::access_control_allow_methods::AccessControlAllowMethods"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AccessControlExposeHeaders.html\" title=\"struct hyper::header::AccessControlExposeHeaders\">AccessControlExposeHeaders</a>",synthetic:true,types:["hyper::header::common::access_control_expose_headers::AccessControlExposeHeaders"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AccessControlMaxAge.html\" title=\"struct hyper::header::AccessControlMaxAge\">AccessControlMaxAge</a>",synthetic:true,types:["hyper::header::common::access_control_max_age::AccessControlMaxAge"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AccessControlRequestHeaders.html\" title=\"struct hyper::header::AccessControlRequestHeaders\">AccessControlRequestHeaders</a>",synthetic:true,types:["hyper::header::common::access_control_request_headers::AccessControlRequestHeaders"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AccessControlRequestMethod.html\" title=\"struct hyper::header::AccessControlRequestMethod\">AccessControlRequestMethod</a>",synthetic:true,types:["hyper::header::common::access_control_request_method::AccessControlRequestMethod"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AcceptCharset.html\" title=\"struct hyper::header::AcceptCharset\">AcceptCharset</a>",synthetic:true,types:["hyper::header::common::accept_charset::AcceptCharset"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AcceptEncoding.html\" title=\"struct hyper::header::AcceptEncoding\">AcceptEncoding</a>",synthetic:true,types:["hyper::header::common::accept_encoding::AcceptEncoding"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AcceptLanguage.html\" title=\"struct hyper::header::AcceptLanguage\">AcceptLanguage</a>",synthetic:true,types:["hyper::header::common::accept_language::AcceptLanguage"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.AcceptRanges.html\" title=\"struct hyper::header::AcceptRanges\">AcceptRanges</a>",synthetic:true,types:["hyper::header::common::accept_ranges::AcceptRanges"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Allow.html\" title=\"struct hyper::header::Allow\">Allow</a>",synthetic:true,types:["hyper::header::common::allow::Allow"]},{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"hyper/header/struct.Authorization.html\" title=\"struct hyper::header::Authorization\">Authorization</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::header::common::authorization::Authorization"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Basic.html\" title=\"struct hyper::header::Basic\">Basic</a>",synthetic:true,types:["hyper::header::common::authorization::Basic"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Bearer.html\" title=\"struct hyper::header::Bearer\">Bearer</a>",synthetic:true,types:["hyper::header::common::authorization::Bearer"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.CacheControl.html\" title=\"struct hyper::header::CacheControl\">CacheControl</a>",synthetic:true,types:["hyper::header::common::cache_control::CacheControl"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Connection.html\" title=\"struct hyper::header::Connection\">Connection</a>",synthetic:true,types:["hyper::header::common::connection::Connection"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.ContentDisposition.html\" title=\"struct hyper::header::ContentDisposition\">ContentDisposition</a>",synthetic:true,types:["hyper::header::common::content_disposition::ContentDisposition"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.ContentLength.html\" title=\"struct hyper::header::ContentLength\">ContentLength</a>",synthetic:true,types:["hyper::header::common::content_length::ContentLength"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.ContentEncoding.html\" title=\"struct hyper::header::ContentEncoding\">ContentEncoding</a>",synthetic:true,types:["hyper::header::common::content_encoding::ContentEncoding"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.ContentLanguage.html\" title=\"struct hyper::header::ContentLanguage\">ContentLanguage</a>",synthetic:true,types:["hyper::header::common::content_language::ContentLanguage"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.ContentRange.html\" title=\"struct hyper::header::ContentRange\">ContentRange</a>",synthetic:true,types:["hyper::header::common::content_range::ContentRange"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.ContentType.html\" title=\"struct hyper::header::ContentType\">ContentType</a>",synthetic:true,types:["hyper::header::common::content_type::ContentType"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Cookie.html\" title=\"struct hyper::header::Cookie\">Cookie</a>",synthetic:true,types:["hyper::header::common::cookie::Cookie"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Date.html\" title=\"struct hyper::header::Date\">Date</a>",synthetic:true,types:["hyper::header::common::date::Date"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.ETag.html\" title=\"struct hyper::header::ETag\">ETag</a>",synthetic:true,types:["hyper::header::common::etag::ETag"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Expires.html\" title=\"struct hyper::header::Expires\">Expires</a>",synthetic:true,types:["hyper::header::common::expires::Expires"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.From.html\" title=\"struct hyper::header::From\">From</a>",synthetic:true,types:["hyper::header::common::from::From"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Host.html\" title=\"struct hyper::header::Host\">Host</a>",synthetic:true,types:["hyper::header::common::host::Host"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.IfModifiedSince.html\" title=\"struct hyper::header::IfModifiedSince\">IfModifiedSince</a>",synthetic:true,types:["hyper::header::common::if_modified_since::IfModifiedSince"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.IfUnmodifiedSince.html\" title=\"struct hyper::header::IfUnmodifiedSince\">IfUnmodifiedSince</a>",synthetic:true,types:["hyper::header::common::if_unmodified_since::IfUnmodifiedSince"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.LastModified.html\" title=\"struct hyper::header::LastModified\">LastModified</a>",synthetic:true,types:["hyper::header::common::last_modified::LastModified"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Location.html\" title=\"struct hyper::header::Location\">Location</a>",synthetic:true,types:["hyper::header::common::location::Location"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Origin.html\" title=\"struct hyper::header::Origin\">Origin</a>",synthetic:true,types:["hyper::header::common::origin::Origin"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Prefer.html\" title=\"struct hyper::header::Prefer\">Prefer</a>",synthetic:true,types:["hyper::header::common::prefer::Prefer"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.PreferenceApplied.html\" title=\"struct hyper::header::PreferenceApplied\">PreferenceApplied</a>",synthetic:true,types:["hyper::header::common::preference_applied::PreferenceApplied"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Referer.html\" title=\"struct hyper::header::Referer\">Referer</a>",synthetic:true,types:["hyper::header::common::referer::Referer"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Server.html\" title=\"struct hyper::header::Server\">Server</a>",synthetic:true,types:["hyper::header::common::server::Server"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.SetCookie.html\" title=\"struct hyper::header::SetCookie\">SetCookie</a>",synthetic:true,types:["hyper::header::common::set_cookie::SetCookie"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.StrictTransportSecurity.html\" title=\"struct hyper::header::StrictTransportSecurity\">StrictTransportSecurity</a>",synthetic:true,types:["hyper::header::common::strict_transport_security::StrictTransportSecurity"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.TransferEncoding.html\" title=\"struct hyper::header::TransferEncoding\">TransferEncoding</a>",synthetic:true,types:["hyper::header::common::transfer_encoding::TransferEncoding"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Upgrade.html\" title=\"struct hyper::header::Upgrade\">Upgrade</a>",synthetic:true,types:["hyper::header::common::upgrade::Upgrade"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Protocol.html\" title=\"struct hyper::header::Protocol\">Protocol</a>",synthetic:true,types:["hyper::header::common::upgrade::Protocol"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.UserAgent.html\" title=\"struct hyper::header::UserAgent\">UserAgent</a>",synthetic:true,types:["hyper::header::common::user_agent::UserAgent"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Link.html\" title=\"struct hyper::header::Link\">Link</a>",synthetic:true,types:["hyper::header::common::link::Link"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.LinkValue.html\" title=\"struct hyper::header::LinkValue\">LinkValue</a>",synthetic:true,types:["hyper::header::common::link::LinkValue"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/struct.Headers.html\" title=\"struct hyper::header::Headers\">Headers</a>",synthetic:true,types:["hyper::header::Headers"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"hyper/header/struct.HeadersItems.html\" title=\"struct hyper::header::HeadersItems\">HeadersItems</a>&lt;'a&gt;",synthetic:true,types:["hyper::header::HeadersItems"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"hyper/header/struct.HeaderView.html\" title=\"struct hyper::header::HeaderView\">HeaderView</a>&lt;'a&gt;",synthetic:true,types:["hyper::header::HeaderView"]},{text:"impl&lt;'a, H&gt; Freeze for <a class=\"struct\" href=\"hyper/header/struct.HeaderFormatter.html\" title=\"struct hyper::header::HeaderFormatter\">HeaderFormatter</a>&lt;'a, H&gt;",synthetic:true,types:["hyper::header::HeaderFormatter"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.Charset.html\" title=\"enum hyper::header::Charset\">Charset</a>",synthetic:true,types:["hyper::header::shared::charset::Charset"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.Encoding.html\" title=\"enum hyper::header::Encoding\">Encoding</a>",synthetic:true,types:["hyper::header::shared::encoding::Encoding"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.AccessControlAllowOrigin.html\" title=\"enum hyper::header::AccessControlAllowOrigin\">AccessControlAllowOrigin</a>",synthetic:true,types:["hyper::header::common::access_control_allow_origin::AccessControlAllowOrigin"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.RangeUnit.html\" title=\"enum hyper::header::RangeUnit\">RangeUnit</a>",synthetic:true,types:["hyper::header::common::accept_ranges::RangeUnit"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.CacheDirective.html\" title=\"enum hyper::header::CacheDirective\">CacheDirective</a>",synthetic:true,types:["hyper::header::common::cache_control::CacheDirective"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.ConnectionOption.html\" title=\"enum hyper::header::ConnectionOption\">ConnectionOption</a>",synthetic:true,types:["hyper::header::common::connection::ConnectionOption"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.DispositionType.html\" title=\"enum hyper::header::DispositionType\">DispositionType</a>",synthetic:true,types:["hyper::header::common::content_disposition::DispositionType"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.DispositionParam.html\" title=\"enum hyper::header::DispositionParam\">DispositionParam</a>",synthetic:true,types:["hyper::header::common::content_disposition::DispositionParam"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.ContentRangeSpec.html\" title=\"enum hyper::header::ContentRangeSpec\">ContentRangeSpec</a>",synthetic:true,types:["hyper::header::common::content_range::ContentRangeSpec"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.Expect.html\" title=\"enum hyper::header::Expect\">Expect</a>",synthetic:true,types:["hyper::header::common::expect::Expect"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.IfMatch.html\" title=\"enum hyper::header::IfMatch\">IfMatch</a>",synthetic:true,types:["hyper::header::common::if_match::IfMatch"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.IfNoneMatch.html\" title=\"enum hyper::header::IfNoneMatch\">IfNoneMatch</a>",synthetic:true,types:["hyper::header::common::if_none_match::IfNoneMatch"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.IfRange.html\" title=\"enum hyper::header::IfRange\">IfRange</a>",synthetic:true,types:["hyper::header::common::if_range::IfRange"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.Pragma.html\" title=\"enum hyper::header::Pragma\">Pragma</a>",synthetic:true,types:["hyper::header::common::pragma::Pragma"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.Preference.html\" title=\"enum hyper::header::Preference\">Preference</a>",synthetic:true,types:["hyper::header::common::prefer::Preference"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.Range.html\" title=\"enum hyper::header::Range\">Range</a>",synthetic:true,types:["hyper::header::common::range::Range"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.ByteRangeSpec.html\" title=\"enum hyper::header::ByteRangeSpec\">ByteRangeSpec</a>",synthetic:true,types:["hyper::header::common::range::ByteRangeSpec"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.ReferrerPolicy.html\" title=\"enum hyper::header::ReferrerPolicy\">ReferrerPolicy</a>",synthetic:true,types:["hyper::header::common::referrer_policy::ReferrerPolicy"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.ProtocolName.html\" title=\"enum hyper::header::ProtocolName\">ProtocolName</a>",synthetic:true,types:["hyper::header::common::upgrade::ProtocolName"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.Vary.html\" title=\"enum hyper::header::Vary\">Vary</a>",synthetic:true,types:["hyper::header::common::vary::Vary"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.RelationType.html\" title=\"enum hyper::header::RelationType\">RelationType</a>",synthetic:true,types:["hyper::header::common::link::RelationType"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/header/enum.MediaDesc.html\" title=\"enum hyper::header::MediaDesc\">MediaDesc</a>",synthetic:true,types:["hyper::header::common::link::MediaDesc"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/parsing/struct.ExtendedValue.html\" title=\"struct hyper::header::parsing::ExtendedValue\">ExtendedValue</a>",synthetic:true,types:["hyper::header::parsing::ExtendedValue"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/header/parsing/struct.HTTP_VALUE.html\" title=\"struct hyper::header::parsing::HTTP_VALUE\">HTTP_VALUE</a>",synthetic:true,types:["hyper::header::parsing::HTTP_VALUE"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/http/struct.RawStatus.html\" title=\"struct hyper::http::RawStatus\">RawStatus</a>",synthetic:true,types:["hyper::http::RawStatus"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/http/h1/struct.Http11Message.html\" title=\"struct hyper::http::h1::Http11Message\">Http11Message</a>",synthetic:true,types:["hyper::http::h1::Http11Message"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/http/h1/struct.Http11Protocol.html\" title=\"struct hyper::http::h1::Http11Protocol\">Http11Protocol</a>",synthetic:true,types:["hyper::http::h1::Http11Protocol"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"hyper/http/h1/struct.EndError.html\" title=\"struct hyper::http::h1::EndError\">EndError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::http::h1::EndError"]},{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"hyper/http/h1/struct.Incoming.html\" title=\"struct hyper::http::h1::Incoming\">Incoming</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::http::h1::Incoming"]},{text:"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"hyper/http/h1/enum.HttpReader.html\" title=\"enum hyper::http::h1::HttpReader\">HttpReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::http::h1::HttpReader"]},{text:"impl&lt;W&gt; Freeze for <a class=\"enum\" href=\"hyper/http/h1/enum.HttpWriter.html\" title=\"enum hyper::http::h1::HttpWriter\">HttpWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::http::h1::HttpWriter"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/http/message/struct.RequestHead.html\" title=\"struct hyper::http::message::RequestHead\">RequestHead</a>",synthetic:true,types:["hyper::http::message::RequestHead"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/http/message/struct.ResponseHead.html\" title=\"struct hyper::http::message::ResponseHead\">ResponseHead</a>",synthetic:true,types:["hyper::http::message::ResponseHead"]},{text:"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"hyper/net/struct.NetworkConnections.html\" title=\"struct hyper::net::NetworkConnections\">NetworkConnections</a>&lt;'a, N&gt;",synthetic:true,types:["hyper::net::NetworkConnections"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/net/struct.HttpListener.html\" title=\"struct hyper::net::HttpListener\">HttpListener</a>",synthetic:true,types:["hyper::net::HttpListener"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/net/struct.HttpStream.html\" title=\"struct hyper::net::HttpStream\">HttpStream</a>",synthetic:true,types:["hyper::net::HttpStream"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/net/struct.HttpConnector.html\" title=\"struct hyper::net::HttpConnector\">HttpConnector</a>",synthetic:true,types:["hyper::net::HttpConnector"]},{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"hyper/net/struct.HttpsListener.html\" title=\"struct hyper::net::HttpsListener\">HttpsListener</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::net::HttpsListener"]},{text:"impl&lt;S, C&gt; Freeze for <a class=\"struct\" href=\"hyper/net/struct.HttpsConnector.html\" title=\"struct hyper::net::HttpsConnector\">HttpsConnector</a>&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::net::HttpsConnector"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/net/enum.Fresh.html\" title=\"enum hyper::net::Fresh\">Fresh</a>",synthetic:true,types:["hyper::net::Fresh"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/net/enum.Streaming.html\" title=\"enum hyper::net::Streaming\">Streaming</a>",synthetic:true,types:["hyper::net::Streaming"]},{text:"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"hyper/net/enum.HttpsStream.html\" title=\"enum hyper::net::HttpsStream\">HttpsStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::net::HttpsStream"]},{text:"impl&lt;L&gt; Freeze for <a class=\"struct\" href=\"hyper/server/struct.Server.html\" title=\"struct hyper::server::Server\">Server</a>&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>",synthetic:true,types:["hyper::server::Server"]},{text:"impl Freeze for <a class=\"struct\" href=\"hyper/server/struct.Listening.html\" title=\"struct hyper::server::Listening\">Listening</a>",synthetic:true,types:["hyper::server::Listening"]},{text:"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"hyper/server/request/struct.Request.html\" title=\"struct hyper::server::request::Request\">Request</a>&lt;'a, 'b&gt;",synthetic:true,types:["hyper::server::request::Request"]},{text:"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"hyper/server/response/struct.Response.html\" title=\"struct hyper::server::response::Response\">Response</a>&lt;'a, W&gt;",synthetic:true,types:["hyper::server::response::Response"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/status/enum.StatusCode.html\" title=\"enum hyper::status::StatusCode\">StatusCode</a>",synthetic:true,types:["hyper::status::StatusCode"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/status/enum.StatusClass.html\" title=\"enum hyper::status::StatusClass\">StatusClass</a>",synthetic:true,types:["hyper::status::StatusClass"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/uri/enum.RequestUri.html\" title=\"enum hyper::uri::RequestUri\">RequestUri</a>",synthetic:true,types:["hyper::uri::RequestUri"]},{text:"impl Freeze for <a class=\"enum\" href=\"hyper/version/enum.HttpVersion.html\" title=\"enum hyper::version::HttpVersion\">HttpVersion</a>",synthetic:true,types:["hyper::version::HttpVersion"]},];
implementors["ident_case"] = [{text:"impl Freeze for <a class=\"enum\" href=\"ident_case/enum.RenameRule.html\" title=\"enum ident_case::RenameRule\">RenameRule</a>",synthetic:true,types:["ident_case::RenameRule"]},];
implementors["idna"] = [{text:"impl Freeze for <a class=\"struct\" href=\"idna/struct.Config.html\" title=\"struct idna::Config\">Config</a>",synthetic:true,types:["idna::uts46::Config"]},{text:"impl Freeze for <a class=\"struct\" href=\"idna/struct.Errors.html\" title=\"struct idna::Errors\">Errors</a>",synthetic:true,types:["idna::uts46::Errors"]},];
implementors["include_dir"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"include_dir/struct.Dir.html\" title=\"struct include_dir::Dir\">Dir</a>&lt;'a&gt;",synthetic:true,types:["include_dir::dir::Dir"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"include_dir/struct.File.html\" title=\"struct include_dir::File\">File</a>&lt;'a&gt;",synthetic:true,types:["include_dir::file::File"]},];
implementors["inotify"] = [{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"inotify/struct.Event.html\" title=\"struct inotify::Event\">Event</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["inotify::events::Event"]},{text:"impl Freeze for <a class=\"struct\" href=\"inotify/struct.EventMask.html\" title=\"struct inotify::EventMask\">EventMask</a>",synthetic:true,types:["inotify::events::EventMask"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"inotify/struct.Events.html\" title=\"struct inotify::Events\">Events</a>&lt;'a&gt;",synthetic:true,types:["inotify::events::Events"]},{text:"impl Freeze for <a class=\"struct\" href=\"inotify/struct.Inotify.html\" title=\"struct inotify::Inotify\">Inotify</a>",synthetic:true,types:["inotify::inotify::Inotify"]},{text:"impl Freeze for <a class=\"struct\" href=\"inotify/struct.WatchDescriptor.html\" title=\"struct inotify::WatchDescriptor\">WatchDescriptor</a>",synthetic:true,types:["inotify::watches::WatchDescriptor"]},{text:"impl Freeze for <a class=\"struct\" href=\"inotify/struct.WatchMask.html\" title=\"struct inotify::WatchMask\">WatchMask</a>",synthetic:true,types:["inotify::watches::WatchMask"]},];
implementors["inotify_sys"] = [{text:"impl Freeze for <a class=\"struct\" href=\"inotify_sys/struct.inotify_event.html\" title=\"struct inotify_sys::inotify_event\">inotify_event</a>",synthetic:true,types:["inotify_sys::inotify_event"]},];
implementors["iovec"] = [{text:"impl Freeze for <a class=\"struct\" href=\"iovec/struct.IoVec.html\" title=\"struct iovec::IoVec\">IoVec</a>",synthetic:true,types:["iovec::IoVec"]},];
implementors["iron"] = [{text:"impl Freeze for <a class=\"struct\" href=\"iron/struct.Url.html\" title=\"struct iron::Url\">Url</a>",synthetic:true,types:["iron::request::url::Url"]},{text:"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"iron/struct.Iron.html\" title=\"struct iron::Iron\">Iron</a>&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,&nbsp;</span>",synthetic:true,types:["iron::iron::Iron"]},{text:"impl Freeze for <a class=\"struct\" href=\"iron/struct.Timeouts.html\" title=\"struct iron::Timeouts\">Timeouts</a>",synthetic:true,types:["iron::iron::Timeouts"]},{text:"impl Freeze for <a class=\"struct\" href=\"iron/struct.Protocol.html\" title=\"struct iron::Protocol\">Protocol</a>",synthetic:true,types:["iron::iron::Protocol"]},{text:"impl Freeze for <a class=\"struct\" href=\"iron/error/struct.IronError.html\" title=\"struct iron::error::IronError\">IronError</a>",synthetic:true,types:["iron::error::IronError"]},{text:"impl Freeze for <a class=\"struct\" href=\"iron/middleware/struct.Chain.html\" title=\"struct iron::middleware::Chain\">Chain</a>",synthetic:true,types:["iron::middleware::Chain"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"iron/response/struct.BodyReader.html\" title=\"struct iron::response::BodyReader\">BodyReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["iron::response::BodyReader"]},{text:"impl Freeze for <a class=\"struct\" href=\"iron/response/struct.Response.html\" title=\"struct iron::response::Response\">Response</a>",synthetic:true,types:["iron::response::Response"]},{text:"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"iron/request/struct.Request.html\" title=\"struct iron::request::Request\">Request</a>&lt;'a, 'b&gt;",synthetic:true,types:["iron::request::Request"]},{text:"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"iron/request/struct.Body.html\" title=\"struct iron::request::Body\">Body</a>&lt;'a, 'b&gt;",synthetic:true,types:["iron::request::Body"]},{text:"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"iron/modifiers/struct.Header.html\" title=\"struct iron::modifiers::Header\">Header</a>&lt;H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Freeze,&nbsp;</span>",synthetic:true,types:["iron::modifiers::Header"]},{text:"impl Freeze for <a class=\"struct\" href=\"iron/modifiers/struct.Redirect.html\" title=\"struct iron::modifiers::Redirect\">Redirect</a>",synthetic:true,types:["iron::modifiers::Redirect"]},{text:"impl Freeze for <a class=\"struct\" href=\"iron/modifiers/struct.RedirectRaw.html\" title=\"struct iron::modifiers::RedirectRaw\">RedirectRaw</a>",synthetic:true,types:["iron::modifiers::RedirectRaw"]},];
implementors["itertools"] = [{text:"impl&lt;I, J&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Diff.html\" title=\"enum itertools::Diff\">Diff</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::diff::Diff"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.MinMaxResult.html\" title=\"enum itertools::MinMaxResult\">MinMaxResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::minmax::MinMaxResult"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Position.html\" title=\"enum itertools::Position\">Position</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::with_position::Position"]},{text:"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.EitherOrBoth.html\" title=\"enum itertools::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::either_or_both::EitherOrBoth"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.FoldWhile.html\" title=\"enum itertools::FoldWhile\">FoldWhile</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::FoldWhile"]},{text:"impl&lt;I, Pred&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.DedupBy.html\" title=\"struct itertools::structs::DedupBy\">DedupBy</a>&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::DedupBy"]},{text:"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Interleave.html\" title=\"struct itertools::structs::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::Interleave"]},{text:"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.InterleaveShortest.html\" title=\"struct itertools::structs::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::InterleaveShortest"]},{text:"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Product.html\" title=\"struct itertools::structs::Product\">Product</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::Product"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBack.html\" title=\"struct itertools::structs::PutBack\">PutBack</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::PutBack"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Batching.html\" title=\"struct itertools::structs::Batching\">Batching</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::Batching"]},{text:"impl&lt;I, R&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MapInto.html\" title=\"struct itertools::structs::MapInto\">MapInto</a>&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::MapInto"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MapResults.html\" title=\"struct itertools::structs::MapResults\">MapResults</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::MapResults"]},{text:"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeBy.html\" title=\"struct itertools::structs::MergeBy\">MergeBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::MergeBy"]},{text:"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TakeWhileRef.html\" title=\"struct itertools::structs::TakeWhileRef\">TakeWhileRef</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::TakeWhileRef"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WhileSome.html\" title=\"struct itertools::structs::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::WhileSome"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Coalesce.html\" title=\"struct itertools::structs::Coalesce\">Coalesce</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::Coalesce"]},{text:"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleCombinations.html\" title=\"struct itertools::structs::TupleCombinations\">TupleCombinations</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::TupleCombinations"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Positions.html\" title=\"struct itertools::structs::Positions\">Positions</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::Positions"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Update.html\" title=\"struct itertools::structs::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::Update"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Step.html\" title=\"struct itertools::structs::Step\">Step</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::adaptors::Step"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiProduct.html\" title=\"struct itertools::structs::MultiProduct\">MultiProduct</a>&lt;I&gt;",synthetic:true,types:["itertools::adaptors::multi_product::MultiProduct"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Combinations.html\" title=\"struct itertools::structs::Combinations\">Combinations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::combinations::Combinations"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.CombinationsWithReplacement.html\" title=\"struct itertools::structs::CombinationsWithReplacement\">CombinationsWithReplacement</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::combinations_with_replacement::CombinationsWithReplacement"]},{text:"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ConsTuples.html\" title=\"struct itertools::structs::ConsTuples\">ConsTuples</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::cons_tuples_impl::ConsTuples"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ExactlyOneError.html\" title=\"struct itertools::structs::ExactlyOneError\">ExactlyOneError</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::exactly_one_err::ExactlyOneError"]},{text:"impl&lt;'a, I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Format.html\" title=\"struct itertools::structs::Format\">Format</a>&lt;'a, I&gt;",synthetic:true,types:["itertools::format::Format"]},{text:"impl&lt;'a, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FormatWith.html\" title=\"struct itertools::structs::FormatWith\">FormatWith</a>&lt;'a, I, F&gt;",synthetic:true,types:["itertools::format::FormatWith"]},{text:"impl&lt;I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.IntoChunks.html\" title=\"struct itertools::structs::IntoChunks\">IntoChunks</a>&lt;I&gt;",synthetic:true,types:["itertools::groupbylazy::IntoChunks"]},{text:"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunk.html\" title=\"struct itertools::structs::Chunk\">Chunk</a>&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::groupbylazy::Chunk"]},{text:"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunks.html\" title=\"struct itertools::structs::Chunks\">Chunks</a>&lt;'a, I&gt;",synthetic:true,types:["itertools::groupbylazy::Chunks"]},{text:"impl&lt;K, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.GroupBy.html\" title=\"struct itertools::structs::GroupBy\">GroupBy</a>&lt;K, I, F&gt;",synthetic:true,types:["itertools::groupbylazy::GroupBy"]},{text:"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Group.html\" title=\"struct itertools::structs::Group\">Group</a>&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::groupbylazy::Group"]},{text:"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Groups.html\" title=\"struct itertools::structs::Groups\">Groups</a>&lt;'a, K, I, F&gt;",synthetic:true,types:["itertools::groupbylazy::Groups"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Intersperse.html\" title=\"struct itertools::structs::Intersperse\">Intersperse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::intersperse::Intersperse"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.KMergeBy.html\" title=\"struct itertools::structs::KMergeBy\">KMergeBy</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::kmerge_impl::KMergeBy"]},{text:"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeJoinBy.html\" title=\"struct itertools::structs::MergeJoinBy\">MergeJoinBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::merge_join::MergeJoinBy"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiPeek.html\" title=\"struct itertools::structs::MultiPeek\">MultiPeek</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::multipeek_impl::MultiPeek"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PadUsing.html\" title=\"struct itertools::structs::PadUsing\">PadUsing</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::pad_tail::PadUsing"]},{text:"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekingTakeWhile.html\" title=\"struct itertools::structs::PeekingTakeWhile\">PeekingTakeWhile</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::peeking_take_while::PeekingTakeWhile"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Permutations.html\" title=\"struct itertools::structs::Permutations\">Permutations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::permutations::Permutations"]},{text:"impl&lt;'a, I, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ProcessResults.html\" title=\"struct itertools::structs::ProcessResults\">ProcessResults</a>&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::process_results_impl::ProcessResults"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBackN.html\" title=\"struct itertools::structs::PutBackN\">PutBackN</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::put_back_n_impl::PutBackN"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RcIter.html\" title=\"struct itertools::structs::RcIter\">RcIter</a>&lt;I&gt;",synthetic:true,types:["itertools::rciter_impl::RcIter"]},{text:"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatN.html\" title=\"struct itertools::structs::RepeatN\">RepeatN</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::repeatn::RepeatN"]},{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatCall.html\" title=\"struct itertools::structs::RepeatCall\">RepeatCall</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::sources::RepeatCall"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unfold.html\" title=\"struct itertools::structs::Unfold\">Unfold</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::sources::Unfold"]},{text:"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Iterate.html\" title=\"struct itertools::structs::Iterate\">Iterate</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::sources::Iterate"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tee.html\" title=\"struct itertools::structs::Tee\">Tee</a>&lt;I&gt;",synthetic:true,types:["itertools::tee::Tee"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleBuffer.html\" title=\"struct itertools::structs::TupleBuffer\">TupleBuffer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::tuple_impl::TupleBuffer"]},{text:"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleWindows.html\" title=\"struct itertools::structs::TupleWindows\">TupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::tuple_impl::TupleWindows"]},{text:"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tuples.html\" title=\"struct itertools::structs::Tuples\">Tuples</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::tuple_impl::Tuples"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unique.html\" title=\"struct itertools::structs::Unique\">Unique</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::unique_impl::Unique"]},{text:"impl&lt;I, V, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.UniqueBy.html\" title=\"struct itertools::structs::UniqueBy\">UniqueBy</a>&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::unique_impl::UniqueBy"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WithPosition.html\" title=\"struct itertools::structs::WithPosition\">WithPosition</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::with_position::WithPosition"]},{text:"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipEq.html\" title=\"struct itertools::structs::ZipEq\">ZipEq</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::zip_eq_impl::ZipEq"]},{text:"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipLongest.html\" title=\"struct itertools::structs::ZipLongest\">ZipLongest</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::zip_longest::ZipLongest"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Zip.html\" title=\"struct itertools::structs::Zip\">Zip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["itertools::ziptuple::Zip"]},];
implementors["itoa"] = [{text:"impl Freeze for <a class=\"struct\" href=\"itoa/struct.Buffer.html\" title=\"struct itoa::Buffer\">Buffer</a>",synthetic:true,types:["itoa::Buffer"]},];
implementors["language_tags"] = [{text:"impl Freeze for <a class=\"struct\" href=\"language_tags/struct.LanguageTag.html\" title=\"struct language_tags::LanguageTag\">LanguageTag</a>",synthetic:true,types:["language_tags::LanguageTag"]},{text:"impl Freeze for <a class=\"enum\" href=\"language_tags/enum.Error.html\" title=\"enum language_tags::Error\">Error</a>",synthetic:true,types:["language_tags::Error"]},];
implementors["lazycell"] = [{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"lazycell/struct.LazyCell.html\" title=\"struct lazycell::LazyCell\">LazyCell</a>&lt;T&gt;",synthetic:true,types:["lazycell::LazyCell"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"lazycell/struct.AtomicLazyCell.html\" title=\"struct lazycell::AtomicLazyCell\">AtomicLazyCell</a>&lt;T&gt;",synthetic:true,types:["lazycell::AtomicLazyCell"]},];
implementors["libc"] = [{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>",synthetic:true,types:["libc::unix::group"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>",synthetic:true,types:["libc::unix::utimbuf"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>",synthetic:true,types:["libc::unix::timeval"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>",synthetic:true,types:["libc::unix::timespec"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>",synthetic:true,types:["libc::unix::rlimit"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>",synthetic:true,types:["libc::unix::rusage"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>",synthetic:true,types:["libc::unix::ipv6_mreq"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>",synthetic:true,types:["libc::unix::hostent"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>",synthetic:true,types:["libc::unix::iovec"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>",synthetic:true,types:["libc::unix::pollfd"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>",synthetic:true,types:["libc::unix::winsize"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>",synthetic:true,types:["libc::unix::linger"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>",synthetic:true,types:["libc::unix::sigval"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>",synthetic:true,types:["libc::unix::itimerval"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>",synthetic:true,types:["libc::unix::tms"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>",synthetic:true,types:["libc::unix::servent"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>",synthetic:true,types:["libc::unix::protoent"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>",synthetic:true,types:["libc::unix::linux_like::in_addr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>",synthetic:true,types:["libc::unix::linux_like::ip_mreq"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>",synthetic:true,types:["libc::unix::linux_like::sockaddr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>",synthetic:true,types:["libc::unix::linux_like::sockaddr_in"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>",synthetic:true,types:["libc::unix::linux_like::sockaddr_in6"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>",synthetic:true,types:["libc::unix::linux_like::addrinfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>",synthetic:true,types:["libc::unix::linux_like::sockaddr_ll"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>",synthetic:true,types:["libc::unix::linux_like::fd_set"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>",synthetic:true,types:["libc::unix::linux_like::tm"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>",synthetic:true,types:["libc::unix::linux_like::sched_param"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>",synthetic:true,types:["libc::unix::linux_like::Dl_info"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>",synthetic:true,types:["libc::unix::linux_like::lconv"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>",synthetic:true,types:["libc::unix::linux_like::in_pktinfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>",synthetic:true,types:["libc::unix::linux_like::ifaddrs"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>",synthetic:true,types:["libc::unix::linux_like::in6_rtmsg"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>",synthetic:true,types:["libc::unix::linux_like::arpreq"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>",synthetic:true,types:["libc::unix::linux_like::arpreq_old"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>",synthetic:true,types:["libc::unix::linux_like::arphdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>",synthetic:true,types:["libc::unix::linux_like::mmsghdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>",synthetic:true,types:["libc::unix::linux_like::epoll_event"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>",synthetic:true,types:["libc::unix::linux_like::sockaddr_un"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>",synthetic:true,types:["libc::unix::linux_like::sockaddr_storage"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>",synthetic:true,types:["libc::unix::linux_like::utsname"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>",synthetic:true,types:["libc::unix::linux_like::sigevent"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>",synthetic:true,types:["libc::unix::linux_like::linux::rlimit64"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::glob_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>",synthetic:true,types:["libc::unix::linux_like::linux::passwd"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>",synthetic:true,types:["libc::unix::linux_like::linux::spwd"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>",synthetic:true,types:["libc::unix::linux_like::linux::dqblk"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>",synthetic:true,types:["libc::unix::linux_like::linux::signalfd_siginfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>",synthetic:true,types:["libc::unix::linux_like::linux::itimerspec"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::fsid_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>",synthetic:true,types:["libc::unix::linux_like::linux::packet_mreq"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::cpu_set_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>",synthetic:true,types:["libc::unix::linux_like::linux::if_nameindex"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>",synthetic:true,types:["libc::unix::linux_like::linux::msginfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>",synthetic:true,types:["libc::unix::linux_like::linux::sembuf"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>",synthetic:true,types:["libc::unix::linux_like::linux::input_event"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>",synthetic:true,types:["libc::unix::linux_like::linux::input_id"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>",synthetic:true,types:["libc::unix::linux_like::linux::input_absinfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>",synthetic:true,types:["libc::unix::linux_like::linux::input_keymap_entry"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>",synthetic:true,types:["libc::unix::linux_like::linux::input_mask"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_replay"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_trigger"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_envelope"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_constant_effect"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_ramp_effect"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_condition_effect"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_periodic_effect"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_rumble_effect"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>",synthetic:true,types:["libc::unix::linux_like::linux::ff_effect"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>",synthetic:true,types:["libc::unix::linux_like::linux::dl_phdr_info"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf32_Ehdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf64_Ehdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf32_Sym"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf64_Sym"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf32_Phdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf64_Phdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf32_Shdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf64_Shdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf32_Chdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::Elf64_Chdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>",synthetic:true,types:["libc::unix::linux_like::linux::ucred"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>",synthetic:true,types:["libc::unix::linux_like::linux::mntent"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::posix_spawnattr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::genlmsghdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>",synthetic:true,types:["libc::unix::linux_like::linux::in6_pktinfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>",synthetic:true,types:["libc::unix::linux_like::linux::arpd_request"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>",synthetic:true,types:["libc::unix::linux_like::linux::inotify_event"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>",synthetic:true,types:["libc::unix::linux_like::linux::sockaddr_vm"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>",synthetic:true,types:["libc::unix::linux_like::linux::sockaddr_nl"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>",synthetic:true,types:["libc::unix::linux_like::linux::dirent"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>",synthetic:true,types:["libc::unix::linux_like::linux::dirent64"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>",synthetic:true,types:["libc::unix::linux_like::linux::sockaddr_alg"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>",synthetic:true,types:["libc::unix::linux_like::linux::af_alg_iv"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>",synthetic:true,types:["libc::unix::linux_like::linux::mq_attr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::statx"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::aiocb"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::__exit_status"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::__timeval"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::glob64_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::msghdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::cmsghdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::termios"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::mallinfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::nlmsghdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::nlmsgerr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::nlattr"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::rtentry"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::utmpx"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::sigset_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::sysinfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::msqid_ds"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::sigaction"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::flock"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::stack_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::stat"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::stat64"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs64"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::statvfs64"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpxreg.html\" title=\"struct libc::_libc_fpxreg\">_libc_fpxreg</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_xmmreg.html\" title=\"struct libc::_libc_xmmreg\">_libc_xmmreg</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpstate.html\" title=\"struct libc::_libc_fpstate\">_libc_fpstate</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_regs_struct.html\" title=\"struct libc::user_regs_struct\">user_regs_struct</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.user.html\" title=\"struct libc::user\">user</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::user"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.mcontext_t.html\" title=\"struct libc::mcontext_t\">mcontext_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::mcontext_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::ipc_perm"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::shmid_ds"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::termios2"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_fpregs_struct.html\" title=\"struct libc::user_fpregs_struct\">user_fpregs_struct</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::ucontext_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::gnu::align::sem_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::pthread_condattr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::pthread_cond_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::pthread_mutex_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::pthread_rwlock_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>",synthetic:true,types:["libc::unix::align::in6_addr"]},{text:"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>",synthetic:true,types:["libc::unix::DIR"]},{text:"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>",synthetic:true,types:["libc::unix::FILE"]},{text:"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>",synthetic:true,types:["libc::unix::fpos_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>",synthetic:true,types:["libc::unix::linux_like::timezone"]},{text:"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>",synthetic:true,types:["libc::unix::linux_like::linux::fpos64_t"]},];
implementors["log"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.LogRecord.html\" title=\"struct log::LogRecord\">LogRecord</a>&lt;'a&gt;",synthetic:true,types:["log::LogRecord"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.LogMetadata.html\" title=\"struct log::LogMetadata\">LogMetadata</a>&lt;'a&gt;",synthetic:true,types:["log::LogMetadata"]},{text:"impl Freeze for <a class=\"struct\" href=\"log/struct.LogLocation.html\" title=\"struct log::LogLocation\">LogLocation</a>",synthetic:true,types:["log::LogLocation"]},{text:"impl Freeze for <a class=\"struct\" href=\"log/struct.MaxLogLevelFilter.html\" title=\"struct log::MaxLogLevelFilter\">MaxLogLevelFilter</a>",synthetic:true,types:["log::MaxLogLevelFilter"]},{text:"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>",synthetic:true,types:["log::SetLoggerError"]},{text:"impl Freeze for <a class=\"struct\" href=\"log/struct.ShutdownLoggerError.html\" title=\"struct log::ShutdownLoggerError\">ShutdownLoggerError</a>",synthetic:true,types:["log::ShutdownLoggerError"]},{text:"impl Freeze for <a class=\"enum\" href=\"log/enum.LogLevel.html\" title=\"enum log::LogLevel\">LogLevel</a>",synthetic:true,types:["log::LogLevel"]},{text:"impl Freeze for <a class=\"enum\" href=\"log/enum.LogLevelFilter.html\" title=\"enum log::LogLevelFilter\">LogLevelFilter</a>",synthetic:true,types:["log::LogLevelFilter"]},];
implementors["markup5ever"] = [{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/struct.LocalNameStaticSet.html\" title=\"struct markup5ever::LocalNameStaticSet\">LocalNameStaticSet</a>",synthetic:true,types:["markup5ever::LocalNameStaticSet"]},{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/struct.PrefixStaticSet.html\" title=\"struct markup5ever::PrefixStaticSet\">PrefixStaticSet</a>",synthetic:true,types:["markup5ever::PrefixStaticSet"]},{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/struct.NamespaceStaticSet.html\" title=\"struct markup5ever::NamespaceStaticSet\">NamespaceStaticSet</a>",synthetic:true,types:["markup5ever::NamespaceStaticSet"]},{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/struct.SmallCharSet.html\" title=\"struct markup5ever::SmallCharSet\">SmallCharSet</a>",synthetic:true,types:["markup5ever::util::smallcharset::SmallCharSet"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"markup5ever/interface/struct.ExpandedName.html\" title=\"struct markup5ever::interface::ExpandedName\">ExpandedName</a>&lt;'a&gt;",synthetic:true,types:["markup5ever::interface::ExpandedName"]},{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/interface/struct.QualName.html\" title=\"struct markup5ever::interface::QualName\">QualName</a>",synthetic:true,types:["markup5ever::interface::QualName"]},{text:"impl !Freeze for <a class=\"struct\" href=\"markup5ever/interface/struct.Attribute.html\" title=\"struct markup5ever::interface::Attribute\">Attribute</a>",synthetic:true,types:["markup5ever::interface::Attribute"]},{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/interface/tree_builder/struct.ElementFlags.html\" title=\"struct markup5ever::interface::tree_builder::ElementFlags\">ElementFlags</a>",synthetic:true,types:["markup5ever::interface::tree_builder::ElementFlags"]},{text:"impl&lt;Handle&gt; !Freeze for <a class=\"enum\" href=\"markup5ever/interface/tree_builder/enum.NodeOrText.html\" title=\"enum markup5ever::interface::tree_builder::NodeOrText\">NodeOrText</a>&lt;Handle&gt;",synthetic:true,types:["markup5ever::interface::tree_builder::NodeOrText"]},{text:"impl Freeze for <a class=\"enum\" href=\"markup5ever/interface/tree_builder/enum.QuirksMode.html\" title=\"enum markup5ever::interface::tree_builder::QuirksMode\">QuirksMode</a>",synthetic:true,types:["markup5ever::interface::tree_builder::QuirksMode"]},{text:"impl Freeze for <a class=\"enum\" href=\"markup5ever/interface/tree_builder/enum.NextParserState.html\" title=\"enum markup5ever::interface::tree_builder::NextParserState\">NextParserState</a>",synthetic:true,types:["markup5ever::interface::tree_builder::NextParserState"]},{text:"impl !Freeze for <a class=\"struct\" href=\"markup5ever/rcdom/struct.Node.html\" title=\"struct markup5ever::rcdom::Node\">Node</a>",synthetic:true,types:["markup5ever::rcdom::Node"]},{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/rcdom/struct.RcDom.html\" title=\"struct markup5ever::rcdom::RcDom\">RcDom</a>",synthetic:true,types:["markup5ever::rcdom::RcDom"]},{text:"impl !Freeze for <a class=\"enum\" href=\"markup5ever/rcdom/enum.NodeData.html\" title=\"enum markup5ever::rcdom::NodeData\">NodeData</a>",synthetic:true,types:["markup5ever::rcdom::NodeData"]},{text:"impl Freeze for <a class=\"enum\" href=\"markup5ever/serialize/enum.TraversalScope.html\" title=\"enum markup5ever::serialize::TraversalScope\">TraversalScope</a>",synthetic:true,types:["markup5ever::serialize::TraversalScope"]},{text:"impl Freeze for <a class=\"struct\" href=\"markup5ever/buffer_queue/struct.BufferQueue.html\" title=\"struct markup5ever::buffer_queue::BufferQueue\">BufferQueue</a>",synthetic:true,types:["markup5ever::util::buffer_queue::BufferQueue"]},{text:"impl !Freeze for <a class=\"enum\" href=\"markup5ever/buffer_queue/enum.SetResult.html\" title=\"enum markup5ever::buffer_queue::SetResult\">SetResult</a>",synthetic:true,types:["markup5ever::util::buffer_queue::SetResult"]},];
implementors["mdbook"] = [{text:"impl Freeze for <a class=\"enum\" href=\"mdbook/enum.BookItem.html\" title=\"enum mdbook::BookItem\">BookItem</a>",synthetic:true,types:["mdbook::book::book::BookItem"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/book/struct.Book.html\" title=\"struct mdbook::book::Book\">Book</a>",synthetic:true,types:["mdbook::book::book::Book"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mdbook/book/struct.BookItems.html\" title=\"struct mdbook::book::BookItems\">BookItems</a>&lt;'a&gt;",synthetic:true,types:["mdbook::book::book::BookItems"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/book/struct.Chapter.html\" title=\"struct mdbook::book::Chapter\">Chapter</a>",synthetic:true,types:["mdbook::book::book::Chapter"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/book/struct.BookBuilder.html\" title=\"struct mdbook::book::BookBuilder\">BookBuilder</a>",synthetic:true,types:["mdbook::book::init::BookBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/book/struct.Link.html\" title=\"struct mdbook::book::Link\">Link</a>",synthetic:true,types:["mdbook::book::summary::Link"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/book/struct.SectionNumber.html\" title=\"struct mdbook::book::SectionNumber\">SectionNumber</a>",synthetic:true,types:["mdbook::book::summary::SectionNumber"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/book/struct.Summary.html\" title=\"struct mdbook::book::Summary\">Summary</a>",synthetic:true,types:["mdbook::book::summary::Summary"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/book/struct.MDBook.html\" title=\"struct mdbook::book::MDBook\">MDBook</a>",synthetic:true,types:["mdbook::book::MDBook"]},{text:"impl Freeze for <a class=\"enum\" href=\"mdbook/book/enum.SummaryItem.html\" title=\"enum mdbook::book::SummaryItem\">SummaryItem</a>",synthetic:true,types:["mdbook::book::summary::SummaryItem"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/config/struct.Config.html\" title=\"struct mdbook::config::Config\">Config</a>",synthetic:true,types:["mdbook::config::Config"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/config/struct.BookConfig.html\" title=\"struct mdbook::config::BookConfig\">BookConfig</a>",synthetic:true,types:["mdbook::config::BookConfig"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/config/struct.BuildConfig.html\" title=\"struct mdbook::config::BuildConfig\">BuildConfig</a>",synthetic:true,types:["mdbook::config::BuildConfig"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/config/struct.HtmlConfig.html\" title=\"struct mdbook::config::HtmlConfig\">HtmlConfig</a>",synthetic:true,types:["mdbook::config::HtmlConfig"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/config/struct.Fold.html\" title=\"struct mdbook::config::Fold\">Fold</a>",synthetic:true,types:["mdbook::config::Fold"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/config/struct.Playpen.html\" title=\"struct mdbook::config::Playpen\">Playpen</a>",synthetic:true,types:["mdbook::config::Playpen"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/config/struct.Search.html\" title=\"struct mdbook::config::Search\">Search</a>",synthetic:true,types:["mdbook::config::Search"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/preprocess/struct.CmdPreprocessor.html\" title=\"struct mdbook::preprocess::CmdPreprocessor\">CmdPreprocessor</a>",synthetic:true,types:["mdbook::preprocess::cmd::CmdPreprocessor"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/preprocess/struct.IndexPreprocessor.html\" title=\"struct mdbook::preprocess::IndexPreprocessor\">IndexPreprocessor</a>",synthetic:true,types:["mdbook::preprocess::index::IndexPreprocessor"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/preprocess/struct.LinkPreprocessor.html\" title=\"struct mdbook::preprocess::LinkPreprocessor\">LinkPreprocessor</a>",synthetic:true,types:["mdbook::preprocess::links::LinkPreprocessor"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/preprocess/struct.PreprocessorContext.html\" title=\"struct mdbook::preprocess::PreprocessorContext\">PreprocessorContext</a>",synthetic:true,types:["mdbook::preprocess::PreprocessorContext"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/renderer/struct.HtmlHandlebars.html\" title=\"struct mdbook::renderer::HtmlHandlebars\">HtmlHandlebars</a>",synthetic:true,types:["mdbook::renderer::html_handlebars::hbs_renderer::HtmlHandlebars"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/renderer/struct.MarkdownRenderer.html\" title=\"struct mdbook::renderer::MarkdownRenderer\">MarkdownRenderer</a>",synthetic:true,types:["mdbook::renderer::markdown_renderer::MarkdownRenderer"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/renderer/struct.RenderContext.html\" title=\"struct mdbook::renderer::RenderContext\">RenderContext</a>",synthetic:true,types:["mdbook::renderer::RenderContext"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/renderer/struct.CmdRenderer.html\" title=\"struct mdbook::renderer::CmdRenderer\">CmdRenderer</a>",synthetic:true,types:["mdbook::renderer::CmdRenderer"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/theme/struct.Theme.html\" title=\"struct mdbook::theme::Theme\">Theme</a>",synthetic:true,types:["mdbook::theme::Theme"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook/errors/struct.Error.html\" title=\"struct mdbook::errors::Error\">Error</a>",synthetic:true,types:["mdbook::errors::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"mdbook/errors/enum.ErrorKind.html\" title=\"enum mdbook::errors::ErrorKind\">ErrorKind</a>",synthetic:true,types:["mdbook::errors::ErrorKind"]},];
implementors["mdbook_html"] = [{text:"impl Freeze for <a class=\"struct\" href=\"mdbook_html/struct.Config.html\" title=\"struct mdbook_html::Config\">Config</a>",synthetic:true,types:["mdbook_html::config::Config"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook_html/struct.Renderer.html\" title=\"struct mdbook_html::Renderer\">Renderer</a>",synthetic:true,types:["mdbook_html::renderer::Renderer"]},{text:"impl Freeze for <a class=\"enum\" href=\"mdbook_html/enum.RegistrationError.html\" title=\"enum mdbook_html::RegistrationError\">RegistrationError</a>",synthetic:true,types:["mdbook_html::themes::RegistrationError"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mdbook_html/context/struct.Context.html\" title=\"struct mdbook_html::context::Context\">Context</a>&lt;'a&gt;",synthetic:true,types:["mdbook_html::context::Context"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mdbook_html/context/struct.Common.html\" title=\"struct mdbook_html::context::Common\">Common</a>&lt;'a&gt;",synthetic:true,types:["mdbook_html::context::Common"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mdbook_html/context/struct.ChapterInfo.html\" title=\"struct mdbook_html::context::ChapterInfo\">ChapterInfo</a>&lt;'a&gt;",synthetic:true,types:["mdbook_html::context::ChapterInfo"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook_html/context/struct.Sidebar.html\" title=\"struct mdbook_html::context::Sidebar\">Sidebar</a>",synthetic:true,types:["mdbook_html::context::Sidebar"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mdbook_html/context/struct.PrintContext.html\" title=\"struct mdbook_html::context::PrintContext\">PrintContext</a>&lt;'a&gt;",synthetic:true,types:["mdbook_html::context::PrintContext"]},{text:"impl Freeze for <a class=\"struct\" href=\"mdbook_html/helpers/struct.Static.html\" title=\"struct mdbook_html::helpers::Static\">Static</a>",synthetic:true,types:["mdbook_html::helpers::Static"]},];
implementors["memchr"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;",synthetic:true,types:["memchr::iter::Memchr"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;",synthetic:true,types:["memchr::iter::Memchr2"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;",synthetic:true,types:["memchr::iter::Memchr3"]},];
implementors["mime"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Mime.html\" title=\"struct mime::Mime\">Mime</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["mime::Mime"]},{text:"impl Freeze for <a class=\"enum\" href=\"mime/enum.TopLevel.html\" title=\"enum mime::TopLevel\">TopLevel</a>",synthetic:true,types:["mime::TopLevel"]},{text:"impl Freeze for <a class=\"enum\" href=\"mime/enum.SubLevel.html\" title=\"enum mime::SubLevel\">SubLevel</a>",synthetic:true,types:["mime::SubLevel"]},{text:"impl Freeze for <a class=\"enum\" href=\"mime/enum.Attr.html\" title=\"enum mime::Attr\">Attr</a>",synthetic:true,types:["mime::Attr"]},{text:"impl Freeze for <a class=\"enum\" href=\"mime/enum.Value.html\" title=\"enum mime::Value\">Value</a>",synthetic:true,types:["mime::Value"]},];
implementors["mio"] = [{text:"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Poll.html\" title=\"struct mio::Poll\">Poll</a>",synthetic:true,types:["mio::poll::Poll"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/struct.Registration.html\" title=\"struct mio::Registration\">Registration</a>",synthetic:true,types:["mio::poll::Registration"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/struct.SetReadiness.html\" title=\"struct mio::SetReadiness\">SetReadiness</a>",synthetic:true,types:["mio::poll::SetReadiness"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/struct.PollOpt.html\" title=\"struct mio::PollOpt\">PollOpt</a>",synthetic:true,types:["mio::event_imp::PollOpt"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/struct.Ready.html\" title=\"struct mio::Ready\">Ready</a>",synthetic:true,types:["mio::event_imp::Ready"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/struct.Token.html\" title=\"struct mio::Token\">Token</a>",synthetic:true,types:["mio::token::Token"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/struct.Events.html\" title=\"struct mio::Events\">Events</a>",synthetic:true,types:["mio::poll::Events"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Event.html\" title=\"struct mio::event::Event\">Event</a>",synthetic:true,types:["mio::event_imp::Event"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/event/struct.Iter.html\" title=\"struct mio::event::Iter\">Iter</a>&lt;'a&gt;",synthetic:true,types:["mio::poll::Iter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/unix/struct.EventedFd.html\" title=\"struct mio::unix::EventedFd\">EventedFd</a>&lt;'a&gt;",synthetic:true,types:["mio::sys::unix::eventedfd::EventedFd"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio/unix/struct.UnixReady.html\" title=\"struct mio::unix::UnixReady\">UnixReady</a>",synthetic:true,types:["mio::sys::unix::ready::UnixReady"]},{text:"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpListener.html\" title=\"struct mio::net::TcpListener\">TcpListener</a>",synthetic:true,types:["mio::net::tcp::TcpListener"]},{text:"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpStream.html\" title=\"struct mio::net::TcpStream\">TcpStream</a>",synthetic:true,types:["mio::net::tcp::TcpStream"]},{text:"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UdpSocket.html\" title=\"struct mio::net::UdpSocket\">UdpSocket</a>",synthetic:true,types:["mio::net::udp::UdpSocket"]},];
implementors["mio_extras"] = [{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"mio_extras/channel/struct.Sender.html\" title=\"struct mio_extras::channel::Sender\">Sender</a>&lt;T&gt;",synthetic:true,types:["mio_extras::channel::Sender"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"mio_extras/channel/struct.SyncSender.html\" title=\"struct mio_extras::channel::SyncSender\">SyncSender</a>&lt;T&gt;",synthetic:true,types:["mio_extras::channel::SyncSender"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"mio_extras/channel/struct.Receiver.html\" title=\"struct mio_extras::channel::Receiver\">Receiver</a>&lt;T&gt;",synthetic:true,types:["mio_extras::channel::Receiver"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"mio_extras/channel/enum.SendError.html\" title=\"enum mio_extras::channel::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["mio_extras::channel::SendError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"mio_extras/channel/enum.TrySendError.html\" title=\"enum mio_extras::channel::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["mio_extras::channel::TrySendError"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"mio_extras/timer/struct.Timer.html\" title=\"struct mio_extras::timer::Timer\">Timer</a>&lt;T&gt;",synthetic:true,types:["mio_extras::timer::Timer"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio_extras/timer/struct.Builder.html\" title=\"struct mio_extras::timer::Builder\">Builder</a>",synthetic:true,types:["mio_extras::timer::Builder"]},{text:"impl Freeze for <a class=\"struct\" href=\"mio_extras/timer/struct.Timeout.html\" title=\"struct mio_extras::timer::Timeout\">Timeout</a>",synthetic:true,types:["mio_extras::timer::Timeout"]},];
implementors["mount"] = [{text:"impl Freeze for <a class=\"struct\" href=\"mount/struct.Mount.html\" title=\"struct mount::Mount\">Mount</a>",synthetic:true,types:["mount::mount::Mount"]},{text:"impl Freeze for <a class=\"struct\" href=\"mount/struct.OriginalUrl.html\" title=\"struct mount::OriginalUrl\">OriginalUrl</a>",synthetic:true,types:["mount::mount::OriginalUrl"]},{text:"impl Freeze for <a class=\"struct\" href=\"mount/struct.NoMatch.html\" title=\"struct mount::NoMatch\">NoMatch</a>",synthetic:true,types:["mount::mount::NoMatch"]},];
implementors["net2"] = [{text:"impl !Freeze for <a class=\"struct\" href=\"net2/struct.TcpBuilder.html\" title=\"struct net2::TcpBuilder\">TcpBuilder</a>",synthetic:true,types:["net2::tcp::TcpBuilder"]},{text:"impl !Freeze for <a class=\"struct\" href=\"net2/struct.UdpBuilder.html\" title=\"struct net2::UdpBuilder\">UdpBuilder</a>",synthetic:true,types:["net2::udp::UdpBuilder"]},];
implementors["notify"] = [{text:"impl Freeze for <a class=\"struct\" href=\"notify/struct.RawEvent.html\" title=\"struct notify::RawEvent\">RawEvent</a>",synthetic:true,types:["notify::RawEvent"]},{text:"impl Freeze for <a class=\"enum\" href=\"notify/enum.DebouncedEvent.html\" title=\"enum notify::DebouncedEvent\">DebouncedEvent</a>",synthetic:true,types:["notify::DebouncedEvent"]},{text:"impl Freeze for <a class=\"enum\" href=\"notify/enum.Error.html\" title=\"enum notify::Error\">Error</a>",synthetic:true,types:["notify::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"notify/enum.RecursiveMode.html\" title=\"enum notify::RecursiveMode\">RecursiveMode</a>",synthetic:true,types:["notify::RecursiveMode"]},{text:"impl !Freeze for <a class=\"struct\" href=\"notify/inotify/struct.INotifyWatcher.html\" title=\"struct notify::inotify::INotifyWatcher\">INotifyWatcher</a>",synthetic:true,types:["notify::inotify::INotifyWatcher"]},{text:"impl Freeze for <a class=\"struct\" href=\"notify/null/struct.NullWatcher.html\" title=\"struct notify::null::NullWatcher\">NullWatcher</a>",synthetic:true,types:["notify::null::NullWatcher"]},{text:"impl !Freeze for <a class=\"struct\" href=\"notify/poll/struct.PollWatcher.html\" title=\"struct notify::poll::PollWatcher\">PollWatcher</a>",synthetic:true,types:["notify::poll::PollWatcher"]},{text:"impl Freeze for <a class=\"struct\" href=\"notify/op/struct.Op.html\" title=\"struct notify::op::Op\">Op</a>",synthetic:true,types:["notify::op::Op"]},];
implementors["num_integer"] = [{text:"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>",synthetic:true,types:["num_integer::ExtendedGcd"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["num_integer::IterBinomial"]},];
implementors["num_traits"] = [{text:"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>",synthetic:true,types:["num_traits::ParseFloatError"]},{text:"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>",synthetic:true,types:["num_traits::FloatErrorKind"]},];
implementors["percent_encoding"] = [{text:"impl Freeze for <a class=\"struct\" href=\"percent_encoding/struct.AsciiSet.html\" title=\"struct percent_encoding::AsciiSet\">AsciiSet</a>",synthetic:true,types:["percent_encoding::AsciiSet"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentEncode.html\" title=\"struct percent_encoding::PercentEncode\">PercentEncode</a>&lt;'a&gt;",synthetic:true,types:["percent_encoding::PercentEncode"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentDecode.html\" title=\"struct percent_encoding::PercentDecode\">PercentDecode</a>&lt;'a&gt;",synthetic:true,types:["percent_encoding::PercentDecode"]},];
implementors["pest"] = [{text:"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/struct.ParserState.html\" title=\"struct pest::ParserState\">ParserState</a>&lt;'i, R&gt;",synthetic:true,types:["pest::parser_state::ParserState"]},{text:"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Position.html\" title=\"struct pest::Position\">Position</a>&lt;'i&gt;",synthetic:true,types:["pest::position::Position"]},{text:"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Lines.html\" title=\"struct pest::Lines\">Lines</a>&lt;'i&gt;",synthetic:true,types:["pest::span::Lines"]},{text:"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest/struct.Span.html\" title=\"struct pest::Span\">Span</a>&lt;'i&gt;",synthetic:true,types:["pest::span::Span"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest/enum.Atomicity.html\" title=\"enum pest::Atomicity\">Atomicity</a>",synthetic:true,types:["pest::parser_state::Atomicity"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest/enum.Lookahead.html\" title=\"enum pest::Lookahead\">Lookahead</a>",synthetic:true,types:["pest::parser_state::Lookahead"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest/enum.MatchDir.html\" title=\"enum pest::MatchDir\">MatchDir</a>",synthetic:true,types:["pest::parser_state::MatchDir"]},{text:"impl&lt;'i, R&gt; Freeze for <a class=\"enum\" href=\"pest/enum.Token.html\" title=\"enum pest::Token\">Token</a>&lt;'i, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["pest::token::Token"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/error/struct.Error.html\" title=\"struct pest::error::Error\">Error</a>&lt;R&gt;",synthetic:true,types:["pest::error::Error"]},{text:"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"pest/error/enum.ErrorVariant.html\" title=\"enum pest::error::ErrorVariant\">ErrorVariant</a>&lt;R&gt;",synthetic:true,types:["pest::error::ErrorVariant"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest/error/enum.InputLocation.html\" title=\"enum pest::error::InputLocation\">InputLocation</a>",synthetic:true,types:["pest::error::InputLocation"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest/error/enum.LineColLocation.html\" title=\"enum pest::error::LineColLocation\">LineColLocation</a>",synthetic:true,types:["pest::error::LineColLocation"]},{text:"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.FlatPairs.html\" title=\"struct pest::iterators::FlatPairs\">FlatPairs</a>&lt;'i, R&gt;",synthetic:true,types:["pest::iterators::flat_pairs::FlatPairs"]},{text:"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Pair.html\" title=\"struct pest::iterators::Pair\">Pair</a>&lt;'i, R&gt;",synthetic:true,types:["pest::iterators::pair::Pair"]},{text:"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Pairs.html\" title=\"struct pest::iterators::Pairs\">Pairs</a>&lt;'i, R&gt;",synthetic:true,types:["pest::iterators::pairs::Pairs"]},{text:"impl&lt;'i, R&gt; Freeze for <a class=\"struct\" href=\"pest/iterators/struct.Tokens.html\" title=\"struct pest::iterators::Tokens\">Tokens</a>&lt;'i, R&gt;",synthetic:true,types:["pest::iterators::tokens::Tokens"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/prec_climber/struct.Operator.html\" title=\"struct pest::prec_climber::Operator\">Operator</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["pest::prec_climber::Operator"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"pest/prec_climber/struct.PrecClimber.html\" title=\"struct pest::prec_climber::PrecClimber\">PrecClimber</a>&lt;R&gt;",synthetic:true,types:["pest::prec_climber::PrecClimber"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest/prec_climber/enum.Assoc.html\" title=\"enum pest::prec_climber::Assoc\">Assoc</a>",synthetic:true,types:["pest::prec_climber::Assoc"]},];
implementors["pest_meta"] = [{text:"impl Freeze for <a class=\"struct\" href=\"pest_meta/ast/struct.Rule.html\" title=\"struct pest_meta::ast::Rule\">Rule</a>",synthetic:true,types:["pest_meta::ast::Rule"]},{text:"impl Freeze for <a class=\"struct\" href=\"pest_meta/ast/struct.ExprTopDownIterator.html\" title=\"struct pest_meta::ast::ExprTopDownIterator\">ExprTopDownIterator</a>",synthetic:true,types:["pest_meta::ast::ExprTopDownIterator"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest_meta/ast/enum.RuleType.html\" title=\"enum pest_meta::ast::RuleType\">RuleType</a>",synthetic:true,types:["pest_meta::ast::RuleType"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest_meta/ast/enum.Expr.html\" title=\"enum pest_meta::ast::Expr\">Expr</a>",synthetic:true,types:["pest_meta::ast::Expr"]},{text:"impl Freeze for <a class=\"struct\" href=\"pest_meta/optimizer/struct.OptimizedRule.html\" title=\"struct pest_meta::optimizer::OptimizedRule\">OptimizedRule</a>",synthetic:true,types:["pest_meta::optimizer::OptimizedRule"]},{text:"impl Freeze for <a class=\"struct\" href=\"pest_meta/optimizer/struct.OptimizedExprTopDownIterator.html\" title=\"struct pest_meta::optimizer::OptimizedExprTopDownIterator\">OptimizedExprTopDownIterator</a>",synthetic:true,types:["pest_meta::optimizer::OptimizedExprTopDownIterator"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest_meta/optimizer/enum.OptimizedExpr.html\" title=\"enum pest_meta::optimizer::OptimizedExpr\">OptimizedExpr</a>",synthetic:true,types:["pest_meta::optimizer::OptimizedExpr"]},{text:"impl Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.PestParser.html\" title=\"struct pest_meta::parser::PestParser\">PestParser</a>",synthetic:true,types:["pest_meta::parser::PestParser"]},{text:"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.ParserRule.html\" title=\"struct pest_meta::parser::ParserRule\">ParserRule</a>&lt;'i&gt;",synthetic:true,types:["pest_meta::parser::ParserRule"]},{text:"impl&lt;'i&gt; Freeze for <a class=\"struct\" href=\"pest_meta/parser/struct.ParserNode.html\" title=\"struct pest_meta::parser::ParserNode\">ParserNode</a>&lt;'i&gt;",synthetic:true,types:["pest_meta::parser::ParserNode"]},{text:"impl Freeze for <a class=\"enum\" href=\"pest_meta/parser/enum.Rule.html\" title=\"enum pest_meta::parser::Rule\">Rule</a>",synthetic:true,types:["pest_meta::parser::Rule"]},{text:"impl&lt;'i&gt; Freeze for <a class=\"enum\" href=\"pest_meta/parser/enum.ParserExpr.html\" title=\"enum pest_meta::parser::ParserExpr\">ParserExpr</a>&lt;'i&gt;",synthetic:true,types:["pest_meta::parser::ParserExpr"]},];
implementors["phf"] = [{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Map.html\" title=\"struct phf::map::Map\">Map</a>&lt;K, V&gt;",synthetic:true,types:["phf::map::Map"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"phf/set/struct.Set.html\" title=\"struct phf::set::Set\">Set</a>&lt;T&gt;",synthetic:true,types:["phf::set::Set"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.OrderedMap.html\" title=\"struct phf::ordered_map::OrderedMap\">OrderedMap</a>&lt;K, V&gt;",synthetic:true,types:["phf::ordered_map::OrderedMap"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_set/struct.OrderedSet.html\" title=\"struct phf::ordered_set::OrderedSet\">OrderedSet</a>&lt;T&gt;",synthetic:true,types:["phf::ordered_set::OrderedSet"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Entries.html\" title=\"struct phf::map::Entries\">Entries</a>&lt;'a, K, V&gt;",synthetic:true,types:["phf::map::Entries"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Keys.html\" title=\"struct phf::map::Keys\">Keys</a>&lt;'a, K, V&gt;",synthetic:true,types:["phf::map::Keys"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/map/struct.Values.html\" title=\"struct phf::map::Values\">Values</a>&lt;'a, K, V&gt;",synthetic:true,types:["phf::map::Values"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"phf/set/struct.Iter.html\" title=\"struct phf::set::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["phf::set::Iter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Entries.html\" title=\"struct phf::ordered_map::Entries\">Entries</a>&lt;'a, K, V&gt;",synthetic:true,types:["phf::ordered_map::Entries"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Keys.html\" title=\"struct phf::ordered_map::Keys\">Keys</a>&lt;'a, K, V&gt;",synthetic:true,types:["phf::ordered_map::Keys"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_map/struct.Values.html\" title=\"struct phf::ordered_map::Values\">Values</a>&lt;'a, K, V&gt;",synthetic:true,types:["phf::ordered_map::Values"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"phf/ordered_set/struct.Iter.html\" title=\"struct phf::ordered_set::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["phf::ordered_set::Iter"]},];
implementors["ppv_lite86"] = [{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS3.html\" title=\"struct ppv_lite86::x86_64::YesS3\">YesS3</a>",synthetic:true,types:["ppv_lite86::x86_64::YesS3"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS3.html\" title=\"struct ppv_lite86::x86_64::NoS3\">NoS3</a>",synthetic:true,types:["ppv_lite86::x86_64::NoS3"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS4.html\" title=\"struct ppv_lite86::x86_64::YesS4\">YesS4</a>",synthetic:true,types:["ppv_lite86::x86_64::YesS4"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS4.html\" title=\"struct ppv_lite86::x86_64::NoS4\">NoS4</a>",synthetic:true,types:["ppv_lite86::x86_64::NoS4"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA1.html\" title=\"struct ppv_lite86::x86_64::YesA1\">YesA1</a>",synthetic:true,types:["ppv_lite86::x86_64::YesA1"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA1.html\" title=\"struct ppv_lite86::x86_64::NoA1\">NoA1</a>",synthetic:true,types:["ppv_lite86::x86_64::NoA1"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA2.html\" title=\"struct ppv_lite86::x86_64::YesA2\">YesA2</a>",synthetic:true,types:["ppv_lite86::x86_64::YesA2"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA2.html\" title=\"struct ppv_lite86::x86_64::NoA2\">NoA2</a>",synthetic:true,types:["ppv_lite86::x86_64::NoA2"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesNI.html\" title=\"struct ppv_lite86::x86_64::YesNI\">YesNI</a>",synthetic:true,types:["ppv_lite86::x86_64::YesNI"]},{text:"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoNI.html\" title=\"struct ppv_lite86::x86_64::NoNI\">NoNI</a>",synthetic:true,types:["ppv_lite86::x86_64::NoNI"]},{text:"impl&lt;S3, S4, NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.SseMachine.html\" title=\"struct ppv_lite86::x86_64::SseMachine\">SseMachine</a>&lt;S3, S4, NI&gt;",synthetic:true,types:["ppv_lite86::x86_64::SseMachine"]},{text:"impl&lt;NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.Avx2Machine.html\" title=\"struct ppv_lite86::x86_64::Avx2Machine\">Avx2Machine</a>&lt;NI&gt;",synthetic:true,types:["ppv_lite86::x86_64::Avx2Machine"]},{text:"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec128_storage.html\" title=\"union ppv_lite86::x86_64::vec128_storage\">vec128_storage</a>",synthetic:true,types:["ppv_lite86::x86_64::vec128_storage"]},{text:"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec256_storage.html\" title=\"union ppv_lite86::x86_64::vec256_storage\">vec256_storage</a>",synthetic:true,types:["ppv_lite86::x86_64::vec256_storage"]},{text:"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec512_storage.html\" title=\"union ppv_lite86::x86_64::vec512_storage\">vec512_storage</a>",synthetic:true,types:["ppv_lite86::x86_64::vec512_storage"]},];
implementors["proc_macro2"] = [{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>",synthetic:true,types:["proc_macro2::TokenStream"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>",synthetic:true,types:["proc_macro2::LexError"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>",synthetic:true,types:["proc_macro2::Span"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>",synthetic:true,types:["proc_macro2::Group"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>",synthetic:true,types:["proc_macro2::Punct"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>",synthetic:true,types:["proc_macro2::Ident"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>",synthetic:true,types:["proc_macro2::Literal"]},{text:"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>",synthetic:true,types:["proc_macro2::TokenTree"]},{text:"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>",synthetic:true,types:["proc_macro2::Delimiter"]},{text:"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>",synthetic:true,types:["proc_macro2::Spacing"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>",synthetic:true,types:["proc_macro2::token_stream::IntoIter"]},];
implementors["proc_macro_error"] = [{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro_error/struct.MultiMacroErrors.html\" title=\"struct proc_macro_error::MultiMacroErrors\">MultiMacroErrors</a>",synthetic:true,types:["proc_macro_error::multi::MultiMacroErrors"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro_error/single/struct.MacroError.html\" title=\"struct proc_macro_error::single::MacroError\">MacroError</a>",synthetic:true,types:["proc_macro_error::single::MacroError"]},];
implementors["pulldown_cmark"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.OffsetIter.html\" title=\"struct pulldown_cmark::OffsetIter\">OffsetIter</a>&lt;'a&gt;",synthetic:true,types:["pulldown_cmark::parse::OffsetIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.Options.html\" title=\"struct pulldown_cmark::Options\">Options</a>",synthetic:true,types:["pulldown_cmark::parse::Options"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.Parser.html\" title=\"struct pulldown_cmark::Parser\">Parser</a>&lt;'a&gt;",synthetic:true,types:["pulldown_cmark::parse::Parser"]},{text:"impl Freeze for <a class=\"struct\" href=\"pulldown_cmark/struct.InlineStr.html\" title=\"struct pulldown_cmark::InlineStr\">InlineStr</a>",synthetic:true,types:["pulldown_cmark::strings::InlineStr"]},{text:"impl Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.Alignment.html\" title=\"enum pulldown_cmark::Alignment\">Alignment</a>",synthetic:true,types:["pulldown_cmark::parse::Alignment"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.Event.html\" title=\"enum pulldown_cmark::Event\">Event</a>&lt;'a&gt;",synthetic:true,types:["pulldown_cmark::parse::Event"]},{text:"impl Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.LinkType.html\" title=\"enum pulldown_cmark::LinkType\">LinkType</a>",synthetic:true,types:["pulldown_cmark::parse::LinkType"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.Tag.html\" title=\"enum pulldown_cmark::Tag\">Tag</a>&lt;'a&gt;",synthetic:true,types:["pulldown_cmark::parse::Tag"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"pulldown_cmark/enum.CowStr.html\" title=\"enum pulldown_cmark::CowStr\">CowStr</a>&lt;'a&gt;",synthetic:true,types:["pulldown_cmark::strings::CowStr"]},];
implementors["quick_error"] = [{text:"impl&lt;X, E&gt; Freeze for <a class=\"struct\" href=\"quick_error/struct.Context.html\" title=\"struct quick_error::Context\">Context</a>&lt;X, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>",synthetic:true,types:["quick_error::Context"]},];
implementors["rand"] = [{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>",synthetic:true,types:["rand::distributions::other::Alphanumeric"]},{text:"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.Uniform.html\" title=\"struct rand::distributions::uniform::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>",synthetic:true,types:["rand::distributions::uniform::Uniform"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>",synthetic:true,types:["rand::distributions::float::OpenClosed01"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>",synthetic:true,types:["rand::distributions::float::Open01"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>",synthetic:true,types:["rand::distributions::bernoulli::Bernoulli"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitSphereSurface.html\" title=\"struct rand::distributions::UnitSphereSurface\">UnitSphereSurface</a>",synthetic:true,types:["rand::distributions::unit_sphere::UnitSphereSurface"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.UnitCircle.html\" title=\"struct rand::distributions::UnitCircle\">UnitCircle</a>",synthetic:true,types:["rand::distributions::unit_circle::UnitCircle"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Gamma.html\" title=\"struct rand::distributions::Gamma\">Gamma</a>",synthetic:true,types:["rand::distributions::gamma::Gamma"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.ChiSquared.html\" title=\"struct rand::distributions::ChiSquared\">ChiSquared</a>",synthetic:true,types:["rand::distributions::gamma::ChiSquared"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.FisherF.html\" title=\"struct rand::distributions::FisherF\">FisherF</a>",synthetic:true,types:["rand::distributions::gamma::FisherF"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StudentT.html\" title=\"struct rand::distributions::StudentT\">StudentT</a>",synthetic:true,types:["rand::distributions::gamma::StudentT"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Beta.html\" title=\"struct rand::distributions::Beta\">Beta</a>",synthetic:true,types:["rand::distributions::gamma::Beta"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Normal.html\" title=\"struct rand::distributions::Normal\">Normal</a>",synthetic:true,types:["rand::distributions::normal::Normal"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.LogNormal.html\" title=\"struct rand::distributions::LogNormal\">LogNormal</a>",synthetic:true,types:["rand::distributions::normal::LogNormal"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.StandardNormal.html\" title=\"struct rand::distributions::StandardNormal\">StandardNormal</a>",synthetic:true,types:["rand::distributions::normal::StandardNormal"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp.html\" title=\"struct rand::distributions::Exp\">Exp</a>",synthetic:true,types:["rand::distributions::exponential::Exp"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Exp1.html\" title=\"struct rand::distributions::Exp1\">Exp1</a>",synthetic:true,types:["rand::distributions::exponential::Exp1"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Pareto.html\" title=\"struct rand::distributions::Pareto\">Pareto</a>",synthetic:true,types:["rand::distributions::pareto::Pareto"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Poisson.html\" title=\"struct rand::distributions::Poisson\">Poisson</a>",synthetic:true,types:["rand::distributions::poisson::Poisson"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Binomial.html\" title=\"struct rand::distributions::Binomial\">Binomial</a>",synthetic:true,types:["rand::distributions::binomial::Binomial"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Cauchy.html\" title=\"struct rand::distributions::Cauchy\">Cauchy</a>",synthetic:true,types:["rand::distributions::cauchy::Cauchy"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Dirichlet.html\" title=\"struct rand::distributions::Dirichlet\">Dirichlet</a>",synthetic:true,types:["rand::distributions::dirichlet::Dirichlet"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Triangular.html\" title=\"struct rand::distributions::Triangular\">Triangular</a>",synthetic:true,types:["rand::distributions::triangular::Triangular"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Weibull.html\" title=\"struct rand::distributions::Weibull\">Weibull</a>",synthetic:true,types:["rand::distributions::weibull::Weibull"]},{text:"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["rand::distributions::DistIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>",synthetic:true,types:["rand::distributions::Standard"]},{text:"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>",synthetic:true,types:["rand::distributions::bernoulli::BernoulliError"]},{text:"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>",synthetic:true,types:["rand::distributions::uniform::UniformInt"]},{text:"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>",synthetic:true,types:["rand::distributions::uniform::UniformFloat"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>",synthetic:true,types:["rand::distributions::uniform::UniformDuration"]},{text:"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>",synthetic:true,types:["rand::distributions::weighted::WeightedIndex"]},{text:"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>",synthetic:true,types:["rand::distributions::weighted::WeightedError"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"type\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>",synthetic:true,types:["rand::distributions::weighted::alias_method::WeightedIndex"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.EntropyRng.html\" title=\"struct rand::rngs::EntropyRng\">EntropyRng</a>",synthetic:true,types:["rand::rngs::entropy::EntropyRng"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>",synthetic:true,types:["rand::rngs::std::StdRng"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>",synthetic:true,types:["rand::rngs::thread::ThreadRng"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["rand::rngs::adapter::read::ReadRng"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>",synthetic:true,types:["rand::rngs::adapter::read::ReadError"]},{text:"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>",synthetic:true,types:["rand::rngs::adapter::reseeding::ReseedingRng"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>",synthetic:true,types:["rand::rngs::mock::StepRng"]},{text:"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;",synthetic:true,types:["rand::seq::SliceChooseIter"]},{text:"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>",synthetic:true,types:["rand::seq::index::IndexVec"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;",synthetic:true,types:["rand::seq::index::IndexVecIter"]},{text:"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>",synthetic:true,types:["rand::seq::index::IndexVecIntoIter"]},];
implementors["rand_chacha"] = [{text:"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>",synthetic:true,types:["rand_chacha::chacha::ChaCha12Core"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>",synthetic:true,types:["rand_chacha::chacha::ChaCha12Rng"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>",synthetic:true,types:["rand_chacha::chacha::ChaCha20Core"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>",synthetic:true,types:["rand_chacha::chacha::ChaCha20Rng"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>",synthetic:true,types:["rand_chacha::chacha::ChaCha8Core"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>",synthetic:true,types:["rand_chacha::chacha::ChaCha8Rng"]},];
implementors["rand_core"] = [{text:"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>",synthetic:true,types:["rand_core::error::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>",synthetic:true,types:["rand_core::os::OsRng"]},{text:"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>",synthetic:true,types:["rand_core::block::BlockRng"]},{text:"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"type\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>",synthetic:true,types:["rand_core::block::BlockRng64"]},];
implementors["rayon"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.IntoIter.html\" title=\"struct rayon::collections::binary_heap::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["rayon::collections::binary_heap::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Iter.html\" title=\"struct rayon::collections::binary_heap::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::collections::binary_heap::Iter"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IntoIter.html\" title=\"struct rayon::collections::btree_map::IntoIter\">IntoIter</a>&lt;K, V&gt;",synthetic:true,types:["rayon::collections::btree_map::IntoIter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.Iter.html\" title=\"struct rayon::collections::btree_map::Iter\">Iter</a>&lt;'a, K, V&gt;",synthetic:true,types:["rayon::collections::btree_map::Iter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IterMut.html\" title=\"struct rayon::collections::btree_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["rayon::collections::btree_map::IterMut"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.IntoIter.html\" title=\"struct rayon::collections::btree_set::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["rayon::collections::btree_set::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.Iter.html\" title=\"struct rayon::collections::btree_set::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::collections::btree_set::Iter"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IntoIter.html\" title=\"struct rayon::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;",synthetic:true,types:["rayon::collections::hash_map::IntoIter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.Iter.html\" title=\"struct rayon::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;",synthetic:true,types:["rayon::collections::hash_map::Iter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IterMut.html\" title=\"struct rayon::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["rayon::collections::hash_map::IterMut"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.IntoIter.html\" title=\"struct rayon::collections::hash_set::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["rayon::collections::hash_set::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.Iter.html\" title=\"struct rayon::collections::hash_set::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::collections::hash_set::Iter"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IntoIter.html\" title=\"struct rayon::collections::linked_list::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["rayon::collections::linked_list::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.Iter.html\" title=\"struct rayon::collections::linked_list::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::collections::linked_list::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IterMut.html\" title=\"struct rayon::collections::linked_list::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::collections::linked_list::IterMut"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IntoIter.html\" title=\"struct rayon::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["rayon::collections::vec_deque::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Iter.html\" title=\"struct rayon::collections::vec_deque::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::collections::vec_deque::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IterMut.html\" title=\"struct rayon::collections::vec_deque::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::collections::vec_deque::IterMut"]},{text:"impl&lt;Iter&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.IterBridge.html\" title=\"struct rayon::iter::IterBridge\">IterBridge</a>&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::par_bridge::IterBridge"]},{text:"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chain.html\" title=\"struct rayon::iter::Chain\">Chain</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::chain::Chain"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chunks.html\" title=\"struct rayon::iter::Chunks\">Chunks</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::chunks::Chunks"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Enumerate.html\" title=\"struct rayon::iter::Enumerate\">Enumerate</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::enumerate::Enumerate"]},{text:"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Filter.html\" title=\"struct rayon::iter::Filter\">Filter</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::filter::Filter"]},{text:"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FilterMap.html\" title=\"struct rayon::iter::FilterMap\">FilterMap</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::filter_map::FilterMap"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlatMap.html\" title=\"struct rayon::iter::FlatMap\">FlatMap</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::flat_map::FlatMap"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Flatten.html\" title=\"struct rayon::iter::Flatten\">Flatten</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::flatten::Flatten"]},{text:"impl&lt;I, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Fold.html\" title=\"struct rayon::iter::Fold\">Fold</a>&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::fold::Fold"]},{text:"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FoldWith.html\" title=\"struct rayon::iter::FoldWith\">FoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::fold::FoldWith"]},{text:"impl&lt;I, U, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFold.html\" title=\"struct rayon::iter::TryFold\">TryFold</a>&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::try_fold::TryFold"]},{text:"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFoldWith.html\" title=\"struct rayon::iter::TryFoldWith\">TryFoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Ok: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::try_fold::TryFoldWith"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Skip.html\" title=\"struct rayon::iter::Skip\">Skip</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::skip::Skip"]},{text:"impl&lt;D, S&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Split.html\" title=\"struct rayon::iter::Split\">Split</a>&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::splitter::Split"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Take.html\" title=\"struct rayon::iter::Take\">Take</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::take::Take"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Map.html\" title=\"struct rayon::iter::Map\">Map</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::map::Map"]},{text:"impl&lt;I, INIT, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapInit.html\" title=\"struct rayon::iter::MapInit\">MapInit</a>&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::map_with::MapInit"]},{text:"impl&lt;I, T, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapWith.html\" title=\"struct rayon::iter::MapWith\">MapWith</a>&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::map_with::MapWith"]},{text:"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Zip.html\" title=\"struct rayon::iter::Zip\">Zip</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::zip::Zip"]},{text:"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.ZipEq.html\" title=\"struct rayon::iter::ZipEq\">ZipEq</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::zip_eq::ZipEq"]},{text:"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Interleave.html\" title=\"struct rayon::iter::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::interleave::Interleave"]},{text:"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.InterleaveShortest.html\" title=\"struct rayon::iter::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::interleave_shortest::InterleaveShortest"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Intersperse.html\" title=\"struct rayon::iter::Intersperse\">Intersperse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"rayon/iter/trait.ParallelIterator.html\" title=\"trait rayon::iter::ParallelIterator\">ParallelIterator</a>&gt;::<a class=\"type\" href=\"rayon/iter/trait.ParallelIterator.html#associatedtype.Item\" title=\"type rayon::iter::ParallelIterator::Item\">Item</a>: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::intersperse::Intersperse"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Update.html\" title=\"struct rayon::iter::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::update::Update"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Rev.html\" title=\"struct rayon::iter::Rev\">Rev</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::rev::Rev"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MaxLen.html\" title=\"struct rayon::iter::MaxLen\">MaxLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::len::MaxLen"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MinLen.html\" title=\"struct rayon::iter::MinLen\">MinLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::len::MinLen"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Cloned.html\" title=\"struct rayon::iter::Cloned\">Cloned</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::cloned::Cloned"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Copied.html\" title=\"struct rayon::iter::Copied\">Copied</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::copied::Copied"]},{text:"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Inspect.html\" title=\"struct rayon::iter::Inspect\">Inspect</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::inspect::Inspect"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.PanicFuse.html\" title=\"struct rayon::iter::PanicFuse\">PanicFuse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::panic_fuse::PanicFuse"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.WhileSome.html\" title=\"struct rayon::iter::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::while_some::WhileSome"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Repeat.html\" title=\"struct rayon::iter::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::repeat::Repeat"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.RepeatN.html\" title=\"struct rayon::iter::RepeatN\">RepeatN</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::repeat::RepeatN"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Empty.html\" title=\"struct rayon::iter::Empty\">Empty</a>&lt;T&gt;",synthetic:true,types:["rayon::iter::empty::Empty"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Once.html\" title=\"struct rayon::iter::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::iter::once::Once"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::option::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.Iter.html\" title=\"struct rayon::option::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::option::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IterMut.html\" title=\"struct rayon::option::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::option::IterMut"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range/struct.Iter.html\" title=\"struct rayon::range::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::range::Iter"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range_inclusive/struct.Iter.html\" title=\"struct rayon::range_inclusive::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::range_inclusive::Iter"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IntoIter.html\" title=\"struct rayon::result::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::result::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.Iter.html\" title=\"struct rayon::result::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::result::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IterMut.html\" title=\"struct rayon::result::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["rayon::result::IterMut"]},{text:"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Iter.html\" title=\"struct rayon::slice::Iter\">Iter</a>&lt;'data, T&gt;",synthetic:true,types:["rayon::slice::Iter"]},{text:"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Chunks.html\" title=\"struct rayon::slice::Chunks\">Chunks</a>&lt;'data, T&gt;",synthetic:true,types:["rayon::slice::Chunks"]},{text:"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Windows.html\" title=\"struct rayon::slice::Windows\">Windows</a>&lt;'data, T&gt;",synthetic:true,types:["rayon::slice::Windows"]},{text:"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.IterMut.html\" title=\"struct rayon::slice::IterMut\">IterMut</a>&lt;'data, T&gt;",synthetic:true,types:["rayon::slice::IterMut"]},{text:"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksMut.html\" title=\"struct rayon::slice::ChunksMut\">ChunksMut</a>&lt;'data, T&gt;",synthetic:true,types:["rayon::slice::ChunksMut"]},{text:"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Split.html\" title=\"struct rayon::slice::Split\">Split</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::slice::Split"]},{text:"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.SplitMut.html\" title=\"struct rayon::slice::SplitMut\">SplitMut</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::slice::SplitMut"]},{text:"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Chars.html\" title=\"struct rayon::str::Chars\">Chars</a>&lt;'ch&gt;",synthetic:true,types:["rayon::str::Chars"]},{text:"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.CharIndices.html\" title=\"struct rayon::str::CharIndices\">CharIndices</a>&lt;'ch&gt;",synthetic:true,types:["rayon::str::CharIndices"]},{text:"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Bytes.html\" title=\"struct rayon::str::Bytes\">Bytes</a>&lt;'ch&gt;",synthetic:true,types:["rayon::str::Bytes"]},{text:"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.EncodeUtf16.html\" title=\"struct rayon::str::EncodeUtf16\">EncodeUtf16</a>&lt;'ch&gt;",synthetic:true,types:["rayon::str::EncodeUtf16"]},{text:"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Split.html\" title=\"struct rayon::str::Split\">Split</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::str::Split"]},{text:"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitTerminator.html\" title=\"struct rayon::str::SplitTerminator\">SplitTerminator</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::str::SplitTerminator"]},{text:"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Lines.html\" title=\"struct rayon::str::Lines\">Lines</a>&lt;'ch&gt;",synthetic:true,types:["rayon::str::Lines"]},{text:"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitWhitespace.html\" title=\"struct rayon::str::SplitWhitespace\">SplitWhitespace</a>&lt;'ch&gt;",synthetic:true,types:["rayon::str::SplitWhitespace"]},{text:"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Matches.html\" title=\"struct rayon::str::Matches\">Matches</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::str::Matches"]},{text:"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.MatchIndices.html\" title=\"struct rayon::str::MatchIndices\">MatchIndices</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["rayon::str::MatchIndices"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/vec/struct.IntoIter.html\" title=\"struct rayon::vec::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["rayon::vec::IntoIter"]},];
implementors["rayon_core"] = [{text:"impl !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadBuilder.html\" title=\"struct rayon_core::ThreadBuilder\">ThreadBuilder</a>",synthetic:true,types:["rayon_core::registry::ThreadBuilder"]},{text:"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.Scope.html\" title=\"struct rayon_core::Scope\">Scope</a>&lt;'scope&gt;",synthetic:true,types:["rayon_core::scope::Scope"]},{text:"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ScopeFifo.html\" title=\"struct rayon_core::ScopeFifo\">ScopeFifo</a>&lt;'scope&gt;",synthetic:true,types:["rayon_core::scope::ScopeFifo"]},{text:"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPool.html\" title=\"struct rayon_core::ThreadPool\">ThreadPool</a>",synthetic:true,types:["rayon_core::thread_pool::ThreadPool"]},{text:"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuildError.html\" title=\"struct rayon_core::ThreadPoolBuildError\">ThreadPoolBuildError</a>",synthetic:true,types:["rayon_core::ThreadPoolBuildError"]},{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuilder.html\" title=\"struct rayon_core::ThreadPoolBuilder\">ThreadPoolBuilder</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["rayon_core::ThreadPoolBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.Configuration.html\" title=\"struct rayon_core::Configuration\">Configuration</a>",synthetic:true,types:["rayon_core::Configuration"]},{text:"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.FnContext.html\" title=\"struct rayon_core::FnContext\">FnContext</a>",synthetic:true,types:["rayon_core::FnContext"]},];
implementors["regex"] = [{text:"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSetBuilder.html\" title=\"struct regex::RegexSetBuilder\">RegexSetBuilder</a>",synthetic:true,types:["regex::re_builder::set_unicode::RegexSetBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexBuilder.html\" title=\"struct regex::RegexBuilder\">RegexBuilder</a>",synthetic:true,types:["regex::re_builder::unicode::RegexBuilder"]},{text:"impl !Freeze for <a class=\"struct\" href=\"regex/struct.RegexSet.html\" title=\"struct regex::RegexSet\">RegexSet</a>",synthetic:true,types:["regex::re_set::unicode::RegexSet"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>",synthetic:true,types:["regex::re_set::unicode::SetMatches"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIntoIter.html\" title=\"struct regex::SetMatchesIntoIter\">SetMatchesIntoIter</a>",synthetic:true,types:["regex::re_set::unicode::SetMatchesIntoIter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIter.html\" title=\"struct regex::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;",synthetic:true,types:["regex::re_set::unicode::SetMatchesIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/struct.CaptureLocations.html\" title=\"struct regex::CaptureLocations\">CaptureLocations</a>",synthetic:true,types:["regex::re_unicode::CaptureLocations"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureMatches.html\" title=\"struct regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_unicode::CaptureMatches"]},{text:"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureNames.html\" title=\"struct regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;",synthetic:true,types:["regex::re_unicode::CaptureNames"]},{text:"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Captures.html\" title=\"struct regex::Captures\">Captures</a>&lt;'t&gt;",synthetic:true,types:["regex::re_unicode::Captures"]},{text:"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Match.html\" title=\"struct regex::Match\">Match</a>&lt;'t&gt;",synthetic:true,types:["regex::re_unicode::Match"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Matches.html\" title=\"struct regex::Matches\">Matches</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_unicode::Matches"]},{text:"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.NoExpand.html\" title=\"struct regex::NoExpand\">NoExpand</a>&lt;'t&gt;",synthetic:true,types:["regex::re_unicode::NoExpand"]},{text:"impl !Freeze for <a class=\"struct\" href=\"regex/struct.Regex.html\" title=\"struct regex::Regex\">Regex</a>",synthetic:true,types:["regex::re_unicode::Regex"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/struct.ReplacerRef.html\" title=\"struct regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;",synthetic:true,types:["regex::re_unicode::ReplacerRef"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Split.html\" title=\"struct regex::Split\">Split</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_unicode::Split"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SplitN.html\" title=\"struct regex::SplitN\">SplitN</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_unicode::SplitN"]},{text:"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SubCaptureMatches.html\" title=\"struct regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;",synthetic:true,types:["regex::re_unicode::SubCaptureMatches"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>",synthetic:true,types:["regex::error::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexBuilder.html\" title=\"struct regex::bytes::RegexBuilder\">RegexBuilder</a>",synthetic:true,types:["regex::re_builder::bytes::RegexBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSetBuilder.html\" title=\"struct regex::bytes::RegexSetBuilder\">RegexSetBuilder</a>",synthetic:true,types:["regex::re_builder::set_bytes::RegexSetBuilder"]},{text:"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Match.html\" title=\"struct regex::bytes::Match\">Match</a>&lt;'t&gt;",synthetic:true,types:["regex::re_bytes::Match"]},{text:"impl !Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Regex.html\" title=\"struct regex::bytes::Regex\">Regex</a>",synthetic:true,types:["regex::re_bytes::Regex"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Matches.html\" title=\"struct regex::bytes::Matches\">Matches</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_bytes::Matches"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureMatches.html\" title=\"struct regex::bytes::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_bytes::CaptureMatches"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Split.html\" title=\"struct regex::bytes::Split\">Split</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_bytes::Split"]},{text:"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SplitN.html\" title=\"struct regex::bytes::SplitN\">SplitN</a>&lt;'r, 't&gt;",synthetic:true,types:["regex::re_bytes::SplitN"]},{text:"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureNames.html\" title=\"struct regex::bytes::CaptureNames\">CaptureNames</a>&lt;'r&gt;",synthetic:true,types:["regex::re_bytes::CaptureNames"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureLocations.html\" title=\"struct regex::bytes::CaptureLocations\">CaptureLocations</a>",synthetic:true,types:["regex::re_bytes::CaptureLocations"]},{text:"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Captures.html\" title=\"struct regex::bytes::Captures\">Captures</a>&lt;'t&gt;",synthetic:true,types:["regex::re_bytes::Captures"]},{text:"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SubCaptureMatches.html\" title=\"struct regex::bytes::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;",synthetic:true,types:["regex::re_bytes::SubCaptureMatches"]},{text:"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;",synthetic:true,types:["regex::re_bytes::ReplacerRef"]},{text:"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.NoExpand.html\" title=\"struct regex::bytes::NoExpand\">NoExpand</a>&lt;'t&gt;",synthetic:true,types:["regex::re_bytes::NoExpand"]},{text:"impl !Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSet.html\" title=\"struct regex::bytes::RegexSet\">RegexSet</a>",synthetic:true,types:["regex::re_set::bytes::RegexSet"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>",synthetic:true,types:["regex::re_set::bytes::SetMatches"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIntoIter.html\" title=\"struct regex::bytes::SetMatchesIntoIter\">SetMatchesIntoIter</a>",synthetic:true,types:["regex::re_set::bytes::SetMatchesIntoIter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIter.html\" title=\"struct regex::bytes::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;",synthetic:true,types:["regex::re_set::bytes::SetMatchesIter"]},];
implementors["regex_syntax"] = [{text:"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/struct.Parser.html\" title=\"struct regex_syntax::Parser\">Parser</a>",synthetic:true,types:["regex_syntax::parser::Parser"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.ParserBuilder.html\" title=\"struct regex_syntax::ParserBuilder\">ParserBuilder</a>",synthetic:true,types:["regex_syntax::parser::ParserBuilder"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>",synthetic:true,types:["regex_syntax::unicode::UnicodeWordError"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>",synthetic:true,types:["regex_syntax::error::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>",synthetic:true,types:["regex_syntax::ast::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Span.html\" title=\"struct regex_syntax::ast::Span\">Span</a>",synthetic:true,types:["regex_syntax::ast::Span"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Position.html\" title=\"struct regex_syntax::ast::Position\">Position</a>",synthetic:true,types:["regex_syntax::ast::Position"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.WithComments.html\" title=\"struct regex_syntax::ast::WithComments\">WithComments</a>",synthetic:true,types:["regex_syntax::ast::WithComments"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Comment.html\" title=\"struct regex_syntax::ast::Comment\">Comment</a>",synthetic:true,types:["regex_syntax::ast::Comment"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Alternation.html\" title=\"struct regex_syntax::ast::Alternation\">Alternation</a>",synthetic:true,types:["regex_syntax::ast::Alternation"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Concat.html\" title=\"struct regex_syntax::ast::Concat\">Concat</a>",synthetic:true,types:["regex_syntax::ast::Concat"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Literal.html\" title=\"struct regex_syntax::ast::Literal\">Literal</a>",synthetic:true,types:["regex_syntax::ast::Literal"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassPerl.html\" title=\"struct regex_syntax::ast::ClassPerl\">ClassPerl</a>",synthetic:true,types:["regex_syntax::ast::ClassPerl"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassAscii.html\" title=\"struct regex_syntax::ast::ClassAscii\">ClassAscii</a>",synthetic:true,types:["regex_syntax::ast::ClassAscii"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassUnicode.html\" title=\"struct regex_syntax::ast::ClassUnicode\">ClassUnicode</a>",synthetic:true,types:["regex_syntax::ast::ClassUnicode"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassBracketed.html\" title=\"struct regex_syntax::ast::ClassBracketed\">ClassBracketed</a>",synthetic:true,types:["regex_syntax::ast::ClassBracketed"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetRange.html\" title=\"struct regex_syntax::ast::ClassSetRange\">ClassSetRange</a>",synthetic:true,types:["regex_syntax::ast::ClassSetRange"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetUnion.html\" title=\"struct regex_syntax::ast::ClassSetUnion\">ClassSetUnion</a>",synthetic:true,types:["regex_syntax::ast::ClassSetUnion"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetBinaryOp.html\" title=\"struct regex_syntax::ast::ClassSetBinaryOp\">ClassSetBinaryOp</a>",synthetic:true,types:["regex_syntax::ast::ClassSetBinaryOp"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Assertion.html\" title=\"struct regex_syntax::ast::Assertion\">Assertion</a>",synthetic:true,types:["regex_syntax::ast::Assertion"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Repetition.html\" title=\"struct regex_syntax::ast::Repetition\">Repetition</a>",synthetic:true,types:["regex_syntax::ast::Repetition"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.RepetitionOp.html\" title=\"struct regex_syntax::ast::RepetitionOp\">RepetitionOp</a>",synthetic:true,types:["regex_syntax::ast::RepetitionOp"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Group.html\" title=\"struct regex_syntax::ast::Group\">Group</a>",synthetic:true,types:["regex_syntax::ast::Group"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.CaptureName.html\" title=\"struct regex_syntax::ast::CaptureName\">CaptureName</a>",synthetic:true,types:["regex_syntax::ast::CaptureName"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.SetFlags.html\" title=\"struct regex_syntax::ast::SetFlags\">SetFlags</a>",synthetic:true,types:["regex_syntax::ast::SetFlags"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Flags.html\" title=\"struct regex_syntax::ast::Flags\">Flags</a>",synthetic:true,types:["regex_syntax::ast::Flags"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.FlagsItem.html\" title=\"struct regex_syntax::ast::FlagsItem\">FlagsItem</a>",synthetic:true,types:["regex_syntax::ast::FlagsItem"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ErrorKind.html\" title=\"enum regex_syntax::ast::ErrorKind\">ErrorKind</a>",synthetic:true,types:["regex_syntax::ast::ErrorKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Ast.html\" title=\"enum regex_syntax::ast::Ast\">Ast</a>",synthetic:true,types:["regex_syntax::ast::Ast"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.LiteralKind.html\" title=\"enum regex_syntax::ast::LiteralKind\">LiteralKind</a>",synthetic:true,types:["regex_syntax::ast::LiteralKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.SpecialLiteralKind.html\" title=\"enum regex_syntax::ast::SpecialLiteralKind\">SpecialLiteralKind</a>",synthetic:true,types:["regex_syntax::ast::SpecialLiteralKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.HexLiteralKind.html\" title=\"enum regex_syntax::ast::HexLiteralKind\">HexLiteralKind</a>",synthetic:true,types:["regex_syntax::ast::HexLiteralKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Class.html\" title=\"enum regex_syntax::ast::Class\">Class</a>",synthetic:true,types:["regex_syntax::ast::Class"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassPerlKind.html\" title=\"enum regex_syntax::ast::ClassPerlKind\">ClassPerlKind</a>",synthetic:true,types:["regex_syntax::ast::ClassPerlKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassAsciiKind.html\" title=\"enum regex_syntax::ast::ClassAsciiKind\">ClassAsciiKind</a>",synthetic:true,types:["regex_syntax::ast::ClassAsciiKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeKind\">ClassUnicodeKind</a>",synthetic:true,types:["regex_syntax::ast::ClassUnicodeKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeOpKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeOpKind\">ClassUnicodeOpKind</a>",synthetic:true,types:["regex_syntax::ast::ClassUnicodeOpKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSet.html\" title=\"enum regex_syntax::ast::ClassSet\">ClassSet</a>",synthetic:true,types:["regex_syntax::ast::ClassSet"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetItem.html\" title=\"enum regex_syntax::ast::ClassSetItem\">ClassSetItem</a>",synthetic:true,types:["regex_syntax::ast::ClassSetItem"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetBinaryOpKind.html\" title=\"enum regex_syntax::ast::ClassSetBinaryOpKind\">ClassSetBinaryOpKind</a>",synthetic:true,types:["regex_syntax::ast::ClassSetBinaryOpKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.AssertionKind.html\" title=\"enum regex_syntax::ast::AssertionKind\">AssertionKind</a>",synthetic:true,types:["regex_syntax::ast::AssertionKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionKind.html\" title=\"enum regex_syntax::ast::RepetitionKind\">RepetitionKind</a>",synthetic:true,types:["regex_syntax::ast::RepetitionKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionRange.html\" title=\"enum regex_syntax::ast::RepetitionRange\">RepetitionRange</a>",synthetic:true,types:["regex_syntax::ast::RepetitionRange"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.GroupKind.html\" title=\"enum regex_syntax::ast::GroupKind\">GroupKind</a>",synthetic:true,types:["regex_syntax::ast::GroupKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.FlagsItemKind.html\" title=\"enum regex_syntax::ast::FlagsItemKind\">FlagsItemKind</a>",synthetic:true,types:["regex_syntax::ast::FlagsItemKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Flag.html\" title=\"enum regex_syntax::ast::Flag\">Flag</a>",synthetic:true,types:["regex_syntax::ast::Flag"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.ParserBuilder.html\" title=\"struct regex_syntax::ast::parse::ParserBuilder\">ParserBuilder</a>",synthetic:true,types:["regex_syntax::ast::parse::ParserBuilder"]},{text:"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.Parser.html\" title=\"struct regex_syntax::ast::parse::Parser\">Parser</a>",synthetic:true,types:["regex_syntax::ast::parse::Parser"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/print/struct.Printer.html\" title=\"struct regex_syntax::ast::print::Printer\">Printer</a>",synthetic:true,types:["regex_syntax::ast::print::Printer"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>",synthetic:true,types:["regex_syntax::unicode::CaseFoldError"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>",synthetic:true,types:["regex_syntax::hir::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Hir.html\" title=\"struct regex_syntax::hir::Hir\">Hir</a>",synthetic:true,types:["regex_syntax::hir::Hir"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicode.html\" title=\"struct regex_syntax::hir::ClassUnicode\">ClassUnicode</a>",synthetic:true,types:["regex_syntax::hir::ClassUnicode"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeIter.html\" title=\"struct regex_syntax::hir::ClassUnicodeIter\">ClassUnicodeIter</a>&lt;'a&gt;",synthetic:true,types:["regex_syntax::hir::ClassUnicodeIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeRange.html\" title=\"struct regex_syntax::hir::ClassUnicodeRange\">ClassUnicodeRange</a>",synthetic:true,types:["regex_syntax::hir::ClassUnicodeRange"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytes.html\" title=\"struct regex_syntax::hir::ClassBytes\">ClassBytes</a>",synthetic:true,types:["regex_syntax::hir::ClassBytes"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesIter.html\" title=\"struct regex_syntax::hir::ClassBytesIter\">ClassBytesIter</a>&lt;'a&gt;",synthetic:true,types:["regex_syntax::hir::ClassBytesIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesRange.html\" title=\"struct regex_syntax::hir::ClassBytesRange\">ClassBytesRange</a>",synthetic:true,types:["regex_syntax::hir::ClassBytesRange"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Group.html\" title=\"struct regex_syntax::hir::Group\">Group</a>",synthetic:true,types:["regex_syntax::hir::Group"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Repetition.html\" title=\"struct regex_syntax::hir::Repetition\">Repetition</a>",synthetic:true,types:["regex_syntax::hir::Repetition"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.ErrorKind.html\" title=\"enum regex_syntax::hir::ErrorKind\">ErrorKind</a>",synthetic:true,types:["regex_syntax::hir::ErrorKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.HirKind.html\" title=\"enum regex_syntax::hir::HirKind\">HirKind</a>",synthetic:true,types:["regex_syntax::hir::HirKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Literal.html\" title=\"enum regex_syntax::hir::Literal\">Literal</a>",synthetic:true,types:["regex_syntax::hir::Literal"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Class.html\" title=\"enum regex_syntax::hir::Class\">Class</a>",synthetic:true,types:["regex_syntax::hir::Class"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Anchor.html\" title=\"enum regex_syntax::hir::Anchor\">Anchor</a>",synthetic:true,types:["regex_syntax::hir::Anchor"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.WordBoundary.html\" title=\"enum regex_syntax::hir::WordBoundary\">WordBoundary</a>",synthetic:true,types:["regex_syntax::hir::WordBoundary"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.GroupKind.html\" title=\"enum regex_syntax::hir::GroupKind\">GroupKind</a>",synthetic:true,types:["regex_syntax::hir::GroupKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionKind.html\" title=\"enum regex_syntax::hir::RepetitionKind\">RepetitionKind</a>",synthetic:true,types:["regex_syntax::hir::RepetitionKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionRange.html\" title=\"enum regex_syntax::hir::RepetitionRange\">RepetitionRange</a>",synthetic:true,types:["regex_syntax::hir::RepetitionRange"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literals.html\" title=\"struct regex_syntax::hir::literal::Literals\">Literals</a>",synthetic:true,types:["regex_syntax::hir::literal::Literals"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>",synthetic:true,types:["regex_syntax::hir::literal::Literal"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/print/struct.Printer.html\" title=\"struct regex_syntax::hir::print::Printer\">Printer</a>",synthetic:true,types:["regex_syntax::hir::print::Printer"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.TranslatorBuilder.html\" title=\"struct regex_syntax::hir::translate::TranslatorBuilder\">TranslatorBuilder</a>",synthetic:true,types:["regex_syntax::hir::translate::TranslatorBuilder"]},{text:"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.Translator.html\" title=\"struct regex_syntax::hir::translate::Translator\">Translator</a>",synthetic:true,types:["regex_syntax::hir::translate::Translator"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Range.html\" title=\"struct regex_syntax::utf8::Utf8Range\">Utf8Range</a>",synthetic:true,types:["regex_syntax::utf8::Utf8Range"]},{text:"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Sequences.html\" title=\"struct regex_syntax::utf8::Utf8Sequences\">Utf8Sequences</a>",synthetic:true,types:["regex_syntax::utf8::Utf8Sequences"]},{text:"impl Freeze for <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>",synthetic:true,types:["regex_syntax::utf8::Utf8Sequence"]},];
implementors["rustc_demangle"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustc_demangle/struct.Demangle.html\" title=\"struct rustc_demangle::Demangle\">Demangle</a>&lt;'a&gt;",synthetic:true,types:["rustc_demangle::Demangle"]},{text:"impl Freeze for <a class=\"struct\" href=\"rustc_demangle/struct.TryDemangleError.html\" title=\"struct rustc_demangle::TryDemangleError\">TryDemangleError</a>",synthetic:true,types:["rustc_demangle::TryDemangleError"]},];
implementors["ryu"] = [{text:"impl Freeze for <a class=\"struct\" href=\"ryu/struct.Buffer.html\" title=\"struct ryu::Buffer\">Buffer</a>",synthetic:true,types:["ryu::buffer::Buffer"]},];
implementors["same_file"] = [{text:"impl Freeze for <a class=\"struct\" href=\"same_file/struct.Handle.html\" title=\"struct same_file::Handle\">Handle</a>",synthetic:true,types:["same_file::Handle"]},];
implementors["scopeguard"] = [{text:"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["scopeguard::ScopeGuard"]},{text:"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>",synthetic:true,types:["scopeguard::Always"]},];
implementors["sequence_trie"] = [{text:"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"sequence_trie/struct.SequenceTrie.html\" title=\"struct sequence_trie::SequenceTrie\">SequenceTrie</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>",synthetic:true,types:["sequence_trie::SequenceTrie"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sequence_trie/struct.Iter.html\" title=\"struct sequence_trie::Iter\">Iter</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["sequence_trie::Iter"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sequence_trie/struct.Keys.html\" title=\"struct sequence_trie::Keys\">Keys</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["sequence_trie::Keys"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"sequence_trie/struct.Values.html\" title=\"struct sequence_trie::Values\">Values</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["sequence_trie::Values"]},{text:"impl&lt;'trie, 'key, K, V, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, I, S&gt; Freeze for <a class=\"struct\" href=\"sequence_trie/struct.PrefixIter.html\" title=\"struct sequence_trie::PrefixIter\">PrefixIter</a>&lt;'trie, 'key, K, V, Q, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["sequence_trie::PrefixIter"]},];
implementors["serde"] = [{text:"impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>",synthetic:true,types:["serde::de::ignored_any::IgnoredAny"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;",synthetic:true,types:["serde::de::Unexpected"]},{text:"impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>",synthetic:true,types:["serde::de::value::Error"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::UnitDeserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::BoolDeserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::I8Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::I16Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::I32Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::I64Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::IsizeDeserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::U8Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::U16Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::U64Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::UsizeDeserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::F32Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::F64Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::CharDeserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::I128Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::U128Deserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::U32Deserializer"]},{text:"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;",synthetic:true,types:["serde::de::value::StrDeserializer"]},{text:"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;",synthetic:true,types:["serde::de::value::BorrowedStrDeserializer"]},{text:"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;",synthetic:true,types:["serde::de::value::StringDeserializer"]},{text:"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;",synthetic:true,types:["serde::de::value::CowStrDeserializer"]},{text:"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;",synthetic:true,types:["serde::de::value::BorrowedBytesDeserializer"]},{text:"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["serde::de::value::SeqDeserializer"]},{text:"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>",synthetic:true,types:["serde::de::value::SeqAccessDeserializer"]},{text:"impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,&nbsp;</span>",synthetic:true,types:["serde::de::value::MapDeserializer"]},{text:"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>",synthetic:true,types:["serde::de::value::MapAccessDeserializer"]},{text:"impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;",synthetic:true,types:["serde::ser::impossible::Impossible"]},];
implementors["serde_json"] = [{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.Deserializer.html\" title=\"struct serde_json::de::Deserializer\">Deserializer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["serde_json::de::Deserializer"]},{text:"impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StreamDeserializer.html\" title=\"struct serde_json::de::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["serde_json::de::StreamDeserializer"]},{text:"impl Freeze for <a class=\"struct\" href=\"serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>",synthetic:true,types:["serde_json::error::Error"]},{text:"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.Serializer.html\" title=\"struct serde_json::ser::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["serde_json::ser::Serializer"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Map.html\" title=\"struct serde_json::map::Map\">Map</a>&lt;K, V&gt;",synthetic:true,types:["serde_json::map::Map"]},{text:"impl Freeze for <a class=\"struct\" href=\"serde_json/struct.Number.html\" title=\"struct serde_json::Number\">Number</a>",synthetic:true,types:["serde_json::number::Number"]},{text:"impl Freeze for <a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>",synthetic:true,types:["serde_json::value::Value"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.IoRead.html\" title=\"struct serde_json::de::IoRead\">IoRead</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["serde_json::read::IoRead"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.SliceRead.html\" title=\"struct serde_json::de::SliceRead\">SliceRead</a>&lt;'a&gt;",synthetic:true,types:["serde_json::read::SliceRead"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StrRead.html\" title=\"struct serde_json::de::StrRead\">StrRead</a>&lt;'a&gt;",synthetic:true,types:["serde_json::read::StrRead"]},{text:"impl Freeze for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>",synthetic:true,types:["serde_json::error::Category"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.VacantEntry.html\" title=\"struct serde_json::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::VacantEntry"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.OccupiedEntry.html\" title=\"struct serde_json::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::OccupiedEntry"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Iter.html\" title=\"struct serde_json::map::Iter\">Iter</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::Iter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IterMut.html\" title=\"struct serde_json::map::IterMut\">IterMut</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::IterMut"]},{text:"impl Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IntoIter.html\" title=\"struct serde_json::map::IntoIter\">IntoIter</a>",synthetic:true,types:["serde_json::map::IntoIter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Keys.html\" title=\"struct serde_json::map::Keys\">Keys</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::Keys"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Values.html\" title=\"struct serde_json::map::Values\">Values</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::Values"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.ValuesMut.html\" title=\"struct serde_json::map::ValuesMut\">ValuesMut</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::ValuesMut"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_json/map/enum.Entry.html\" title=\"enum serde_json::map::Entry\">Entry</a>&lt;'a&gt;",synthetic:true,types:["serde_json::map::Entry"]},{text:"impl Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.CompactFormatter.html\" title=\"struct serde_json::ser::CompactFormatter\">CompactFormatter</a>",synthetic:true,types:["serde_json::ser::CompactFormatter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.PrettyFormatter.html\" title=\"struct serde_json::ser::PrettyFormatter\">PrettyFormatter</a>&lt;'a&gt;",synthetic:true,types:["serde_json::ser::PrettyFormatter"]},{text:"impl Freeze for <a class=\"enum\" href=\"serde_json/ser/enum.CharEscape.html\" title=\"enum serde_json::ser::CharEscape\">CharEscape</a>",synthetic:true,types:["serde_json::ser::CharEscape"]},];
implementors["sha1"] = [{text:"impl Freeze for <a class=\"struct\" href=\"sha1/struct.Sha1.html\" title=\"struct sha1::Sha1\">Sha1</a>",synthetic:true,types:["sha1::Sha1"]},];
implementors["shlex"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"shlex/struct.Shlex.html\" title=\"struct shlex::Shlex\">Shlex</a>&lt;'a&gt;",synthetic:true,types:["shlex::Shlex"]},];
implementors["siphasher"] = [{text:"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher13.html\" title=\"struct siphasher::sip::SipHasher13\">SipHasher13</a>",synthetic:true,types:["siphasher::sip::SipHasher13"]},{text:"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher24.html\" title=\"struct siphasher::sip::SipHasher24\">SipHasher24</a>",synthetic:true,types:["siphasher::sip::SipHasher24"]},{text:"impl Freeze for <a class=\"struct\" href=\"siphasher/sip/struct.SipHasher.html\" title=\"struct siphasher::sip::SipHasher\">SipHasher</a>",synthetic:true,types:["siphasher::sip::SipHasher"]},{text:"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.Hash128.html\" title=\"struct siphasher::sip128::Hash128\">Hash128</a>",synthetic:true,types:["siphasher::sip128::Hash128"]},{text:"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher13.html\" title=\"struct siphasher::sip128::SipHasher13\">SipHasher13</a>",synthetic:true,types:["siphasher::sip128::SipHasher13"]},{text:"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher24.html\" title=\"struct siphasher::sip128::SipHasher24\">SipHasher24</a>",synthetic:true,types:["siphasher::sip128::SipHasher24"]},{text:"impl Freeze for <a class=\"struct\" href=\"siphasher/sip128/struct.SipHasher.html\" title=\"struct siphasher::sip128::SipHasher\">SipHasher</a>",synthetic:true,types:["siphasher::sip128::SipHasher"]},];
implementors["slab"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Slab.html\" title=\"struct slab::Slab\">Slab</a>&lt;T&gt;",synthetic:true,types:["slab::Slab"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.VacantEntry.html\" title=\"struct slab::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;",synthetic:true,types:["slab::VacantEntry"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Iter.html\" title=\"struct slab::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["slab::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IterMut.html\" title=\"struct slab::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["slab::IterMut"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Drain.html\" title=\"struct slab::Drain\">Drain</a>&lt;'a, T&gt;",synthetic:true,types:["slab::Drain"]},];
implementors["smallvec"] = [{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;",synthetic:true,types:["smallvec::Drain"]},{text:"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>",synthetic:true,types:["smallvec::SmallVec"]},{text:"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>",synthetic:true,types:["smallvec::IntoIter"]},];
implementors["staticfile"] = [{text:"impl Freeze for <a class=\"struct\" href=\"staticfile/struct.Static.html\" title=\"struct staticfile::Static\">Static</a>",synthetic:true,types:["staticfile::static_handler::Static"]},];
implementors["string_cache"] = [{text:"impl Freeze for <a class=\"struct\" href=\"string_cache/atom/struct.PhfStrSet.html\" title=\"struct string_cache::atom::PhfStrSet\">PhfStrSet</a>",synthetic:true,types:["string_cache::atom::PhfStrSet"]},{text:"impl Freeze for <a class=\"struct\" href=\"string_cache/atom/struct.EmptyStaticAtomSet.html\" title=\"struct string_cache::atom::EmptyStaticAtomSet\">EmptyStaticAtomSet</a>",synthetic:true,types:["string_cache::atom::EmptyStaticAtomSet"]},{text:"impl&lt;Static&gt; Freeze for <a class=\"struct\" href=\"string_cache/atom/struct.Atom.html\" title=\"struct string_cache::atom::Atom\">Atom</a>&lt;Static&gt;",synthetic:true,types:["string_cache::atom::Atom"]},];
implementors["strsim"] = [{text:"impl Freeze for <a class=\"enum\" href=\"strsim/enum.StrSimError.html\" title=\"enum strsim::StrSimError\">StrSimError</a>",synthetic:true,types:["strsim::StrSimError"]},];
implementors["strum"] = [{text:"impl Freeze for <a class=\"enum\" href=\"strum/enum.ParseError.html\" title=\"enum strum::ParseError\">ParseError</a>",synthetic:true,types:["strum::ParseError"]},];
implementors["syn"] = [{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>",synthetic:true,types:["syn::attr::Attribute"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>",synthetic:true,types:["syn::attr::MetaList"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>",synthetic:true,types:["syn::attr::MetaNameValue"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>",synthetic:true,types:["syn::data::Field"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>",synthetic:true,types:["syn::data::FieldsNamed"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>",synthetic:true,types:["syn::data::FieldsUnnamed"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>",synthetic:true,types:["syn::data::Variant"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>",synthetic:true,types:["syn::data::VisCrate"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>",synthetic:true,types:["syn::data::VisPublic"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>",synthetic:true,types:["syn::data::VisRestricted"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>",synthetic:true,types:["syn::expr::ExprArray"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>",synthetic:true,types:["syn::expr::ExprAssign"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>",synthetic:true,types:["syn::expr::ExprAssignOp"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>",synthetic:true,types:["syn::expr::ExprAsync"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>",synthetic:true,types:["syn::expr::ExprBinary"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>",synthetic:true,types:["syn::expr::ExprBlock"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>",synthetic:true,types:["syn::expr::ExprBox"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>",synthetic:true,types:["syn::expr::ExprBreak"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>",synthetic:true,types:["syn::expr::ExprCall"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>",synthetic:true,types:["syn::expr::ExprCast"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>",synthetic:true,types:["syn::expr::ExprClosure"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>",synthetic:true,types:["syn::expr::ExprContinue"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>",synthetic:true,types:["syn::expr::ExprField"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>",synthetic:true,types:["syn::expr::ExprForLoop"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>",synthetic:true,types:["syn::expr::ExprGroup"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>",synthetic:true,types:["syn::expr::ExprIf"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprInPlace.html\" title=\"struct syn::ExprInPlace\">ExprInPlace</a>",synthetic:true,types:["syn::expr::ExprInPlace"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>",synthetic:true,types:["syn::expr::ExprIndex"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>",synthetic:true,types:["syn::expr::ExprLet"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>",synthetic:true,types:["syn::expr::ExprLit"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>",synthetic:true,types:["syn::expr::ExprLoop"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>",synthetic:true,types:["syn::expr::ExprMacro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>",synthetic:true,types:["syn::expr::ExprMatch"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>",synthetic:true,types:["syn::expr::ExprMethodCall"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>",synthetic:true,types:["syn::expr::ExprParen"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>",synthetic:true,types:["syn::expr::ExprPath"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>",synthetic:true,types:["syn::expr::ExprRange"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>",synthetic:true,types:["syn::expr::ExprReference"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>",synthetic:true,types:["syn::expr::ExprRepeat"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>",synthetic:true,types:["syn::expr::ExprReturn"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>",synthetic:true,types:["syn::expr::ExprStruct"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>",synthetic:true,types:["syn::expr::ExprTry"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>",synthetic:true,types:["syn::expr::ExprTryBlock"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>",synthetic:true,types:["syn::expr::ExprTuple"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>",synthetic:true,types:["syn::expr::ExprType"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>",synthetic:true,types:["syn::expr::ExprUnary"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>",synthetic:true,types:["syn::expr::ExprUnsafe"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprVerbatim.html\" title=\"struct syn::ExprVerbatim\">ExprVerbatim</a>",synthetic:true,types:["syn::expr::ExprVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>",synthetic:true,types:["syn::expr::ExprWhile"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>",synthetic:true,types:["syn::expr::ExprYield"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>",synthetic:true,types:["syn::expr::Index"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>",synthetic:true,types:["syn::expr::Arm"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>",synthetic:true,types:["syn::expr::Block"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>",synthetic:true,types:["syn::expr::FieldPat"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>",synthetic:true,types:["syn::expr::FieldValue"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>",synthetic:true,types:["syn::expr::Label"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>",synthetic:true,types:["syn::expr::Local"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>",synthetic:true,types:["syn::expr::MethodTurbofish"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>",synthetic:true,types:["syn::expr::PatBox"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>",synthetic:true,types:["syn::expr::PatIdent"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>",synthetic:true,types:["syn::expr::PatLit"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>",synthetic:true,types:["syn::expr::PatMacro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>",synthetic:true,types:["syn::expr::PatPath"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>",synthetic:true,types:["syn::expr::PatRange"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRef.html\" title=\"struct syn::PatRef\">PatRef</a>",synthetic:true,types:["syn::expr::PatRef"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>",synthetic:true,types:["syn::expr::PatSlice"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>",synthetic:true,types:["syn::expr::PatStruct"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>",synthetic:true,types:["syn::expr::PatTuple"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>",synthetic:true,types:["syn::expr::PatTupleStruct"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatVerbatim.html\" title=\"struct syn::PatVerbatim\">PatVerbatim</a>",synthetic:true,types:["syn::expr::PatVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>",synthetic:true,types:["syn::expr::PatWild"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>",synthetic:true,types:["syn::generics::BoundLifetimes"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>",synthetic:true,types:["syn::generics::ConstParam"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>",synthetic:true,types:["syn::generics::Generics"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>",synthetic:true,types:["syn::generics::LifetimeDef"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>",synthetic:true,types:["syn::generics::PredicateEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>",synthetic:true,types:["syn::generics::PredicateLifetime"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>",synthetic:true,types:["syn::generics::PredicateType"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>",synthetic:true,types:["syn::generics::TraitBound"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>",synthetic:true,types:["syn::generics::TypeParam"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>",synthetic:true,types:["syn::generics::WhereClause"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;",synthetic:true,types:["syn::generics::ImplGenerics"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;",synthetic:true,types:["syn::generics::Turbofish"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;",synthetic:true,types:["syn::generics::TypeGenerics"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ArgCaptured.html\" title=\"struct syn::ArgCaptured\">ArgCaptured</a>",synthetic:true,types:["syn::item::ArgCaptured"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ArgSelf.html\" title=\"struct syn::ArgSelf\">ArgSelf</a>",synthetic:true,types:["syn::item::ArgSelf"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ArgSelfRef.html\" title=\"struct syn::ArgSelfRef\">ArgSelfRef</a>",synthetic:true,types:["syn::item::ArgSelfRef"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.FnDecl.html\" title=\"struct syn::FnDecl\">FnDecl</a>",synthetic:true,types:["syn::item::FnDecl"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>",synthetic:true,types:["syn::item::ForeignItemFn"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>",synthetic:true,types:["syn::item::ForeignItemMacro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>",synthetic:true,types:["syn::item::ForeignItemStatic"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>",synthetic:true,types:["syn::item::ForeignItemType"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemVerbatim.html\" title=\"struct syn::ForeignItemVerbatim\">ForeignItemVerbatim</a>",synthetic:true,types:["syn::item::ForeignItemVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>",synthetic:true,types:["syn::item::ImplItemConst"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemExistential.html\" title=\"struct syn::ImplItemExistential\">ImplItemExistential</a>",synthetic:true,types:["syn::item::ImplItemExistential"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>",synthetic:true,types:["syn::item::ImplItemMacro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>",synthetic:true,types:["syn::item::ImplItemMethod"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>",synthetic:true,types:["syn::item::ImplItemType"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemVerbatim.html\" title=\"struct syn::ImplItemVerbatim\">ImplItemVerbatim</a>",synthetic:true,types:["syn::item::ImplItemVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>",synthetic:true,types:["syn::item::ItemConst"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>",synthetic:true,types:["syn::item::ItemEnum"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExistential.html\" title=\"struct syn::ItemExistential\">ItemExistential</a>",synthetic:true,types:["syn::item::ItemExistential"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>",synthetic:true,types:["syn::item::ItemExternCrate"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>",synthetic:true,types:["syn::item::ItemFn"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>",synthetic:true,types:["syn::item::ItemForeignMod"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>",synthetic:true,types:["syn::item::ItemImpl"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>",synthetic:true,types:["syn::item::ItemMacro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>",synthetic:true,types:["syn::item::ItemMacro2"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>",synthetic:true,types:["syn::item::ItemMod"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>",synthetic:true,types:["syn::item::ItemStatic"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>",synthetic:true,types:["syn::item::ItemStruct"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>",synthetic:true,types:["syn::item::ItemTrait"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>",synthetic:true,types:["syn::item::ItemTraitAlias"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>",synthetic:true,types:["syn::item::ItemType"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>",synthetic:true,types:["syn::item::ItemUnion"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>",synthetic:true,types:["syn::item::ItemUse"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemVerbatim.html\" title=\"struct syn::ItemVerbatim\">ItemVerbatim</a>",synthetic:true,types:["syn::item::ItemVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodSig.html\" title=\"struct syn::MethodSig\">MethodSig</a>",synthetic:true,types:["syn::item::MethodSig"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>",synthetic:true,types:["syn::item::TraitItemConst"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>",synthetic:true,types:["syn::item::TraitItemMacro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>",synthetic:true,types:["syn::item::TraitItemMethod"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>",synthetic:true,types:["syn::item::TraitItemType"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemVerbatim.html\" title=\"struct syn::TraitItemVerbatim\">TraitItemVerbatim</a>",synthetic:true,types:["syn::item::TraitItemVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>",synthetic:true,types:["syn::item::UseGlob"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>",synthetic:true,types:["syn::item::UseGroup"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>",synthetic:true,types:["syn::item::UseName"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>",synthetic:true,types:["syn::item::UsePath"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>",synthetic:true,types:["syn::item::UseRename"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>",synthetic:true,types:["syn::file::File"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>",synthetic:true,types:["syn::lifetime::Lifetime"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>",synthetic:true,types:["syn::lit::LitBool"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>",synthetic:true,types:["syn::lit::LitByte"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>",synthetic:true,types:["syn::lit::LitByteStr"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>",synthetic:true,types:["syn::lit::LitChar"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>",synthetic:true,types:["syn::lit::LitFloat"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>",synthetic:true,types:["syn::lit::LitInt"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>",synthetic:true,types:["syn::lit::LitStr"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitVerbatim.html\" title=\"struct syn::LitVerbatim\">LitVerbatim</a>",synthetic:true,types:["syn::lit::LitVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>",synthetic:true,types:["syn::mac::Macro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>",synthetic:true,types:["syn::derive::DataEnum"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>",synthetic:true,types:["syn::derive::DataStruct"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>",synthetic:true,types:["syn::derive::DataUnion"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>",synthetic:true,types:["syn::derive::DeriveInput"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>",synthetic:true,types:["syn::ty::Abi"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>",synthetic:true,types:["syn::ty::BareFnArg"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>",synthetic:true,types:["syn::ty::TypeArray"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>",synthetic:true,types:["syn::ty::TypeBareFn"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>",synthetic:true,types:["syn::ty::TypeGroup"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>",synthetic:true,types:["syn::ty::TypeImplTrait"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>",synthetic:true,types:["syn::ty::TypeInfer"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>",synthetic:true,types:["syn::ty::TypeMacro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>",synthetic:true,types:["syn::ty::TypeNever"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>",synthetic:true,types:["syn::ty::TypeParen"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>",synthetic:true,types:["syn::ty::TypePath"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>",synthetic:true,types:["syn::ty::TypePtr"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>",synthetic:true,types:["syn::ty::TypeReference"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>",synthetic:true,types:["syn::ty::TypeSlice"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>",synthetic:true,types:["syn::ty::TypeTraitObject"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>",synthetic:true,types:["syn::ty::TypeTuple"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeVerbatim.html\" title=\"struct syn::TypeVerbatim\">TypeVerbatim</a>",synthetic:true,types:["syn::ty::TypeVerbatim"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>",synthetic:true,types:["syn::path::AngleBracketedGenericArguments"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>",synthetic:true,types:["syn::path::Binding"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>",synthetic:true,types:["syn::path::Constraint"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>",synthetic:true,types:["syn::path::ParenthesizedGenericArguments"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>",synthetic:true,types:["syn::path::Path"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>",synthetic:true,types:["syn::path::PathSegment"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>",synthetic:true,types:["syn::path::QSelf"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/struct.Error.html\" title=\"struct syn::Error\">Error</a>",synthetic:true,types:["syn::error::Error"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>",synthetic:true,types:["syn::attr::AttrStyle"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>",synthetic:true,types:["syn::attr::Meta"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>",synthetic:true,types:["syn::attr::NestedMeta"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>",synthetic:true,types:["syn::data::Fields"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>",synthetic:true,types:["syn::data::Visibility"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>",synthetic:true,types:["syn::expr::Expr"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>",synthetic:true,types:["syn::expr::Member"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>",synthetic:true,types:["syn::expr::GenericMethodArgument"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>",synthetic:true,types:["syn::expr::Pat"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>",synthetic:true,types:["syn::expr::RangeLimits"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>",synthetic:true,types:["syn::expr::Stmt"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>",synthetic:true,types:["syn::generics::GenericParam"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>",synthetic:true,types:["syn::generics::TraitBoundModifier"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>",synthetic:true,types:["syn::generics::TypeParamBound"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>",synthetic:true,types:["syn::generics::WherePredicate"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>",synthetic:true,types:["syn::item::FnArg"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>",synthetic:true,types:["syn::item::ForeignItem"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>",synthetic:true,types:["syn::item::ImplItem"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>",synthetic:true,types:["syn::item::Item"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>",synthetic:true,types:["syn::item::TraitItem"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>",synthetic:true,types:["syn::item::UseTree"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.FloatSuffix.html\" title=\"enum syn::FloatSuffix\">FloatSuffix</a>",synthetic:true,types:["syn::lit::FloatSuffix"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.IntSuffix.html\" title=\"enum syn::IntSuffix\">IntSuffix</a>",synthetic:true,types:["syn::lit::IntSuffix"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>",synthetic:true,types:["syn::lit::Lit"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>",synthetic:true,types:["syn::lit::StrStyle"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>",synthetic:true,types:["syn::mac::MacroDelimiter"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>",synthetic:true,types:["syn::derive::Data"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>",synthetic:true,types:["syn::op::BinOp"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>",synthetic:true,types:["syn::op::UnOp"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.BareFnArgName.html\" title=\"enum syn::BareFnArgName\">BareFnArgName</a>",synthetic:true,types:["syn::ty::BareFnArgName"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>",synthetic:true,types:["syn::ty::ReturnType"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>",synthetic:true,types:["syn::ty::Type"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>",synthetic:true,types:["syn::path::GenericArgument"]},{text:"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>",synthetic:true,types:["syn::path::PathArguments"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>",synthetic:true,types:["syn::token::Underscore"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>",synthetic:true,types:["syn::token::Abstract"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>",synthetic:true,types:["syn::token::As"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>",synthetic:true,types:["syn::token::Async"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>",synthetic:true,types:["syn::token::Auto"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>",synthetic:true,types:["syn::token::Become"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>",synthetic:true,types:["syn::token::Box"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>",synthetic:true,types:["syn::token::Break"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>",synthetic:true,types:["syn::token::Const"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>",synthetic:true,types:["syn::token::Continue"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>",synthetic:true,types:["syn::token::Crate"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>",synthetic:true,types:["syn::token::Default"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>",synthetic:true,types:["syn::token::Do"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>",synthetic:true,types:["syn::token::Dyn"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>",synthetic:true,types:["syn::token::Else"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>",synthetic:true,types:["syn::token::Enum"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Existential.html\" title=\"struct syn::token::Existential\">Existential</a>",synthetic:true,types:["syn::token::Existential"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>",synthetic:true,types:["syn::token::Extern"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>",synthetic:true,types:["syn::token::Final"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>",synthetic:true,types:["syn::token::Fn"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>",synthetic:true,types:["syn::token::For"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>",synthetic:true,types:["syn::token::If"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>",synthetic:true,types:["syn::token::Impl"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>",synthetic:true,types:["syn::token::In"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>",synthetic:true,types:["syn::token::Let"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>",synthetic:true,types:["syn::token::Loop"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>",synthetic:true,types:["syn::token::Macro"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>",synthetic:true,types:["syn::token::Match"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>",synthetic:true,types:["syn::token::Mod"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>",synthetic:true,types:["syn::token::Move"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>",synthetic:true,types:["syn::token::Mut"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>",synthetic:true,types:["syn::token::Override"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>",synthetic:true,types:["syn::token::Priv"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>",synthetic:true,types:["syn::token::Pub"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>",synthetic:true,types:["syn::token::Ref"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>",synthetic:true,types:["syn::token::Return"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>",synthetic:true,types:["syn::token::SelfType"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>",synthetic:true,types:["syn::token::SelfValue"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>",synthetic:true,types:["syn::token::Static"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>",synthetic:true,types:["syn::token::Struct"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>",synthetic:true,types:["syn::token::Super"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>",synthetic:true,types:["syn::token::Trait"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>",synthetic:true,types:["syn::token::Try"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>",synthetic:true,types:["syn::token::Type"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>",synthetic:true,types:["syn::token::Typeof"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>",synthetic:true,types:["syn::token::Union"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>",synthetic:true,types:["syn::token::Unsafe"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>",synthetic:true,types:["syn::token::Unsized"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>",synthetic:true,types:["syn::token::Use"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>",synthetic:true,types:["syn::token::Virtual"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>",synthetic:true,types:["syn::token::Where"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>",synthetic:true,types:["syn::token::While"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>",synthetic:true,types:["syn::token::Yield"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>",synthetic:true,types:["syn::token::Add"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>",synthetic:true,types:["syn::token::AddEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>",synthetic:true,types:["syn::token::And"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>",synthetic:true,types:["syn::token::AndAnd"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>",synthetic:true,types:["syn::token::AndEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>",synthetic:true,types:["syn::token::At"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>",synthetic:true,types:["syn::token::Bang"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>",synthetic:true,types:["syn::token::Caret"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>",synthetic:true,types:["syn::token::CaretEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>",synthetic:true,types:["syn::token::Colon"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>",synthetic:true,types:["syn::token::Colon2"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>",synthetic:true,types:["syn::token::Comma"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>",synthetic:true,types:["syn::token::Div"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>",synthetic:true,types:["syn::token::DivEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>",synthetic:true,types:["syn::token::Dollar"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>",synthetic:true,types:["syn::token::Dot"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>",synthetic:true,types:["syn::token::Dot2"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>",synthetic:true,types:["syn::token::Dot3"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>",synthetic:true,types:["syn::token::DotDotEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>",synthetic:true,types:["syn::token::Eq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>",synthetic:true,types:["syn::token::EqEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>",synthetic:true,types:["syn::token::Ge"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>",synthetic:true,types:["syn::token::Gt"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>",synthetic:true,types:["syn::token::Le"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>",synthetic:true,types:["syn::token::Lt"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>",synthetic:true,types:["syn::token::MulEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>",synthetic:true,types:["syn::token::Ne"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>",synthetic:true,types:["syn::token::Or"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>",synthetic:true,types:["syn::token::OrEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>",synthetic:true,types:["syn::token::OrOr"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>",synthetic:true,types:["syn::token::Pound"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>",synthetic:true,types:["syn::token::Question"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>",synthetic:true,types:["syn::token::RArrow"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>",synthetic:true,types:["syn::token::LArrow"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>",synthetic:true,types:["syn::token::Rem"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>",synthetic:true,types:["syn::token::RemEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>",synthetic:true,types:["syn::token::FatArrow"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>",synthetic:true,types:["syn::token::Semi"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>",synthetic:true,types:["syn::token::Shl"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>",synthetic:true,types:["syn::token::ShlEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>",synthetic:true,types:["syn::token::Shr"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>",synthetic:true,types:["syn::token::ShrEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>",synthetic:true,types:["syn::token::Star"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>",synthetic:true,types:["syn::token::Sub"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>",synthetic:true,types:["syn::token::SubEq"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>",synthetic:true,types:["syn::token::Tilde"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>",synthetic:true,types:["syn::token::Brace"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>",synthetic:true,types:["syn::token::Bracket"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>",synthetic:true,types:["syn::token::Paren"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>",synthetic:true,types:["syn::token::Group"]},{text:"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>",synthetic:true,types:["syn::buffer::TokenBuffer"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;",synthetic:true,types:["syn::buffer::Cursor"]},{text:"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;",synthetic:true,types:["syn::punctuated::Punctuated"]},{text:"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;",synthetic:true,types:["syn::punctuated::Pairs"]},{text:"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;",synthetic:true,types:["syn::punctuated::PairsMut"]},{text:"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["syn::punctuated::IntoPairs"]},{text:"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T, P&gt;",synthetic:true,types:["syn::punctuated::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["syn::punctuated::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["syn::punctuated::IterMut"]},{text:"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["syn::punctuated::Pair"]},{text:"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;",synthetic:true,types:["syn::lookahead::Lookahead1"]},{text:"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;",synthetic:true,types:["syn::parse::ParseBuffer"]},{text:"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;",synthetic:true,types:["syn::parse::StepCursor"]},];
implementors["synstructure"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.BindingInfo.html\" title=\"struct synstructure::BindingInfo\">BindingInfo</a>&lt;'a&gt;",synthetic:true,types:["synstructure::BindingInfo"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.VariantAst.html\" title=\"struct synstructure::VariantAst\">VariantAst</a>&lt;'a&gt;",synthetic:true,types:["synstructure::VariantAst"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.VariantInfo.html\" title=\"struct synstructure::VariantInfo\">VariantInfo</a>&lt;'a&gt;",synthetic:true,types:["synstructure::VariantInfo"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"synstructure/struct.Structure.html\" title=\"struct synstructure::Structure\">Structure</a>&lt;'a&gt;",synthetic:true,types:["synstructure::Structure"]},{text:"impl Freeze for <a class=\"enum\" href=\"synstructure/enum.AddBounds.html\" title=\"enum synstructure::AddBounds\">AddBounds</a>",synthetic:true,types:["synstructure::AddBounds"]},{text:"impl Freeze for <a class=\"enum\" href=\"synstructure/enum.BindStyle.html\" title=\"enum synstructure::BindStyle\">BindStyle</a>",synthetic:true,types:["synstructure::BindStyle"]},];
implementors["tempfile"] = [{text:"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.TempDir.html\" title=\"struct tempfile::TempDir\">TempDir</a>",synthetic:true,types:["tempfile::dir::TempDir"]},{text:"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.NamedTempFile.html\" title=\"struct tempfile::NamedTempFile\">NamedTempFile</a>",synthetic:true,types:["tempfile::file::NamedTempFile"]},{text:"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.PathPersistError.html\" title=\"struct tempfile::PathPersistError\">PathPersistError</a>",synthetic:true,types:["tempfile::file::PathPersistError"]},{text:"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.PersistError.html\" title=\"struct tempfile::PersistError\">PersistError</a>",synthetic:true,types:["tempfile::file::PersistError"]},{text:"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.TempPath.html\" title=\"struct tempfile::TempPath\">TempPath</a>",synthetic:true,types:["tempfile::file::TempPath"]},{text:"impl Freeze for <a class=\"struct\" href=\"tempfile/struct.SpooledTempFile.html\" title=\"struct tempfile::SpooledTempFile\">SpooledTempFile</a>",synthetic:true,types:["tempfile::spooled::SpooledTempFile"]},{text:"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"tempfile/struct.Builder.html\" title=\"struct tempfile::Builder\">Builder</a>&lt;'a, 'b&gt;",synthetic:true,types:["tempfile::Builder"]},];
implementors["tendril"] = [{text:"impl&lt;F, A&nbsp;=&nbsp;<a class=\"struct\" href=\"tendril/struct.NonAtomic.html\" title=\"struct tendril::NonAtomic\">NonAtomic</a>&gt; !Freeze for <a class=\"struct\" href=\"tendril/struct.Tendril.html\" title=\"struct tendril::Tendril\">Tendril</a>&lt;F, A&gt;",synthetic:true,types:["tendril::tendril::Tendril"]},{text:"impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"tendril/struct.SendTendril.html\" title=\"struct tendril::SendTendril\">SendTendril</a>&lt;F&gt;",synthetic:true,types:["tendril::tendril::SendTendril"]},{text:"impl !Freeze for <a class=\"struct\" href=\"tendril/struct.Atomic.html\" title=\"struct tendril::Atomic\">Atomic</a>",synthetic:true,types:["tendril::tendril::Atomic"]},{text:"impl !Freeze for <a class=\"struct\" href=\"tendril/struct.NonAtomic.html\" title=\"struct tendril::NonAtomic\">NonAtomic</a>",synthetic:true,types:["tendril::tendril::NonAtomic"]},{text:"impl Freeze for <a class=\"struct\" href=\"tendril/struct.IncompleteUtf8.html\" title=\"struct tendril::IncompleteUtf8\">IncompleteUtf8</a>",synthetic:true,types:["tendril::utf8_decode::IncompleteUtf8"]},{text:"impl Freeze for <a class=\"enum\" href=\"tendril/enum.SubtendrilError.html\" title=\"enum tendril::SubtendrilError\">SubtendrilError</a>",synthetic:true,types:["tendril::tendril::SubtendrilError"]},{text:"impl Freeze for <a class=\"struct\" href=\"tendril/fmt/struct.Bytes.html\" title=\"struct tendril::fmt::Bytes\">Bytes</a>",synthetic:true,types:["tendril::fmt::Bytes"]},{text:"impl Freeze for <a class=\"struct\" href=\"tendril/fmt/struct.ASCII.html\" title=\"struct tendril::fmt::ASCII\">ASCII</a>",synthetic:true,types:["tendril::fmt::ASCII"]},{text:"impl Freeze for <a class=\"struct\" href=\"tendril/fmt/struct.UTF8.html\" title=\"struct tendril::fmt::UTF8\">UTF8</a>",synthetic:true,types:["tendril::fmt::UTF8"]},{text:"impl Freeze for <a class=\"struct\" href=\"tendril/fmt/struct.WTF8.html\" title=\"struct tendril::fmt::WTF8\">WTF8</a>",synthetic:true,types:["tendril::fmt::WTF8"]},{text:"impl Freeze for <a class=\"struct\" href=\"tendril/fmt/struct.Latin1.html\" title=\"struct tendril::fmt::Latin1\">Latin1</a>",synthetic:true,types:["tendril::fmt::Latin1"]},{text:"impl Freeze for <a class=\"struct\" href=\"tendril/fmt/imp/struct.Fixup.html\" title=\"struct tendril::fmt::imp::Fixup\">Fixup</a>",synthetic:true,types:["tendril::fmt::imp::Fixup"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tendril/fmt/imp/struct.SingleByteCharIndices.html\" title=\"struct tendril::fmt::imp::SingleByteCharIndices\">SingleByteCharIndices</a>&lt;'a&gt;",synthetic:true,types:["tendril::fmt::imp::SingleByteCharIndices"]},{text:"impl&lt;Sink, A&gt; Freeze for <a class=\"struct\" href=\"tendril/stream/struct.Utf8LossyDecoder.html\" title=\"struct tendril::stream::Utf8LossyDecoder\">Utf8LossyDecoder</a>&lt;Sink, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Sink: Freeze,&nbsp;</span>",synthetic:true,types:["tendril::stream::Utf8LossyDecoder"]},];
implementors["termcolor"] = [{text:"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStream.html\" title=\"struct termcolor::StandardStream\">StandardStream</a>",synthetic:true,types:["termcolor::StandardStream"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.StandardStreamLock.html\" title=\"struct termcolor::StandardStreamLock\">StandardStreamLock</a>&lt;'a&gt;",synthetic:true,types:["termcolor::StandardStreamLock"]},{text:"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferedStandardStream.html\" title=\"struct termcolor::BufferedStandardStream\">BufferedStandardStream</a>",synthetic:true,types:["termcolor::BufferedStandardStream"]},{text:"impl !Freeze for <a class=\"struct\" href=\"termcolor/struct.BufferWriter.html\" title=\"struct termcolor::BufferWriter\">BufferWriter</a>",synthetic:true,types:["termcolor::BufferWriter"]},{text:"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.Buffer.html\" title=\"struct termcolor::Buffer\">Buffer</a>",synthetic:true,types:["termcolor::Buffer"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.NoColor.html\" title=\"struct termcolor::NoColor\">NoColor</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["termcolor::NoColor"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"termcolor/struct.Ansi.html\" title=\"struct termcolor::Ansi\">Ansi</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["termcolor::Ansi"]},{text:"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ColorSpec.html\" title=\"struct termcolor::ColorSpec\">ColorSpec</a>",synthetic:true,types:["termcolor::ColorSpec"]},{text:"impl Freeze for <a class=\"struct\" href=\"termcolor/struct.ParseColorError.html\" title=\"struct termcolor::ParseColorError\">ParseColorError</a>",synthetic:true,types:["termcolor::ParseColorError"]},{text:"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.ColorChoice.html\" title=\"enum termcolor::ColorChoice\">ColorChoice</a>",synthetic:true,types:["termcolor::ColorChoice"]},{text:"impl Freeze for <a class=\"enum\" href=\"termcolor/enum.Color.html\" title=\"enum termcolor::Color\">Color</a>",synthetic:true,types:["termcolor::Color"]},];
implementors["textwrap"] = [{text:"impl Freeze for <a class=\"struct\" href=\"textwrap/struct.HyphenSplitter.html\" title=\"struct textwrap::HyphenSplitter\">HyphenSplitter</a>",synthetic:true,types:["textwrap::splitting::HyphenSplitter"]},{text:"impl Freeze for <a class=\"struct\" href=\"textwrap/struct.NoHyphenation.html\" title=\"struct textwrap::NoHyphenation\">NoHyphenation</a>",synthetic:true,types:["textwrap::splitting::NoHyphenation"]},{text:"impl&lt;'a, S&gt; Freeze for <a class=\"struct\" href=\"textwrap/struct.Wrapper.html\" title=\"struct textwrap::Wrapper\">Wrapper</a>&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["textwrap::Wrapper"]},{text:"impl&lt;'a, S&gt; Freeze for <a class=\"struct\" href=\"textwrap/struct.IntoWrapIter.html\" title=\"struct textwrap::IntoWrapIter\">IntoWrapIter</a>&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["textwrap::IntoWrapIter"]},{text:"impl&lt;'w, 'a, S&gt; Freeze for <a class=\"struct\" href=\"textwrap/struct.WrapIter.html\" title=\"struct textwrap::WrapIter\">WrapIter</a>&lt;'w, 'a, S&gt;",synthetic:true,types:["textwrap::WrapIter"]},];
implementors["thread_local"] = [{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.ThreadLocal.html\" title=\"struct thread_local::ThreadLocal\">ThreadLocal</a>&lt;T&gt;",synthetic:true,types:["thread_local::ThreadLocal"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"thread_local/struct.IterMut.html\" title=\"struct thread_local::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["thread_local::IterMut"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.IntoIter.html\" title=\"struct thread_local::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["thread_local::IntoIter"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"thread_local/struct.CachedThreadLocal.html\" title=\"struct thread_local::CachedThreadLocal\">CachedThreadLocal</a>&lt;T&gt;",synthetic:true,types:["thread_local::CachedThreadLocal"]},];
implementors["time"] = [{text:"impl Freeze for <a class=\"struct\" href=\"time/struct.Duration.html\" title=\"struct time::Duration\">Duration</a>",synthetic:true,types:["time::duration::Duration"]},{text:"impl Freeze for <a class=\"struct\" href=\"time/struct.OutOfRangeError.html\" title=\"struct time::OutOfRangeError\">OutOfRangeError</a>",synthetic:true,types:["time::duration::OutOfRangeError"]},{text:"impl Freeze for <a class=\"struct\" href=\"time/struct.Timespec.html\" title=\"struct time::Timespec\">Timespec</a>",synthetic:true,types:["time::Timespec"]},{text:"impl Freeze for <a class=\"struct\" href=\"time/struct.PreciseTime.html\" title=\"struct time::PreciseTime\">PreciseTime</a>",synthetic:true,types:["time::PreciseTime"]},{text:"impl Freeze for <a class=\"struct\" href=\"time/struct.SteadyTime.html\" title=\"struct time::SteadyTime\">SteadyTime</a>",synthetic:true,types:["time::SteadyTime"]},{text:"impl Freeze for <a class=\"struct\" href=\"time/struct.Tm.html\" title=\"struct time::Tm\">Tm</a>",synthetic:true,types:["time::Tm"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"time/struct.TmFmt.html\" title=\"struct time::TmFmt\">TmFmt</a>&lt;'a&gt;",synthetic:true,types:["time::TmFmt"]},{text:"impl Freeze for <a class=\"enum\" href=\"time/enum.ParseError.html\" title=\"enum time::ParseError\">ParseError</a>",synthetic:true,types:["time::ParseError"]},];
implementors["toml"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"toml/struct.Spanned.html\" title=\"struct toml::Spanned\">Spanned</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["toml::spanned::Spanned"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;K, V&gt;",synthetic:true,types:["toml::map::Map"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.VacantEntry.html\" title=\"struct toml::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;",synthetic:true,types:["toml::map::VacantEntry"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.OccupiedEntry.html\" title=\"struct toml::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;",synthetic:true,types:["toml::map::OccupiedEntry"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Iter.html\" title=\"struct toml::map::Iter\">Iter</a>&lt;'a&gt;",synthetic:true,types:["toml::map::Iter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.IterMut.html\" title=\"struct toml::map::IterMut\">IterMut</a>&lt;'a&gt;",synthetic:true,types:["toml::map::IterMut"]},{text:"impl Freeze for <a class=\"struct\" href=\"toml/map/struct.IntoIter.html\" title=\"struct toml::map::IntoIter\">IntoIter</a>",synthetic:true,types:["toml::map::IntoIter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Keys.html\" title=\"struct toml::map::Keys\">Keys</a>&lt;'a&gt;",synthetic:true,types:["toml::map::Keys"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Values.html\" title=\"struct toml::map::Values\">Values</a>&lt;'a&gt;",synthetic:true,types:["toml::map::Values"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml/map/enum.Entry.html\" title=\"enum toml::map::Entry\">Entry</a>&lt;'a&gt;",synthetic:true,types:["toml::map::Entry"]},{text:"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.Datetime.html\" title=\"struct toml::value::Datetime\">Datetime</a>",synthetic:true,types:["toml::datetime::Datetime"]},{text:"impl Freeze for <a class=\"struct\" href=\"toml/value/struct.DatetimeParseError.html\" title=\"struct toml::value::DatetimeParseError\">DatetimeParseError</a>",synthetic:true,types:["toml::datetime::DatetimeParseError"]},{text:"impl Freeze for <a class=\"enum\" href=\"toml/value/enum.Value.html\" title=\"enum toml::value::Value\">Value</a>",synthetic:true,types:["toml::value::Value"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/ser/struct.Serializer.html\" title=\"struct toml::ser::Serializer\">Serializer</a>&lt;'a&gt;",synthetic:true,types:["toml::ser::Serializer"]},{text:"impl Freeze for <a class=\"enum\" href=\"toml/ser/enum.Error.html\" title=\"enum toml::ser::Error\">Error</a>",synthetic:true,types:["toml::ser::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>",synthetic:true,types:["toml::de::Error"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/de/struct.Deserializer.html\" title=\"struct toml::de::Deserializer\">Deserializer</a>&lt;'a&gt;",synthetic:true,types:["toml::de::Deserializer"]},];
implementors["toml_query"] = [{text:"impl Freeze for <a class=\"enum\" href=\"toml_query/error/enum.Error.html\" title=\"enum toml_query::error::Error\">Error</a>",synthetic:true,types:["toml_query::error::Error"]},];
implementors["typemap"] = [{text:"impl&lt;A:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"typemap/struct.TypeMap.html\" title=\"struct typemap::TypeMap\">TypeMap</a>&lt;A&gt;",synthetic:true,types:["typemap::TypeMap"]},{text:"impl&lt;'a, K, A:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"typemap/struct.OccupiedEntry.html\" title=\"struct typemap::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, A&gt;",synthetic:true,types:["typemap::OccupiedEntry"]},{text:"impl&lt;'a, K, A:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"typemap/struct.VacantEntry.html\" title=\"struct typemap::VacantEntry\">VacantEntry</a>&lt;'a, K, A&gt;",synthetic:true,types:["typemap::VacantEntry"]},{text:"impl&lt;'a, K, A:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"enum\" href=\"typemap/enum.Entry.html\" title=\"enum typemap::Entry\">Entry</a>&lt;'a, K, A&gt;",synthetic:true,types:["typemap::Entry"]},];
implementors["typenum"] = [{text:"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>",synthetic:true,types:["typenum::Greater"]},{text:"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>",synthetic:true,types:["typenum::Less"]},{text:"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>",synthetic:true,types:["typenum::Equal"]},{text:"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>",synthetic:true,types:["typenum::bit::B0"]},{text:"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>",synthetic:true,types:["typenum::bit::B1"]},{text:"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;",synthetic:true,types:["typenum::int::PInt"]},{text:"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt;",synthetic:true,types:["typenum::int::NInt"]},{text:"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>",synthetic:true,types:["typenum::int::Z0"]},{text:"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>",synthetic:true,types:["typenum::uint::UTerm"]},{text:"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;",synthetic:true,types:["typenum::uint::UInt"]},{text:"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>",synthetic:true,types:["typenum::array::ATerm"]},{text:"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt;",synthetic:true,types:["typenum::array::TArr"]},];
implementors["ucd_trie"] = [{text:"impl Freeze for <a class=\"struct\" href=\"ucd_trie/struct.TrieSetOwned.html\" title=\"struct ucd_trie::TrieSetOwned\">TrieSetOwned</a>",synthetic:true,types:["ucd_trie::owned::TrieSetOwned"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"ucd_trie/struct.TrieSetSlice.html\" title=\"struct ucd_trie::TrieSetSlice\">TrieSetSlice</a>&lt;'a&gt;",synthetic:true,types:["ucd_trie::TrieSetSlice"]},{text:"impl Freeze for <a class=\"enum\" href=\"ucd_trie/enum.Error.html\" title=\"enum ucd_trie::Error\">Error</a>",synthetic:true,types:["ucd_trie::owned::Error"]},];
implementors["unicase"] = [{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.UniCase.html\" title=\"struct unicase::UniCase\">UniCase</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["unicase::UniCase"]},{text:"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"unicase/struct.Ascii.html\" title=\"struct unicase::Ascii\">Ascii</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["unicase::Ascii"]},];
implementors["unicode_bidi"] = [{text:"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.ParagraphInfo.html\" title=\"struct unicode_bidi::ParagraphInfo\">ParagraphInfo</a>",synthetic:true,types:["unicode_bidi::ParagraphInfo"]},{text:"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.InitialInfo.html\" title=\"struct unicode_bidi::InitialInfo\">InitialInfo</a>&lt;'text&gt;",synthetic:true,types:["unicode_bidi::InitialInfo"]},{text:"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.BidiInfo.html\" title=\"struct unicode_bidi::BidiInfo\">BidiInfo</a>&lt;'text&gt;",synthetic:true,types:["unicode_bidi::BidiInfo"]},{text:"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.BidiClass.html\" title=\"enum unicode_bidi::BidiClass\">BidiClass</a>",synthetic:true,types:["unicode_bidi::char_data::tables::BidiClass"]},{text:"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/level/struct.Level.html\" title=\"struct unicode_bidi::level::Level\">Level</a>",synthetic:true,types:["unicode_bidi::level::Level"]},{text:"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/level/enum.Error.html\" title=\"enum unicode_bidi::level::Error\">Error</a>",synthetic:true,types:["unicode_bidi::level::Error"]},];
implementors["unicode_normalization"] = [{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Decompositions.html\" title=\"struct unicode_normalization::Decompositions\">Decompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["unicode_normalization::decompose::Decompositions"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Recompositions.html\" title=\"struct unicode_normalization::Recompositions\">Recompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["unicode_normalization::recompose::Recompositions"]},{text:"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.StreamSafe.html\" title=\"struct unicode_normalization::StreamSafe\">StreamSafe</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["unicode_normalization::stream_safe::StreamSafe"]},{text:"impl Freeze for <a class=\"enum\" href=\"unicode_normalization/enum.IsNormalized.html\" title=\"enum unicode_normalization::IsNormalized\">IsNormalized</a>",synthetic:true,types:["unicode_normalization::quick_check::IsNormalized"]},];
implementors["unicode_segmentation"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.Graphemes.html\" title=\"struct unicode_segmentation::Graphemes\">Graphemes</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::grapheme::Graphemes"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.GraphemeIndices.html\" title=\"struct unicode_segmentation::GraphemeIndices\">GraphemeIndices</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::grapheme::GraphemeIndices"]},{text:"impl Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.GraphemeCursor.html\" title=\"struct unicode_segmentation::GraphemeCursor\">GraphemeCursor</a>",synthetic:true,types:["unicode_segmentation::grapheme::GraphemeCursor"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UWordBounds.html\" title=\"struct unicode_segmentation::UWordBounds\">UWordBounds</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::word::UWordBounds"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UWordBoundIndices.html\" title=\"struct unicode_segmentation::UWordBoundIndices\">UWordBoundIndices</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::word::UWordBoundIndices"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UnicodeWords.html\" title=\"struct unicode_segmentation::UnicodeWords\">UnicodeWords</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::word::UnicodeWords"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.USentenceBounds.html\" title=\"struct unicode_segmentation::USentenceBounds\">USentenceBounds</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::sentence::USentenceBounds"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.USentenceBoundIndices.html\" title=\"struct unicode_segmentation::USentenceBoundIndices\">USentenceBoundIndices</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::sentence::USentenceBoundIndices"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"unicode_segmentation/struct.UnicodeSentences.html\" title=\"struct unicode_segmentation::UnicodeSentences\">UnicodeSentences</a>&lt;'a&gt;",synthetic:true,types:["unicode_segmentation::sentence::UnicodeSentences"]},{text:"impl Freeze for <a class=\"enum\" href=\"unicode_segmentation/enum.GraphemeIncomplete.html\" title=\"enum unicode_segmentation::GraphemeIncomplete\">GraphemeIncomplete</a>",synthetic:true,types:["unicode_segmentation::grapheme::GraphemeIncomplete"]},];
implementors["url"] = [{text:"impl Freeze for <a class=\"struct\" href=\"url/struct.OpaqueOrigin.html\" title=\"struct url::OpaqueOrigin\">OpaqueOrigin</a>",synthetic:true,types:["url::origin::OpaqueOrigin"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.PathSegmentsMut.html\" title=\"struct url::PathSegmentsMut\">PathSegmentsMut</a>&lt;'a&gt;",synthetic:true,types:["url::path_segments::PathSegmentsMut"]},{text:"impl Freeze for <a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>",synthetic:true,types:["url::Url"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.ParseOptions.html\" title=\"struct url::ParseOptions\">ParseOptions</a>&lt;'a&gt;",synthetic:true,types:["url::ParseOptions"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.UrlQuery.html\" title=\"struct url::UrlQuery\">UrlQuery</a>&lt;'a&gt;",synthetic:true,types:["url::UrlQuery"]},{text:"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"url/enum.Host.html\" title=\"enum url::Host\">Host</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["url::host::Host"]},{text:"impl Freeze for <a class=\"enum\" href=\"url/enum.Origin.html\" title=\"enum url::Origin\">Origin</a>",synthetic:true,types:["url::origin::Origin"]},{text:"impl Freeze for <a class=\"enum\" href=\"url/enum.ParseError.html\" title=\"enum url::ParseError\">ParseError</a>",synthetic:true,types:["url::parser::ParseError"]},{text:"impl Freeze for <a class=\"enum\" href=\"url/enum.SyntaxViolation.html\" title=\"enum url::SyntaxViolation\">SyntaxViolation</a>",synthetic:true,types:["url::parser::SyntaxViolation"]},{text:"impl Freeze for <a class=\"enum\" href=\"url/enum.Position.html\" title=\"enum url::Position\">Position</a>",synthetic:true,types:["url::slicing::Position"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.Parse.html\" title=\"struct url::form_urlencoded::Parse\">Parse</a>&lt;'a&gt;",synthetic:true,types:["url::form_urlencoded::Parse"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.ParseIntoOwned.html\" title=\"struct url::form_urlencoded::ParseIntoOwned\">ParseIntoOwned</a>&lt;'a&gt;",synthetic:true,types:["url::form_urlencoded::ParseIntoOwned"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.ByteSerialize.html\" title=\"struct url::form_urlencoded::ByteSerialize\">ByteSerialize</a>&lt;'a&gt;",synthetic:true,types:["url::form_urlencoded::ByteSerialize"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"url/form_urlencoded/struct.Serializer.html\" title=\"struct url::form_urlencoded::Serializer\">Serializer</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["url::form_urlencoded::Serializer"]},];
implementors["utf8"] = [{text:"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"utf8/struct.LossyDecoder.html\" title=\"struct utf8::LossyDecoder\">LossyDecoder</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["utf8::lossy::LossyDecoder"]},{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"utf8/struct.BufReadDecoder.html\" title=\"struct utf8::BufReadDecoder\">BufReadDecoder</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["utf8::read::BufReadDecoder"]},{text:"impl Freeze for <a class=\"struct\" href=\"utf8/struct.Incomplete.html\" title=\"struct utf8::Incomplete\">Incomplete</a>",synthetic:true,types:["utf8::Incomplete"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"utf8/enum.BufReadDecoderError.html\" title=\"enum utf8::BufReadDecoderError\">BufReadDecoderError</a>&lt;'a&gt;",synthetic:true,types:["utf8::read::BufReadDecoderError"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"utf8/enum.DecodeError.html\" title=\"enum utf8::DecodeError\">DecodeError</a>&lt;'a&gt;",synthetic:true,types:["utf8::DecodeError"]},];
implementors["vec_map"] = [{text:"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.VecMap.html\" title=\"struct vec_map::VecMap\">VecMap</a>&lt;V&gt;",synthetic:true,types:["vec_map::VecMap"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.VacantEntry.html\" title=\"struct vec_map::VacantEntry\">VacantEntry</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::VacantEntry"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.OccupiedEntry.html\" title=\"struct vec_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::OccupiedEntry"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Iter.html\" title=\"struct vec_map::Iter\">Iter</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::Iter"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.IterMut.html\" title=\"struct vec_map::IterMut\">IterMut</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::IterMut"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Keys.html\" title=\"struct vec_map::Keys\">Keys</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::Keys"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Values.html\" title=\"struct vec_map::Values\">Values</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::Values"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.ValuesMut.html\" title=\"struct vec_map::ValuesMut\">ValuesMut</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::ValuesMut"]},{text:"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.IntoIter.html\" title=\"struct vec_map::IntoIter\">IntoIter</a>&lt;V&gt;",synthetic:true,types:["vec_map::IntoIter"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Drain.html\" title=\"struct vec_map::Drain\">Drain</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::Drain"]},{text:"impl&lt;'a, V&gt; Freeze for <a class=\"enum\" href=\"vec_map/enum.Entry.html\" title=\"enum vec_map::Entry\">Entry</a>&lt;'a, V&gt;",synthetic:true,types:["vec_map::Entry"]},];
implementors["walkdir"] = [{text:"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.DirEntry.html\" title=\"struct walkdir::DirEntry\">DirEntry</a>",synthetic:true,types:["walkdir::dent::DirEntry"]},{text:"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.Error.html\" title=\"struct walkdir::Error\">Error</a>",synthetic:true,types:["walkdir::error::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.WalkDir.html\" title=\"struct walkdir::WalkDir\">WalkDir</a>",synthetic:true,types:["walkdir::WalkDir"]},{text:"impl Freeze for <a class=\"struct\" href=\"walkdir/struct.IntoIter.html\" title=\"struct walkdir::IntoIter\">IntoIter</a>",synthetic:true,types:["walkdir::IntoIter"]},{text:"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"walkdir/struct.FilterEntry.html\" title=\"struct walkdir::FilterEntry\">FilterEntry</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>",synthetic:true,types:["walkdir::FilterEntry"]},];
implementors["ws"] = [{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Sender.html\" title=\"struct ws::Sender\">Sender</a>",synthetic:true,types:["ws::communication::Sender"]},{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Frame.html\" title=\"struct ws::Frame\">Frame</a>",synthetic:true,types:["ws::frame::Frame"]},{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Handshake.html\" title=\"struct ws::Handshake\">Handshake</a>",synthetic:true,types:["ws::handshake::Handshake"]},{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Request.html\" title=\"struct ws::Request\">Request</a>",synthetic:true,types:["ws::handshake::Request"]},{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Response.html\" title=\"struct ws::Response\">Response</a>",synthetic:true,types:["ws::handshake::Response"]},{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Error.html\" title=\"struct ws::Error\">Error</a>",synthetic:true,types:["ws::result::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Settings.html\" title=\"struct ws::Settings\">Settings</a>",synthetic:true,types:["ws::Settings"]},{text:"impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"ws/struct.WebSocket.html\" title=\"struct ws::WebSocket\">WebSocket</a>&lt;F&gt;",synthetic:true,types:["ws::WebSocket"]},{text:"impl Freeze for <a class=\"struct\" href=\"ws/struct.Builder.html\" title=\"struct ws::Builder\">Builder</a>",synthetic:true,types:["ws::Builder"]},{text:"impl Freeze for <a class=\"enum\" href=\"ws/enum.Message.html\" title=\"enum ws::Message\">Message</a>",synthetic:true,types:["ws::message::Message"]},{text:"impl Freeze for <a class=\"enum\" href=\"ws/enum.CloseCode.html\" title=\"enum ws::CloseCode\">CloseCode</a>",synthetic:true,types:["ws::protocol::CloseCode"]},{text:"impl Freeze for <a class=\"enum\" href=\"ws/enum.OpCode.html\" title=\"enum ws::OpCode\">OpCode</a>",synthetic:true,types:["ws::protocol::OpCode"]},{text:"impl Freeze for <a class=\"enum\" href=\"ws/enum.ErrorKind.html\" title=\"enum ws::ErrorKind\">Kind</a>",synthetic:true,types:["ws::result::Kind"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()